{"ast":null,"code":"var _jsxFileName = \"/home/akram/CreamyCreations/front/src/page/Admin/Events.js\";\nimport React from 'react';\nimport './Events.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col } from 'react-bootstrap';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport { AddEventForm } from '../../components/AddEventForm';\nexport default class Events extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Description: [],\n      Location: [],\n      Date: [],\n      Events: [],\n      addModalShow: false\n    };\n  }\n\n  async componentDidMount() {\n    //Events\n    const response = await fetch('http://localhost:8080/Events/');\n    const result = await response.json();\n    console.log(result);\n    this.setState({\n      Events: result\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const responseO = await fetch(`http://localhost:8080/Events/create/?date=${this.state.date}&description=${this.state.description}&Location=${this.state.Location}&Events_ID=dw`);\n    const result = await responseO.json();\n    window.location.reload();\n  } //src = {`http://localhost:8080/images/${Event.eventImg}`\n\n\n  render() {\n    // let addModalClose = () => this.setState({ addModalShow: false });\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"dsv\"));\n  }\n\n}","map":{"version":3,"sources":["/home/akram/CreamyCreations/front/src/page/Admin/Events.js"],"names":["React","Row","Col","Button","ButtonToolbar","AddEventForm","Events","Component","constructor","props","state","Description","Location","Date","addModalShow","componentDidMount","response","fetch","result","json","console","log","setState","handleSubmit","event","preventDefault","responseO","date","description","window","location","reload","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAO,sCAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,iBAAtC;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACC,eAAe,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITP,MAAAA,MAAM,EAAE,EAJC;AAKTQ,MAAAA,YAAY,EAAE;AALL,KAAb;AAOH;;AACD,QAAMC,iBAAN,GAA0B;AACtB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAA5B;AACA,UAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEA,SAAKI,QAAL,CAAc;AACVhB,MAAAA,MAAM,EAAEY;AADE,KAAd;AAGH;;AAGD,QAAMK,YAAN,CAAmBC,KAAnB,EAA0B;AAEtBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,SAAS,GAAG,MAAMT,KAAK,CAAE,6CAA4C,KAAKP,KAAL,CAAWiB,IAAK,gBAAe,KAAKjB,KAAL,CAAWkB,WAAY,aAAY,KAAKlB,KAAL,CAAWE,QAAS,eAApI,CAA7B;AACA,UAAMM,MAAM,GAAG,MAAMQ,SAAS,CAACP,IAAV,EAArB;AACAU,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAEH,GA9BgD,CAqChD;;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA,WACI,0CAuDZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvDY,CADJ;AA4DK;;AArGwC","sourcesContent":["import React from 'react';\nimport './Events.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col } from 'react-bootstrap';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport { AddEventForm } from '../../components/AddEventForm';\n export default class Events extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Description: [],\n            Location: [],\n            Date: [],\n            Events: [],\n            addModalShow: false,\n        };\n    }\n    async componentDidMount() {\n        //Events\n        const response = await fetch('http://localhost:8080/Events/');\n        const result = await response.json();\n        console.log(result);\n\n        this.setState({\n            Events: result\n        })\n    }\n\n\n    async handleSubmit(event) {\n\n        event.preventDefault()\n        const responseO = await fetch(`http://localhost:8080/Events/create/?date=${this.state.date}&description=${this.state.description}&Location=${this.state.Location}&Events_ID=dw`);\n        const result = await responseO.json();\n        window.location.reload();\n\n    }\n\n\n\n\n\n\n     //src = {`http://localhost:8080/images/${Event.eventImg}`\n \n    render() {\n        // let addModalClose = () => this.setState({ addModalShow: false });\n        return (\n            <>\n              {/* <ButtonToolbar>\n                    <Button\n                        variant=\"primary\"\n                        onClick={() => this.setState({ addModalShow: true })}\n                    > Add New Event </Button>\n                    <AddEventForm\n                        show={this.state.addModalShow}\n                        onHide={addModalClose}\n                    />\n\n\n                </ButtonToolbar> */}\n                {/* {this.state.Events.map(Event =>\n                    <Row className=\"row\">\n                        <Col calssName=\"col\" sm={2}>\n                            <img\n                                width={170}\n                                height={170}\n                                className=\"mr-3 img_product\"\n                                alt=\"Generic placeholder\"\n                                src={`http://localhost:8080/images/${Event.eventImg}`}\n                            />\n\n                        </Col>\n\n                        <Col className=\"col\" sm={8}>\n                            <span>Description: {Event.description}</span><br /><hr />\n                            <span>Location: {Event.location}</span><br /><hr />\n                            <span>Date: {Event.date}</span><br />\n\n                        </Col>\n\n                        <Col className=\"col\" sm>\n                            <div className=\"icon\">\n\n                                <div className=\"lid\" />\n                                <div className=\"lidcap\" />\n                                <div className=\"bin\" />\n                            </div>\n                            <svg onClick={this.del = async () => {\n                                window.confirm('Are you sure you wish to delete this item?')\n                                window.location.reload();\n                                const responsep = await fetch(`http://localhost:8080/Events/delete/${Event.ID}`);\n                                const resultp = await responsep.json();\n                                console.log(resultp);\n                            }} className=\"icon-trash\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 28 40\" width={40} height={40}>\n                                <path className=\"trash-lid\" fillRule=\"evenodd\" d=\"M6 15l4 0 0-3 8 0 0 3 4 0 0 2 -16 0zM12 14l4 0 0 1 -4 0z\" />\n                                <path className=\"trash-can\" d=\"M8 17h2v9h8v-9h2v9a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2z\" />\n                            </svg>\n                        </Col>\n\n                    </Row>\n\n                )} */}\n<p>dsv</p>\n             </>\n        );\n    \n            }\n        }"]},"metadata":{},"sourceType":"module"}