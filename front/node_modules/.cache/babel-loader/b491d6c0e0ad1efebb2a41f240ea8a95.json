{"ast":null,"code":"var _jsxFileName = \"/home/akram/CreamyCreations/front/src/page/Products/Products.js\";\nimport React from 'react';\nimport '../Products/Products.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Dropdown, MenuItem, Button, ButtonToolbar, DropdownButton, SplitButton, Container, Row, Col, FormControl, Nav, thumbnail, Table, Image } from 'react-bootstrap';\nimport Modal from \"../../components/Model\";\nimport ImageGallery from 'react-image-gallery';\nimport ProductsItem from '../../components/ProdectsItem';\nexport default class Products extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      name: \"\",\n      modalInputName: \"\",\n      Products: [],\n      Categories: [],\n      Cate: [],\n      Images: []\n    };\n  }\n\n  async componentDidMount() {\n    //Products\n    const response = await fetch('http://localhost:8080/Products/');\n    const result = await response.json();\n    console.log(result); //Gategories\n\n    const responseG = await fetch('http://localhost:8080/Categories/');\n    const resultG = await responseG.json();\n    console.log(resultG); //ProductsImage\n\n    const responseI = await fetch('http://localhost:8080/ProductImages/');\n    const resultI = await responseI.json();\n    console.log(resultI); //CatIDPro\n\n    const responseID = await fetch('http://localhost:8080/CatIDPro/');\n    const resulta = await responseID.json();\n    console.log(resulta);\n    this.setState({\n      Products: result,\n      error: \"none\",\n      Categories: resultG,\n      error: \"none\",\n      Cate: resulta,\n      error: \"none\",\n      Images: resultI,\n      error: \"none\"\n    });\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    this.setState({\n      name: this.state.modalInputName\n    });\n    this.modalClose();\n  }\n\n  modalOpen() {\n    this.setState({\n      modal: true\n    });\n  }\n\n  modalClose() {\n    this.setState({\n      modalInputName: \"\",\n      modal: false\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Modal, {\n      className: \"formm\",\n      show: this.state.modal,\n      handleClose: e => this.modalClose(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Enter Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.modalInputName,\n      name: \"modalInputName\",\n      onChange: e => this.handleChange(e),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Enter Phone:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.modalInputName,\n      name: \"modalInputName\",\n      onChange: e => this.handleChange(e),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Enter Date:\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.modalInputName,\n      name: \"modalInputName\",\n      onChange: e => this.handleChange(e),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"modal-close\",\n      onClick: e => this.handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.Images.map(image => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, image.path)), this.state.Cate.map(Categorie => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"topicPro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, Categorie.name), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.Products.map((product, index) => React.createElement(ProductsItem, {\n      value: product,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["/home/akram/CreamyCreations/front/src/page/Products/Products.js"],"names":["React","Dropdown","MenuItem","Button","ButtonToolbar","DropdownButton","SplitButton","Container","Row","Col","FormControl","Nav","thumbnail","Table","Image","Modal","ImageGallery","ProductsItem","Products","Component","constructor","props","state","modal","name","modalInputName","Categories","Cate","Images","componentDidMount","response","fetch","result","json","console","log","responseG","resultG","responseI","resultI","responseID","resulta","setState","error","handleChange","e","target","value","handleSubmit","modalClose","modalOpen","render","map","image","path","Categorie","product","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../Products/Products.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Dropdown, MenuItem, Button, ButtonToolbar, DropdownButton, SplitButton, Container, Row, Col, FormControl, Nav, thumbnail, Table, Image } from 'react-bootstrap';\nimport Modal from \"../../components/Model\";\nimport ImageGallery from 'react-image-gallery';\nimport ProductsItem from '../../components/ProdectsItem'\n\nexport default class Products extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modal: false,\n      name: \"\",\n      modalInputName: \"\",\n      Products: [],\n      Categories: [],\n      Cate: [],\n      Images: []\n    };\n  }\n\n  async componentDidMount() {\n    //Products\n    const response = await fetch('http://localhost:8080/Products/');\n    const result = await response.json();\n    console.log(result);\n    //Gategories\n    const responseG = await fetch('http://localhost:8080/Categories/');\n    const resultG = await responseG.json();\n    console.log(resultG);\n    //ProductsImage\n    const responseI = await fetch('http://localhost:8080/ProductImages/');\n    const resultI = await responseI.json();\n    console.log(resultI);\n    //CatIDPro\n    const responseID = await fetch('http://localhost:8080/CatIDPro/');\n    const resulta = await responseID.json();\n    console.log(resulta);\n    this.setState({\n      Products: result, error: \"none\",\n      Categories: resultG, error: \"none\",\n      Cate: resulta, error: \"none\",\n      Images: resultI, error: \"none\"\n    });\n\n\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    this.setState({ name: this.state.modalInputName });\n    this.modalClose();\n  }\n\n  modalOpen() {\n    this.setState({ modal: true });\n  }\n\n  modalClose() {\n    this.setState({\n      modalInputName: \"\",\n      modal: false\n    });\n  }\n\n  render() {\n\n    return (\n      <>\n\n        <Modal className=\"formm\" show={this.state.modal} handleClose={e => this.modalClose(e)}>\n          <br />\n          <div className=\"form-group \">\n            <label>Enter Name:</label>\n            <input\n              type=\"text\"\n              value={this.state.modalInputName}\n              name=\"modalInputName\"\n              onChange={e => this.handleChange(e)}\n              className=\"form-control\"\n            />\n            <label>Enter Phone:</label>\n            <input\n              type=\"text\"\n              value={this.state.modalInputName}\n              name=\"modalInputName\"\n              onChange={e => this.handleChange(e)}\n              className=\"form-control\"\n            />\n            <label>Enter Date:</label>\n            <input\n              type=\"text\"\n              value={this.state.modalInputName}\n              name=\"modalInputName\"\n              onChange={e => this.handleChange(e)}\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <Button className=\"modal-close\" onClick={e => this.handleSubmit(e)}>\n              Submit\n          </Button>\n          </div>\n        </Modal>\n\n\n\n        <Container>\n          {this.state.Images.map((image) => (\n            <p>{image.path}</p>\n          ))}\n          {this.state.Cate.map(Categorie => (\n            <div>\n              <h1 className=\"topicPro\">{Categorie.name}</h1>\n\n              <Row>\n\n                {this.state.Products.map((product, index) => (\n\n                  < ProductsItem\n                    value={product}\n                    key={index}\n\n                  />\n\n                )\n                )\n                }\n\n              </Row>\n            </div>\n          )\n\n          )}\n\n        </Container>\n\n\n\n\n\n\n        {/* \n\n        <Container>\n\n          {this.state.Categories.map(Categorie => (\n            <div>\n              <h1 className=\"topicPro\">{Categorie.name}</h1>\n\n              <Row>\n                {this.state.Products.map(product => (\n\n                  <ProductsItem value={product} />\n                )\n                )\n                }\n              </Row>\n            </div>\n          )\n\n          )}\n        </Container> */}\n\n\n\n\n\n\n\n\n\n      </>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}