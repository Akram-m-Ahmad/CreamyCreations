{"ast":null,"code":"var _jsxFileName = \"/home/akram/CreamyCreations/front/src/components/CategoryItems.js\";\nimport React from 'react';\nimport '../page/Products/Products.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Dropdown, MenuItem, Form, Button, ButtonToolbar, DropdownButton, SplitButton, Container, Row, Col, FormControl, Nav, thumbnail, Table, Image } from 'react-bootstrap';\nimport Modal from \"./Model\";\nimport ImageGallery from 'react-image-gallery';\nexport default class CategoryItems extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      /*\n        Because we named the inputs to match their\n        corresponding values in state, it's\n        super easy to update the state\n      */\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault(); // get our form data out of state\n\n      console.log();\n    };\n\n    this.state = {\n      products: [],\n      value: '',\n      catID: this.props.value\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    //Products\n    const response = await fetch(`http://localhost:8080/OrderByCatProducts/${this.state.catID}`);\n    const result = await response.json(); //Order\n    // const responseO = await fetch(`http://localhost:8080/Orders/create/${this.state.date}'&'${this.state.username}'&'${this.state.userPhone}&'${this.state.catID}`);\n    // const resultO = await responseO.json();\n\n    this.setState({\n      products: result,\n      error: \"none\",\n      modal: false,\n      name: \"\",\n      modalInputName: \"\"\n    });\n  }\n\n  modalOpen() {\n    this.setState({\n      modal: true\n    });\n  }\n\n  modalClose() {\n    this.setState({\n      modalInputName: \"\",\n      modal: false\n    });\n  }\n\n  render() {\n    const {\n      fname,\n      lname,\n      email\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(Modal, {\n      show: this.state.modal,\n      handleClose: e => this.modalClose(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"fname\",\n      value: fname,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lname\",\n      value: lname,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Submit\"))), this.state.products.map((product, index) => React.createElement(Col, {\n      calssName: \"col cl\",\n      sm: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flip-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flip-box-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flip-box-front\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"ImagePr\",\n      src: `/Image/${product.proImg}`,\n      alt: \"Paris\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"flip-box-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"topicPro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Akram\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Name:\"), \" \", product.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Description:\"), \" \", product.description), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Price:\"), \" \", product.price, \" $\"), React.createElement(Button, {\n      className: \"add add2\",\n      size: \"lg\",\n      onClick: e => this.modalOpen(e),\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Add new product\")))))));\n  }\n\n}","map":{"version":3,"sources":["/home/akram/CreamyCreations/front/src/components/CategoryItems.js"],"names":["React","Dropdown","MenuItem","Form","Button","ButtonToolbar","DropdownButton","SplitButton","Container","Row","Col","FormControl","Nav","thumbnail","Table","Image","Modal","ImageGallery","CategoryItems","Component","constructor","props","onChange","e","setState","target","name","value","onSubmit","preventDefault","console","log","state","products","catID","handleChange","bind","handleSubmit","componentDidMount","response","fetch","result","json","error","modal","modalInputName","modalOpen","modalClose","render","fname","lname","email","map","product","index","proImg","description","price"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../page/Products/Products.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Dropdown, MenuItem, Form, Button, ButtonToolbar, DropdownButton, SplitButton, Container, Row, Col, FormControl, Nav, thumbnail, Table, Image } from 'react-bootstrap';\nimport Modal from \"./Model\";\nimport ImageGallery from 'react-image-gallery';\n\n\n\nexport default class CategoryItems extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      products: [],\n      value: '',\n      catID: this.props.value\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n  onChange = (e) => {\n    /*\n      Because we named the inputs to match their\n      corresponding values in state, it's\n      super easy to update the state\n    */\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit = (e) => {\n    e.preventDefault();\n    // get our form data out of state\n    console.log()\n\n  }\n  async componentDidMount() {\n\n    //Products\n    const response = await fetch(`http://localhost:8080/OrderByCatProducts/${this.state.catID}`);\n    const result = await response.json();\n    //Order\n    // const responseO = await fetch(`http://localhost:8080/Orders/create/${this.state.date}'&'${this.state.username}'&'${this.state.userPhone}&'${this.state.catID}`);\n    // const resultO = await responseO.json();\n\n\n    this.setState({\n      products: result, error: \"none\",\n\n      modal: false,\n      name: \"\",\n      modalInputName: \"\"\n    })\n\n  }\n\n\n\n\n\n  modalOpen() {\n    this.setState({ modal: true });\n  }\n\n  modalClose() {\n    this.setState({\n      modalInputName: \"\",\n      modal: false\n    });\n  }\n\n\n\n  render() {\n    const { fname, lname, email } = this.state;\n    return (\n      <>\n        <Modal show={this.state.modal} handleClose={e => this.modalClose(e)}>\n\n          <form onSubmit={this.onSubmit}>\n            <input\n              type=\"text\"\n              name=\"fname\"\n              value={fname}\n              onChange={this.onChange}\n            />\n            <input\n              type=\"text\"\n              name=\"lname\"\n              value={lname}\n              onChange={this.onChange}\n            />\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={email}\n              onChange={this.onChange}\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n\n        </Modal>\n        {\n          this.state.products.map((product, index) => (\n            <Col calssName=\"col cl\" sm>\n              <div className=\"flip-box\">\n                <div className=\"flip-box-inner\">\n                  <div className=\"flip-box-front\">\n                    <img className=\"ImagePr\" src={`/Image/${product.proImg}`} alt=\"Paris\" />\n                  </div>\n                  <div className=\"flip-box-back\">\n                    <h2 className='topicPro'>Akram</h2>\n                    <p><span>Name:</span> {product.name}</p>\n                    <p><span>Description:</span> {product.description}</p>\n                    <p><span>Price:</span> {product.price} $</p>\n                    {/* <p><span>Price:</span> {props.value.Categories_ID} $</p> */}\n                    <Button className='add add2' size=\"lg\" onClick={e => this.modalOpen(e)} variant=\"danger\">Add new product</Button>\n                  </div>\n                </div>\n              </div>\n\n            </Col>\n\n          ))\n        }\n      </>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}