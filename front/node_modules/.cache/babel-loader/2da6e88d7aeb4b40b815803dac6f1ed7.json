{"ast":null,"code":"import { flattenTree } from '../utils/treeUtils';\nexport default function getDataGroupBy(data, key, sort) {\n  if (data === void 0) {\n    data = [];\n  }\n\n  var tempData = {};\n  var isSort = typeof sort === 'function';\n  data.forEach(function (item) {\n    if (!tempData[item[key]]) {\n      tempData[item[key]] = [];\n    }\n\n    tempData[item[key]].push(item);\n  });\n  var nextData = Object.entries(tempData).map(function (_ref) {\n    var groupTitle = _ref[0],\n        children = _ref[1];\n    return {\n      groupTitle: groupTitle,\n      group: true,\n      children: isSort ? children.sort(sort(false)) : children\n    };\n  });\n\n  if (isSort) {\n    nextData = nextData.sort(sort(true));\n  }\n\n  return flattenTree(nextData);\n}","map":{"version":3,"sources":["/home/akram/CreamyCreations/node_modules/rsuite/es/utils/getDataGroupBy.js"],"names":["flattenTree","getDataGroupBy","data","key","sort","tempData","isSort","forEach","item","push","nextData","Object","entries","map","_ref","groupTitle","children","group"],"mappings":"AAAA,SAASA,WAAT,QAA4B,oBAA5B;AACA,eAAe,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACtD,MAAIF,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnBA,IAAAA,IAAI,GAAG,EAAP;AACD;;AAED,MAAIG,QAAQ,GAAG,EAAf;AACA,MAAIC,MAAM,GAAG,OAAOF,IAAP,KAAgB,UAA7B;AACAF,EAAAA,IAAI,CAACK,OAAL,CAAa,UAAUC,IAAV,EAAgB;AAC3B,QAAI,CAACH,QAAQ,CAACG,IAAI,CAACL,GAAD,CAAL,CAAb,EAA0B;AACxBE,MAAAA,QAAQ,CAACG,IAAI,CAACL,GAAD,CAAL,CAAR,GAAsB,EAAtB;AACD;;AAEDE,IAAAA,QAAQ,CAACG,IAAI,CAACL,GAAD,CAAL,CAAR,CAAoBM,IAApB,CAAyBD,IAAzB;AACD,GAND;AAOA,MAAIE,QAAQ,GAAGC,MAAM,CAACC,OAAP,CAAeP,QAAf,EAAyBQ,GAAzB,CAA6B,UAAUC,IAAV,EAAgB;AAC1D,QAAIC,UAAU,GAAGD,IAAI,CAAC,CAAD,CAArB;AAAA,QACIE,QAAQ,GAAGF,IAAI,CAAC,CAAD,CADnB;AAEA,WAAO;AACLC,MAAAA,UAAU,EAAEA,UADP;AAELE,MAAAA,KAAK,EAAE,IAFF;AAGLD,MAAAA,QAAQ,EAAEV,MAAM,GAAGU,QAAQ,CAACZ,IAAT,CAAcA,IAAI,CAAC,KAAD,CAAlB,CAAH,GAAgCY;AAH3C,KAAP;AAKD,GARc,CAAf;;AAUA,MAAIV,MAAJ,EAAY;AACVI,IAAAA,QAAQ,GAAGA,QAAQ,CAACN,IAAT,CAAcA,IAAI,CAAC,IAAD,CAAlB,CAAX;AACD;;AAED,SAAOJ,WAAW,CAACU,QAAD,CAAlB;AACD","sourcesContent":["import { flattenTree } from '../utils/treeUtils';\nexport default function getDataGroupBy(data, key, sort) {\n  if (data === void 0) {\n    data = [];\n  }\n\n  var tempData = {};\n  var isSort = typeof sort === 'function';\n  data.forEach(function (item) {\n    if (!tempData[item[key]]) {\n      tempData[item[key]] = [];\n    }\n\n    tempData[item[key]].push(item);\n  });\n  var nextData = Object.entries(tempData).map(function (_ref) {\n    var groupTitle = _ref[0],\n        children = _ref[1];\n    return {\n      groupTitle: groupTitle,\n      group: true,\n      children: isSort ? children.sort(sort(false)) : children\n    };\n  });\n\n  if (isSort) {\n    nextData = nextData.sort(sort(true));\n  }\n\n  return flattenTree(nextData);\n}"]},"metadata":{},"sourceType":"module"}