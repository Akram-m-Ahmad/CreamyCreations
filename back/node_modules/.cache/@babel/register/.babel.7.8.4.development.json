{
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _Product_db = _interopRequireDefault(require(\"./Product_db\"));\n\nvar _News_db = _interopRequireDefault(require(\"./News_db\"));\n\nvar _Categories_db = _interopRequireDefault(require(\"./Categories_db\"));\n\nvar _Events_db = _interopRequireDefault(require(\"./Events_db\"));\n\nvar _ProductImage_db = _interopRequireDefault(require(\"./ProductImage_db\"));\n\nvar _Orders_db = _interopRequireDefault(require(\"./Orders_db\"));\n\nvar _CatIDPro = _interopRequireDefault(require(\"./CatIDPro\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\napp.listen(8080, function () {\n  console.log(\"Listening on port 8080\");\n}); //Products  \n\nvar startProduct =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return (0, _Product_db[\"default\"])();\n\n          case 2:\n            controller = _context6.sent;\n            app.get('/', function (req, res) {\n              res.json({\n                message: \"Hello\"\n              });\n            });\n            app.get('/Products/',\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return controller.getProducts(req.query);\n\n                      case 2:\n                        result = _context.sent;\n                        res.send(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x, _x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/create',\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(req, res) {\n                var _req$query, name, description, price, Categories_ID, result;\n\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _req$query = req.query, name = _req$query.name, description = _req$query.description, price = _req$query.price, Categories_ID = _req$query.Categories_ID;\n                        console.log({\n                          name: name,\n                          description: description,\n                          price: price,\n                          Categories_ID: Categories_ID\n                        });\n                        _context2.next = 4;\n                        return controller.createProducts({\n                          name: name,\n                          description: description,\n                          price: price,\n                          Categories_ID: Categories_ID\n                        });\n\n                      case 4:\n                        result = _context2.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x3, _x4) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context3.next = 3;\n                        return controller.deleteProducts(id);\n\n                      case 3:\n                        result = _context3.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x5, _x6) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/update/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(req, res) {\n                var id, _req$query2, name, description, price, result;\n\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        id = req.params.id;\n                        _req$query2 = req.query, name = _req$query2.name, description = _req$query2.description, price = _req$query2.price;\n                        _context4.next = 4;\n                        return controller.updateProducts(id, {\n                          name: name,\n                          description: description,\n                          price: price\n                        });\n\n                      case 4:\n                        result = _context4.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x7, _x8) {\n                return _ref5.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context5.next = 3;\n                        return controller.getProductsByID(id);\n\n                      case 3:\n                        result = _context5.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x9, _x10) {\n                return _ref6.apply(this, arguments);\n              };\n            }());\n\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function startProduct() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nstartProduct(); //News\n\nvar startNews =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee12() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return (0, _News_db[\"default\"])();\n\n          case 2:\n            controller = _context12.sent;\n            app.get('/News/',\n            /*#__PURE__*/\n            function () {\n              var _ref8 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee7(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.next = 2;\n                        return controller.getNews(req.query);\n\n                      case 2:\n                        result = _context7.sent;\n                        res.send(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7);\n              }));\n\n              return function (_x11, _x12) {\n                return _ref8.apply(this, arguments);\n              };\n            }());\n            app.get('/News/create',\n            /*#__PURE__*/\n            function () {\n              var _ref9 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee8(req, res) {\n                var _req$query3, description, date, result;\n\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        console.log(\"create\");\n                        _req$query3 = req.query, description = _req$query3.description, date = _req$query3.date;\n                        console.log({\n                          description: description,\n                          date: date\n                        });\n                        _context8.next = 5;\n                        return controller.createNews({\n                          description: description,\n                          date: date\n                        });\n\n                      case 5:\n                        result = _context8.sent;\n                        res.json(result);\n\n                      case 7:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8);\n              }));\n\n              return function (_x13, _x14) {\n                return _ref9.apply(this, arguments);\n              };\n            }());\n            app.get('/News/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref10 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee9(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context9.next = 3;\n                        return controller.deleteNews(id);\n\n                      case 3:\n                        result = _context9.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n\n              return function (_x15, _x16) {\n                return _ref10.apply(this, arguments);\n              };\n            }());\n            app.get('/News/update/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref11 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee10(req, res) {\n                var id, _req$query4, description, date, result;\n\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        id = req.params.id;\n                        _req$query4 = req.query, description = _req$query4.description, date = _req$query4.date;\n                        _context10.next = 4;\n                        return controller.updateProducts(id, {\n                          description: description,\n                          date: date\n                        });\n\n                      case 4:\n                        result = _context10.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10);\n              }));\n\n              return function (_x17, _x18) {\n                return _ref11.apply(this, arguments);\n              };\n            }());\n            app.get('/News/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref12 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee11(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context11.next = 3;\n                        return controller.getNewsByID(id);\n\n                      case 3:\n                        result = _context11.sent;\n                        res.json(result);\n                        _context11.next = 7;\n                        return result.finalize();\n\n                      case 7:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n\n              return function (_x19, _x20) {\n                return _ref12.apply(this, arguments);\n              };\n            }());\n\n          case 8:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function startNews() {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nstartNews(); // //Categories\n\nvar startCategoriesDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref13 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee18() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.next = 2;\n            return (0, _Categories_db[\"default\"])();\n\n          case 2:\n            controller = _context18.sent;\n            app.get('/Categories/',\n            /*#__PURE__*/\n            function () {\n              var _ref14 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee13(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        _context13.next = 2;\n                        return controller.getCategories(req.query);\n\n                      case 2:\n                        result = _context13.sent;\n                        res.send(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, _callee13);\n              }));\n\n              return function (_x21, _x22) {\n                return _ref14.apply(this, arguments);\n              };\n            }());\n            app.get('/Categories/create',\n            /*#__PURE__*/\n            function () {\n              var _ref15 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee14(req, res) {\n                var name, result;\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                  while (1) {\n                    switch (_context14.prev = _context14.next) {\n                      case 0:\n                        name = req.query.name;\n                        console.log({\n                          name: name\n                        });\n                        _context14.next = 4;\n                        return controller.createCategories({\n                          name: name\n                        });\n\n                      case 4:\n                        result = _context14.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }\n                }, _callee14);\n              }));\n\n              return function (_x23, _x24) {\n                return _ref15.apply(this, arguments);\n              };\n            }());\n            app.get('/Categories/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref16 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee15(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                  while (1) {\n                    switch (_context15.prev = _context15.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context15.next = 3;\n                        return controller.deleteCategories(id);\n\n                      case 3:\n                        result = _context15.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context15.stop();\n                    }\n                  }\n                }, _callee15);\n              }));\n\n              return function (_x25, _x26) {\n                return _ref16.apply(this, arguments);\n              };\n            }());\n            app.get('/Categories/update/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref17 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee16(req, res) {\n                var id, name, result;\n                return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                  while (1) {\n                    switch (_context16.prev = _context16.next) {\n                      case 0:\n                        id = req.params.id;\n                        name = req.query.name;\n                        _context16.next = 4;\n                        return controller.updateCategories(id, {\n                          name: name\n                        });\n\n                      case 4:\n                        result = _context16.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context16.stop();\n                    }\n                  }\n                }, _callee16);\n              }));\n\n              return function (_x27, _x28) {\n                return _ref17.apply(this, arguments);\n              };\n            }());\n            app.get('/Categories/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref18 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee17(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                  while (1) {\n                    switch (_context17.prev = _context17.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context17.next = 3;\n                        return controller.getgetCategoriesByID(id);\n\n                      case 3:\n                        result = _context17.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context17.stop();\n                    }\n                  }\n                }, _callee17);\n              }));\n\n              return function (_x29, _x30) {\n                return _ref18.apply(this, arguments);\n              };\n            }());\n\n          case 8:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n\n  return function startCategoriesDatabase() {\n    return _ref13.apply(this, arguments);\n  };\n}();\n\nstartCategoriesDatabase(); //Events\n\nvar startEvents =\n/*#__PURE__*/\nfunction () {\n  var _ref19 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee24() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee24$(_context24) {\n      while (1) {\n        switch (_context24.prev = _context24.next) {\n          case 0:\n            _context24.next = 2;\n            return (0, _Events_db[\"default\"])();\n\n          case 2:\n            controller = _context24.sent;\n            app.get('/', function (req, res) {\n              res.json({\n                message: \"Hello\"\n              });\n            });\n            app.get('/Events/',\n            /*#__PURE__*/\n            function () {\n              var _ref20 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee19(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee19$(_context19) {\n                  while (1) {\n                    switch (_context19.prev = _context19.next) {\n                      case 0:\n                        _context19.next = 2;\n                        return controller.getEvents(req.query);\n\n                      case 2:\n                        result = _context19.sent;\n                        res.send(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context19.stop();\n                    }\n                  }\n                }, _callee19);\n              }));\n\n              return function (_x31, _x32) {\n                return _ref20.apply(this, arguments);\n              };\n            }());\n            app.get('/Events/create',\n            /*#__PURE__*/\n            function () {\n              var _ref21 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee20(req, res) {\n                var _req$query5, description, location, date, result;\n\n                return regeneratorRuntime.wrap(function _callee20$(_context20) {\n                  while (1) {\n                    switch (_context20.prev = _context20.next) {\n                      case 0:\n                        _req$query5 = req.query, description = _req$query5.description, location = _req$query5.location, date = _req$query5.date;\n                        console.log({\n                          id: id,\n                          description: description,\n                          location: location,\n                          date: date\n                        });\n                        _context20.next = 4;\n                        return controller.createEvents({\n                          description: description,\n                          location: location,\n                          date: date\n                        });\n\n                      case 4:\n                        result = _context20.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context20.stop();\n                    }\n                  }\n                }, _callee20);\n              }));\n\n              return function (_x33, _x34) {\n                return _ref21.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref22 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee21(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee21$(_context21) {\n                  while (1) {\n                    switch (_context21.prev = _context21.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context21.next = 3;\n                        return controller.deleteProducts(id);\n\n                      case 3:\n                        result = _context21.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context21.stop();\n                    }\n                  }\n                }, _callee21);\n              }));\n\n              return function (_x35, _x36) {\n                return _ref22.apply(this, arguments);\n              };\n            }());\n            app.get('/Events/update/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref23 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee22(req, res) {\n                var id, _req$query6, description, location, date, result;\n\n                return regeneratorRuntime.wrap(function _callee22$(_context22) {\n                  while (1) {\n                    switch (_context22.prev = _context22.next) {\n                      case 0:\n                        id = req.params.id;\n                        _req$query6 = req.query, description = _req$query6.description, location = _req$query6.location, date = _req$query6.date;\n                        _context22.next = 4;\n                        return controller.updateProducts({\n                          id: id,\n                          description: description,\n                          location: location,\n                          date: date\n                        });\n\n                      case 4:\n                        result = _context22.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context22.stop();\n                    }\n                  }\n                }, _callee22);\n              }));\n\n              return function (_x37, _x38) {\n                return _ref23.apply(this, arguments);\n              };\n            }());\n            app.get('/Events/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref24 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee23(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee23$(_context23) {\n                  while (1) {\n                    switch (_context23.prev = _context23.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context23.next = 3;\n                        return controller.getEventsByID(id);\n\n                      case 3:\n                        result = _context23.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context23.stop();\n                    }\n                  }\n                }, _callee23);\n              }));\n\n              return function (_x39, _x40) {\n                return _ref24.apply(this, arguments);\n              };\n            }());\n\n          case 9:\n          case \"end\":\n            return _context24.stop();\n        }\n      }\n    }, _callee24);\n  }));\n\n  return function startEvents() {\n    return _ref19.apply(this, arguments);\n  };\n}();\n\nstartEvents(); //ProductImages\n\nvar startProductImages =\n/*#__PURE__*/\nfunction () {\n  var _ref25 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee30() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee30$(_context30) {\n      while (1) {\n        switch (_context30.prev = _context30.next) {\n          case 0:\n            _context30.next = 2;\n            return (0, _ProductImage_db[\"default\"])();\n\n          case 2:\n            controller = _context30.sent;\n            app.get('/ProductImages/',\n            /*#__PURE__*/\n            function () {\n              var _ref26 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee25(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee25$(_context25) {\n                  while (1) {\n                    switch (_context25.prev = _context25.next) {\n                      case 0:\n                        _context25.next = 2;\n                        return controller.getProductImages(req.query);\n\n                      case 2:\n                        result = _context25.sent;\n                        res.send(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context25.stop();\n                    }\n                  }\n                }, _callee25);\n              }));\n\n              return function (_x41, _x42) {\n                return _ref26.apply(this, arguments);\n              };\n            }());\n            app.get('/ProductImages/create',\n            /*#__PURE__*/\n            function () {\n              var _ref27 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee26(req, res) {\n                var _req$query7, id, path, Products_id, result;\n\n                return regeneratorRuntime.wrap(function _callee26$(_context26) {\n                  while (1) {\n                    switch (_context26.prev = _context26.next) {\n                      case 0:\n                        _req$query7 = req.query, id = _req$query7.id, path = _req$query7.path, Products_id = _req$query7.Products_id;\n                        console.log({\n                          id: id,\n                          path: path,\n                          price: price,\n                          Products_id: Products_id\n                        });\n                        _context26.next = 4;\n                        return controller.createProductImages({\n                          id: id,\n                          path: path,\n                          Products_id: Products_id\n                        });\n\n                      case 4:\n                        result = _context26.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context26.stop();\n                    }\n                  }\n                }, _callee26);\n              }));\n\n              return function (_x43, _x44) {\n                return _ref27.apply(this, arguments);\n              };\n            }());\n            app.get('/ProductImages/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref28 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee27(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee27$(_context27) {\n                  while (1) {\n                    switch (_context27.prev = _context27.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context27.next = 3;\n                        return controller.deleteProductImages(id);\n\n                      case 3:\n                        result = _context27.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context27.stop();\n                    }\n                  }\n                }, _callee27);\n              }));\n\n              return function (_x45, _x46) {\n                return _ref28.apply(this, arguments);\n              };\n            }());\n            app.get('/ProductImages/update/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref29 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee28(req, res) {\n                var id, _req$query8, path, Products_id, result;\n\n                return regeneratorRuntime.wrap(function _callee28$(_context28) {\n                  while (1) {\n                    switch (_context28.prev = _context28.next) {\n                      case 0:\n                        id = req.params.id;\n                        _req$query8 = req.query, path = _req$query8.path, Products_id = _req$query8.Products_id;\n                        _context28.next = 4;\n                        return controller.updateProducts(id, {\n                          path: path,\n                          Products_id: Products_id\n                        });\n\n                      case 4:\n                        result = _context28.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context28.stop();\n                    }\n                  }\n                }, _callee28);\n              }));\n\n              return function (_x47, _x48) {\n                return _ref29.apply(this, arguments);\n              };\n            }());\n            app.get('/ProductImages/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref30 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee29(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee29$(_context29) {\n                  while (1) {\n                    switch (_context29.prev = _context29.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context29.next = 3;\n                        return controller.getProductImagesByID(id);\n\n                      case 3:\n                        result = _context29.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context29.stop();\n                    }\n                  }\n                }, _callee29);\n              }));\n\n              return function (_x49, _x50) {\n                return _ref30.apply(this, arguments);\n              };\n            }());\n\n          case 8:\n          case \"end\":\n            return _context30.stop();\n        }\n      }\n    }, _callee30);\n  }));\n\n  return function startProductImages() {\n    return _ref25.apply(this, arguments);\n  };\n}();\n\nstartProductImages(); //Orders\n\nvar startOrdersdatabse =\n/*#__PURE__*/\nfunction () {\n  var _ref31 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee36() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee36$(_context36) {\n      while (1) {\n        switch (_context36.prev = _context36.next) {\n          case 0:\n            _context36.next = 2;\n            return (0, _Orders_db[\"default\"])();\n\n          case 2:\n            controller = _context36.sent;\n            app.get('/Orders/',\n            /*#__PURE__*/\n            function () {\n              var _ref32 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee31(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee31$(_context31) {\n                  while (1) {\n                    switch (_context31.prev = _context31.next) {\n                      case 0:\n                        _context31.next = 2;\n                        return controller.getOrders(req.query);\n\n                      case 2:\n                        result = _context31.sent;\n                        res.send(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context31.stop();\n                    }\n                  }\n                }, _callee31);\n              }));\n\n              return function (_x51, _x52) {\n                return _ref32.apply(this, arguments);\n              };\n            }()); //create a new element\n\n            app.get('/Orders/create',\n            /*#__PURE__*/\n            function () {\n              var _ref33 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee32(req, res) {\n                var _req$query9, date, username, userPhone, Products_ID, result;\n\n                return regeneratorRuntime.wrap(function _callee32$(_context32) {\n                  while (1) {\n                    switch (_context32.prev = _context32.next) {\n                      case 0:\n                        _req$query9 = req.query, date = _req$query9.date, username = _req$query9.username, userPhone = _req$query9.userPhone, Products_ID = _req$query9.Products_ID;\n                        console.log({\n                          date: date,\n                          username: username,\n                          userPhone: userPhone,\n                          Products_ID: Products_ID\n                        });\n                        _context32.next = 4;\n                        return controller.createOrders({\n                          date: date,\n                          username: username,\n                          userPhone: userPhone,\n                          Products_ID: Products_ID\n                        });\n\n                      case 4:\n                        result = _context32.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context32.stop();\n                    }\n                  }\n                }, _callee32);\n              }));\n\n              return function (_x53, _x54) {\n                return _ref33.apply(this, arguments);\n              };\n            }()); //DELETE element\n\n            app.get('/Orders/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref34 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee33(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee33$(_context33) {\n                  while (1) {\n                    switch (_context33.prev = _context33.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context33.next = 3;\n                        return controller.deleteOrders(id);\n\n                      case 3:\n                        result = _context33.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context33.stop();\n                    }\n                  }\n                }, _callee33);\n              }));\n\n              return function (_x55, _x56) {\n                return _ref34.apply(this, arguments);\n              };\n            }()); //get element by ID\n\n            app.get('/Orders/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref35 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee34(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee34$(_context34) {\n                  while (1) {\n                    switch (_context34.prev = _context34.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context34.next = 3;\n                        return controller.getOrdersByID(id);\n\n                      case 3:\n                        result = _context34.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context34.stop();\n                    }\n                  }\n                }, _callee34);\n              }));\n\n              return function (_x57, _x58) {\n                return _ref35.apply(this, arguments);\n              };\n            }());\n            app.get('/Orders/update/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref36 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee35(req, res) {\n                var id, _req$query10, date, username, userPhone, result;\n\n                return regeneratorRuntime.wrap(function _callee35$(_context35) {\n                  while (1) {\n                    switch (_context35.prev = _context35.next) {\n                      case 0:\n                        id = req.params.id;\n                        _req$query10 = req.query, date = _req$query10.date, username = _req$query10.username, userPhone = _req$query10.userPhone;\n                        _context35.next = 4;\n                        return controller.updateOrders(id, {\n                          date: date,\n                          username: username,\n                          userPhone: userPhone\n                        });\n\n                      case 4:\n                        result = _context35.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context35.stop();\n                    }\n                  }\n                }, _callee35);\n              }));\n\n              return function (_x59, _x60) {\n                return _ref36.apply(this, arguments);\n              };\n            }());\n\n          case 8:\n          case \"end\":\n            return _context36.stop();\n        }\n      }\n    }, _callee36);\n  }));\n\n  return function startOrdersdatabse() {\n    return _ref31.apply(this, arguments);\n  };\n}();\n\nstartOrdersdatabse(); //get CatIDPRo \n\nvar startCatIDPro =\n/*#__PURE__*/\nfunction () {\n  var _ref37 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee38() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee38$(_context38) {\n      while (1) {\n        switch (_context38.prev = _context38.next) {\n          case 0:\n            _context38.next = 2;\n            return (0, _CatIDPro[\"default\"])();\n\n          case 2:\n            controller = _context38.sent;\n            app.get('/CatIDPro/',\n            /*#__PURE__*/\n            function () {\n              var _ref38 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee37(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee37$(_context37) {\n                  while (1) {\n                    switch (_context37.prev = _context37.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context37.next = 3;\n                        return controller.getCatIDPro();\n\n                      case 3:\n                        result = _context37.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context37.stop();\n                    }\n                  }\n                }, _callee37);\n              }));\n\n              return function (_x61, _x62) {\n                return _ref38.apply(this, arguments);\n              };\n            }());\n\n          case 4:\n          case \"end\":\n            return _context38.stop();\n        }\n      }\n    }, _callee38);\n  }));\n\n  return function startCatIDPro() {\n    return _ref37.apply(this, arguments);\n  };\n}();\n\nstartCatIDPro();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "listen",
        "console",
        "log",
        "startProduct",
        "controller",
        "get",
        "req",
        "res",
        "json",
        "message",
        "getProducts",
        "query",
        "result",
        "send",
        "name",
        "description",
        "price",
        "Categories_ID",
        "createProducts",
        "id",
        "params",
        "deleteProducts",
        "updateProducts",
        "getProductsByID",
        "startNews",
        "getNews",
        "date",
        "createNews",
        "deleteNews",
        "getNewsByID",
        "finalize",
        "startCategoriesDatabase",
        "getCategories",
        "createCategories",
        "deleteCategories",
        "updateCategories",
        "getgetCategoriesByID",
        "startEvents",
        "getEvents",
        "location",
        "createEvents",
        "getEventsByID",
        "startProductImages",
        "getProductImages",
        "path",
        "Products_id",
        "createProductImages",
        "deleteProductImages",
        "getProductImagesByID",
        "startOrdersdatabse",
        "getOrders",
        "username",
        "userPhone",
        "Products_ID",
        "createOrders",
        "deleteOrders",
        "getOrdersByID",
        "updateOrders",
        "startCatIDPro",
        "getCatIDPro"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import express from 'express';\nimport ProductsDatabase from './Product_db';\nimport NewsDatabase from './News_db';\nimport CategoriesDatabase from './Categories_db'\nimport Eventsdatabase from './Events_db'\nimport getProductImageDatabase from './ProductImage_db'\nimport OrdersDatabase from './Orders_db'\nimport CatIDProData from './CatIDPro'\nconst app = express();\n\napp.listen(8080, () => { console.log(\"Listening on port 8080\") });\n\n\n//Products  \nconst startProduct = async () => {\n\n  const controller = await ProductsDatabase();\n  app.get('/', (req, res) => {\n\n    res.json({ message: \"Hello\" });\n  });\n\n  app.get('/Products/', async (req, res) => {\n    const result = await controller.getProducts(req.query);\n    res.send(result);\n  });\n\n\n  app.get('/Products/create', async (req, res) => {\n    const { name, description, price, Categories_ID } = req.query;\n    console.log({ name, description, price, Categories_ID })\n    const result = await controller.createProducts({ name, description, price, Categories_ID });\n    res.json(result);\n  });\n\n  app.get('/Products/delete/:id', async (req, res) => {\n\n    const { id } = req.params;\n    const result = await controller.deleteProducts(id);\n    res.json(result);\n  });\n\n  app.get('/Products/update/:id', async (req, res) => {\n\n    const { id } = req.params;\n    const { name, description, price } = req.query;\n    const result = await controller.updateProducts(id, { name, description, price });\n    res.json(result);\n  });\n\n  app.get('/Products/:id', async (req, res) => {\n    const { id } = req.params;\n    const result = await controller.getProductsByID(id);\n    res.json(result);\n  });\n\n\n\n\n}\nstartProduct()\n\n//News\n\nconst startNews = async () => {\n\n  const controller = await NewsDatabase();\n\n\n  app.get('/News/', async (req, res) => {\n    const result = await controller.getNews(req.query);\n    res.send(result);\n  });\n\n  app.get('/News/create', async (req, res) => {\n    console.log(\"create\")\n    const { description, date } = req.query;\n    console.log({ description, date })\n    const result = await controller.createNews({ description, date });\n    res.json(result);\n  });\n\n\n\n  app.get('/News/delete/:id', async (req, res) => {\n\n    const { id } = req.params;\n    const result = await controller.deleteNews(id);\n    res.json(result);\n  });\n\n  app.get('/News/update/:id', async (req, res) => {\n\n    const { id } = req.params;\n    const { description, date } = req.query;\n    const result = await controller.updateProducts(id, { description, date });\n    res.json(result);\n  });\n\n  app.get('/News/:id', async (req, res) => {\n    const { id } = req.params;\n    const result = await controller.getNewsByID(id);\n    res.json(result);\n    await result.finalize();\n  });\n\n\n\n}\nstartNews()\n\n// //Categories\n\nconst startCategoriesDatabase = async () => {\n\n  const controller = await CategoriesDatabase();\n\n\n  app.get('/Categories/', async (req, res) => {\n    const result = await controller.getCategories(req.query);\n    res.send(result);\n  });\n\n\n  app.get('/Categories/create', async (req, res) => {\n    const { name } = req.query;\n    console.log({ name })\n    const result = await controller.createCategories({ name });\n    res.json(result);\n  });\n\n  app.get('/Categories/delete/:id', async (req, res) => {\n\n    const { id } = req.params;\n    const result = await controller.deleteCategories(id);\n    res.json(result);\n  });\n\n  app.get('/Categories/update/:id', async (req, res) => {\n\n    const { id } = req.params;\n    const { name } = req.query;\n    const result = await controller.updateCategories(id, { name });\n    res.json(result);\n  });\n\n\n  app.get('/Categories/:id', async (req, res) => {\n    const { id } = req.params;\n    const result = await controller.getgetCategoriesByID(id);\n    res.json(result);\n  });\n\n\n}\nstartCategoriesDatabase()\n\n//Events\nconst startEvents = async () => {\n\n  const controller = await Eventsdatabase();\n  app.get('/', (req, res) => {\n\n    res.json({ message: \"Hello\" });\n  });\n\n  app.get('/Events/', async (req, res) => {\n    const result = await controller.getEvents(req.query);\n    res.send(result);\n  });\n\n\n\n  app.get('/Events/create', async (req, res) => {\n    const { description, location, date } = req.query;\n    console.log({ id, description, location, date })\n    const result = await controller.createEvents({ description, location, date });\n    res.json(result);\n  });\n\n  app.get('/Products/delete/:id', async (req, res) => {\n\n    const { id } = req.params;\n    const result = await controller.deleteProducts(id);\n    res.json(result);\n  });\n\n  app.get('/Events/update/:id', async (req, res) => {\n\n    const { id } = req.params;\n    const { description, location, date } = req.query;\n    const result = await controller.updateProducts({ id, description, location, date });\n    res.json(result);\n  });\n\n\n  app.get('/Events/:id', async (req, res) => {\n    const { id } = req.params;\n    const result = await controller.getEventsByID(id);\n    res.json(result);\n  });\n\n\n}\nstartEvents()\n\n\n\n//ProductImages\n\nconst startProductImages = async () => {\n\n  const controller = await getProductImageDatabase();\n\n  app.get('/ProductImages/', async (req, res) => {\n    const result = await controller.getProductImages(req.query);\n    res.send(result);\n  });\n\n\n\n  app.get('/ProductImages/create', async (req, res) => {\n    const { id, path, Products_id } = req.query;\n    console.log({ id, path, price, Products_id })\n    const result = await controller.createProductImages({ id, path, Products_id });\n    res.json(result);\n  });\n\n  app.get('/ProductImages/delete/:id', async (req, res) => {\n\n    const { id } = req.params;\n    const result = await controller.deleteProductImages(id);\n    res.json(result);\n  });\n\n  app.get('/ProductImages/update/:id', async (req, res) => {\n\n    const { id } = req.params;\n    const { path, Products_id } = req.query;\n    const result = await controller.updateProducts(id, { path, Products_id });\n    res.json(result);\n  });\n\n\n  app.get('/ProductImages/:id', async (req, res) => {\n    const { id } = req.params;\n    const result = await controller.getProductImagesByID(id);\n    res.json(result);\n  });\n\n\n}\nstartProductImages()\n\n\n//Orders\n\nconst startOrdersdatabse = async () => {\n  const controller = await OrdersDatabase();\n  app.get('/Orders/', async (req, res) => {\n    const result = await controller.getOrders(req.query);\n    res.send(result);\n  });\n\n  //create a new element\n  app.get('/Orders/create', async (req, res) => {\n    const { date, username, userPhone, Products_ID } = req.query;\n    console.log({ date, username, userPhone, Products_ID })\n    const result = await controller.createOrders({ date, username, userPhone, Products_ID });\n    res.json(result);\n  });\n  //DELETE element\n  app.get('/Orders/delete/:id', async (req, res) => {\n\n    const { id } = req.params;\n    const result = await controller.deleteOrders(id);\n    res.json(result);\n  });\n\n  //get element by ID\n  app.get('/Orders/:id', async (req, res) => {\n    const { id } = req.params;\n    const result = await controller.getOrdersByID(id);\n    res.json(result);\n  });\n\n  app.get('/Orders/update/:id', async (req, res) => {\n\n    const { id } = req.params;\n    const { date, username, userPhone } = req.query;\n    const result = await controller.updateOrders(id, { date, username, userPhone });\n    res.json(result);\n  });\n}\nstartOrdersdatabse()\n\n\n//get CatIDPRo \nconst startCatIDPro = async () => {\n  const controller = await CatIDProData();\n  app.get('/CatIDPro/', async (req, res) => {\n    const { id } = req.params;\n    const result = await controller.getCatIDPro();\n    res.json(result);\n  });\n}\nstartCatIDPro()\n\n\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582034922477
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getProducts, getProductsByID, createProducts, deleteProducts, updateProducts, controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context6.sent;\n\n            getProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"SELECT  id, name,description,price FROM Products\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Products are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of products\");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getProducts(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getProductsByID =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return db.all(\" SELECT id,name,description,price FROM Products where id=\".concat(id));\n\n                      case 3:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"product with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context2.prev = 9;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"Could not retrieve product\");\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 9]]);\n              }));\n\n              return function getProductsByID(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var name, description, price, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price;\n\n                        if (!(!props || !name || !description || !price)) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name and description and price\");\n\n                      case 3:\n                        _context3.prev = 3;\n                        _context3.next = 6;\n                        return db.run(\"Insert into Products (name,description,price,Categories_ID ) values ('\".concat(name, \"', '\").concat(description, \"',\").concat(price, \",\").concat(Categories_ID, \")\"));\n\n                      case 6:\n                        result = _context3.sent;\n                        return _context3.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[3, 10]]);\n              }));\n\n              return function createProducts(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"Delete from Products where id = \".concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"Could not delete product with id \".concat(id) + _context4.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 9]]);\n              }));\n\n              return function deleteProducts(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var name, description, price, Categories_ID, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price, Categories_ID = props.Categories_ID;\n\n                        if (!(!props && !(props.name && props.description && props.price && props.Categories_ID))) {\n                          _context5.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name or an description\");\n\n                      case 3:\n                        stmt = \"\";\n\n                        if (name && description && price) {\n                          stmt = \"update Products set name = '\".concat(name, \"', description = '\").concat(description, \"' ,price = '\").concat(price, \"' where id = \").concat(id, \" \");\n                          console.log(stmt);\n                        } else if (name && !description) {\n                          stmt = \"update Products set name = '\".concat(name, \"' where id = \").concat(id, \" \");\n                        } else {\n                          stmt = \"update Products set  description = '\".concat(description, \"' where id = \").concat(id, \" \");\n                        }\n\n                        _context5.prev = 5;\n                        _context5.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context5.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 15:\n                        _context5.prev = 15;\n                        _context5.t0 = _context5[\"catch\"](5);\n                        throw new Error(\"Could not update Products with id \".concat(id) + _context5.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[5, 15]]);\n              }));\n\n              return function updateProducts(_x5, _x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }(); // const getNews = async => {\n            //   let stmt = \"select * from News\";\n            //   try {\n            //     const rows = await db.all(stmt);\n            //     if (rows.length == 0) {\n            //       throw new Error(\"Products are empty!\");\n            //     }\n            //     return rows;\n            //   } catch (err) {\n            //     throw new Error(\"Could not retrieve list of \");\n            //   }\n            // };\n            // const getNewsByID = async id => {\n            //   try {\n            //     const rows = await db.all(\n            //       `select * from News where Id = ${id}`\n            //     );\n            //     if (rows.length == 0) {\n            //       throw new Error(`News with id ${id} is not found`);\n            //     }\n            //     return rows;\n            //   } catch (err) {\n            //     throw new Error(\"Could not retrieve product\");\n            //   }\n            // };\n            // const createNews = async props => {\n            //   const { description,date} = props;\n            //   if (!props  || !description||!date) {\n            //     throw new Error(`You must provide a  description and date`);\n            //   }\n            //   try {\n            //     const result = await db.run(\n            //         `Insert INTO News (description,date) VALUES ('${description}',${date})`\n            //     );\n            //     return result.stmt.lastID;\n            //   } catch (err) {\n            //     throw new Error(\"This combination doesnt work\");\n            //   }\n            // };\n            // const deleteNews = async id => {\n            //   try {\n            //     const result = await db.run(\n            //       `DELETE from News WHERE id = ${id}`\n            //     );\n            //     if (result.stmt.changes == 0) {\n            //       throw new Error(`Product with id ${id} doesnt exist`);\n            //     }\n            //     return true;\n            //   } catch (err) {\n            //     throw new Error(`Could not delete product with id ${id}` + err);\n            //   }\n            // };\n            // const updateNews = async (id, props) => {\n            //   const { name,description,date } = props;\n            //   if (!props && !(props.description && props.date)) {\n            //     throw new Error(`You must provide a name or an description`);\n            //   }\n            //   let stmt = \"\";\n            //   if ( description && date) {\n            //     stmt = `UPDATE News set description= '${description}' , date =${date} where id = ${id}`;\n            //     console.log(stmt);\n            //   } else if (description && !date) {\n            //     stmt =`UPDATE News set description= '${description}'  where id = ${id}`;\n            //   } else {\n            //     stmt = `UPDATE News set date =${date} where id = ${id}`;\n            //   }\n            //   try {\n            //     const result = await db.run(stmt);\n            //     console.log(result);\n            //     if (result.stmt.changes == 0) {\n            //       throw new Error(`Product with id ${id} doesnt exist`);\n            //     }\n            //     return true;\n            //   } catch (err) {\n            //     throw new Error(`Could not update Products with id ${id}` + err);\n            //   }\n            // };\n\n\n            controller = {\n              getProducts: getProducts,\n              createProducts: createProducts,\n              deleteProducts: deleteProducts,\n              updateProducts: updateProducts,\n              getProductsByID: getProductsByID // ,\n              // getNews,\n              //  createNews,\n              // deleteNews,\n              // updateNews,\n              // getNewsByID\n\n            };\n            return _context6.abrupt(\"return\", controller);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "initializeDatabase",
        "sqlite",
        "open",
        "db",
        "getProducts",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getProductsByID",
        "id",
        "createProducts",
        "props",
        "name",
        "description",
        "price",
        "run",
        "Categories_ID",
        "result",
        "lastID",
        "deleteProducts",
        "changes",
        "updateProducts",
        "console",
        "log",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst initializeDatabase= async()=>{\n   const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n\n    const getProducts = async orderBy => {\n        let stmt = \"SELECT  id, name,description,price FROM Products\";\n     \n        try { \n          const rows = await db.all(stmt);\n          if (rows.length == 0) {\n            throw new Error(\"Products are empty!\");\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve list of products\");\n        }\n      };\n    \n      const getProductsByID = async id => {\n        try {\n          const rows = await db.all(` SELECT id,name,description,price FROM Products where id=${id}`\n          );\n          if (rows.length == 0) {\n            throw new Error(`product with id ${id} is not found`);\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve product\");\n        }\n      };\n     \n      const createProducts = async props => {\n        const { name,description,price } = props;\n        if (!props || !name || !description||!price) {\n          throw new Error(`You must provide a name and description and price`);\n        }\n        try {\n          const result = await db.run(\n             `Insert into Products (name,description,price,Categories_ID ) values ('${name}', '${description}',${price},${Categories_ID})`\n          );\n          return result.stmt.lastID;\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\");\n        }\n      };\n    \n      const deleteProducts = async id => {\n        try {\n          const result = await db.run(\n            `Delete from Products where id = ${id}`\n          );\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not delete product with id ${id}` + err);\n        }\n      };\n    \n      const updateProducts = async (id, props) => {\n        const { name,description,price,Categories_ID  } = props;\n        if (!props && !(props.name && props.description && props.price && props.Categories_ID)) {\n          throw new Error(`You must provide a name or an description`);\n        }\n    \n        let stmt = \"\";\n        if (name && description && price) {\n          stmt = `update Products set name = '${name}', description = '${description}' ,price = '${price}' where id = ${id} `;\n          console.log(stmt);\n        } else if (name && !description) {\n          stmt = `update Products set name = '${name}' where id = ${id} `;\n        } else {\n          stmt = `update Products set  description = '${description}' where id = ${id} `;\n        }\n        try {\n          const result = await db.run(stmt);\n          console.log(result);\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not update Products with id ${id}` + err);\n        }\n        \n      };\n\n      // const getNews = async => {\n      //   let stmt = \"select * from News\";\n     \n      //   try {\n      //     const rows = await db.all(stmt);\n      //     if (rows.length == 0) {\n      //       throw new Error(\"Products are empty!\");\n      //     }\n      //     return rows;\n      //   } catch (err) {\n      //     throw new Error(\"Could not retrieve list of \");\n      //   }\n      // };\n    \n      // const getNewsByID = async id => {\n      //   try {\n      //     const rows = await db.all(\n      //       `select * from News where Id = ${id}`\n      //     );\n      //     if (rows.length == 0) {\n      //       throw new Error(`News with id ${id} is not found`);\n      //     }\n      //     return rows;\n      //   } catch (err) {\n      //     throw new Error(\"Could not retrieve product\");\n      //   }\n      // };\n     \n      // const createNews = async props => {\n      //   const { description,date} = props;\n      //   if (!props  || !description||!date) {\n      //     throw new Error(`You must provide a  description and date`);\n      //   }\n      //   try {\n      //     const result = await db.run(\n      //         `Insert INTO News (description,date) VALUES ('${description}',${date})`\n      //     );\n      //     return result.stmt.lastID;\n      //   } catch (err) {\n      //     throw new Error(\"This combination doesnt work\");\n      //   }\n      // };\n    \n      // const deleteNews = async id => {\n      //   try {\n      //     const result = await db.run(\n      //       `DELETE from News WHERE id = ${id}`\n      //     );\n      //     if (result.stmt.changes == 0) {\n      //       throw new Error(`Product with id ${id} doesnt exist`);\n      //     }\n      //     return true;\n      //   } catch (err) {\n      //     throw new Error(`Could not delete product with id ${id}` + err);\n      //   }\n      // };\n    \n      // const updateNews = async (id, props) => {\n      //   const { name,description,date } = props;\n      //   if (!props && !(props.description && props.date)) {\n      //     throw new Error(`You must provide a name or an description`);\n      //   }\n    \n      //   let stmt = \"\";\n      //   if ( description && date) {\n      //     stmt = `UPDATE News set description= '${description}' , date =${date} where id = ${id}`;\n      //     console.log(stmt);\n      //   } else if (description && !date) {\n      //     stmt =`UPDATE News set description= '${description}'  where id = ${id}`;\n      //   } else {\n      //     stmt = `UPDATE News set date =${date} where id = ${id}`;\n      //   }\n      //   try {\n      //     const result = await db.run(stmt);\n      //     console.log(result);\n      //     if (result.stmt.changes == 0) {\n      //       throw new Error(`Product with id ${id} doesnt exist`);\n      //     }\n      //     return true;\n      //   } catch (err) {\n      //     throw new Error(`Could not update Products with id ${id}` + err);\n      //   }\n      // };\n    \n      const controller = {\n        getProducts,\n        createProducts,\n        deleteProducts,\n        updateProducts,\n        getProductsByID\n        // ,\n        // getNews,\n        //  createNews,\n        // deleteNews,\n        // updateNews,\n        // getNewsByID\n      };\n    \n      return controller;\n    };\n    \nexport default  initializeDatabase ;\n\n    \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581251947527
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/Products_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/Products_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/Products_db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/Products_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "Products_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee11() {\n    var db, getNews, getProducts, getProductsByID, createProducts, deleteProducts, updateProducts;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context11.sent;\n\n            getNews =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"select * from News\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Products are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of \");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getNews(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        stmt = \"SELECT  id, name,description,price FROM Products\";\n                        _context2.prev = 1;\n                        _context2.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Products are empty!\");\n\n                      case 7:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context2.prev = 10;\n                        _context2.t0 = _context2[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of products\");\n\n                      case 13:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[1, 10]]);\n              }));\n\n              return function getProducts(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            getProductsByID =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        _context3.next = 3;\n                        return db.all(\"SELECT id,name,description,price FROM Products where id=\".concat(id));\n\n                      case 3:\n                        rows = _context3.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context3.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"product with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context3.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context3.prev = 9;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        throw new Error(\"Could not retrieve product\");\n\n                      case 12:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[0, 9]]);\n              }));\n\n              return function getProductsByID(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            createProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(props) {\n                var name, description, price, result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price;\n\n                        if (!(!props || !name || !description || !price)) {\n                          _context4.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name and description and price\");\n\n                      case 3:\n                        _context4.prev = 3;\n                        _context4.next = 6;\n                        return db.run(\"Insert into Products (name,description,price,Categories_ID ) values ('\".concat(name, \"', '\").concat(description, \"',\").concat(price, \",\").concat(Categories_ID, \")\"));\n\n                      case 6:\n                        result = _context4.sent;\n                        return _context4.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context4.prev = 10;\n                        _context4.t0 = _context4[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[3, 10]]);\n              }));\n\n              return function createProducts(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            deleteProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.prev = 0;\n                        _context5.next = 3;\n                        return db.run(\"Delete from Products where id = \".concat(id));\n\n                      case 3:\n                        result = _context5.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 9:\n                        _context5.prev = 9;\n                        _context5.t0 = _context5[\"catch\"](0);\n                        throw new Error(\"Could not delete product with id \".concat(id) + _context5.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[0, 9]]);\n              }));\n\n              return function deleteProducts(_x5) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            updateProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref7 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee10(id, props) {\n                var name, description, price, Categories_ID, stmt, result, getNewsByID, createNews, deleteNews, updateNews, controller;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price, Categories_ID = props.Categories_ID;\n\n                        if (!(!props && !(props.name && props.description && props.price && props.Categories_ID))) {\n                          _context10.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name or an description\");\n\n                      case 3:\n                        stmt = \"\";\n\n                        if (name && description && price) {\n                          stmt = \"update Products set name = '\".concat(name, \"', description = '\").concat(description, \"' ,price = '\").concat(price, \"' where id = \").concat(id, \" \");\n                          console.log(stmt);\n                        } else if (name && !description) {\n                          stmt = \"update Products set name = '\".concat(name, \"' where id = \").concat(id, \" \");\n                        } else {\n                          stmt = \"update Products set  description = '\".concat(description, \"' where id = \").concat(id, \" \");\n                        }\n\n                        _context10.prev = 5;\n                        _context10.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context10.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context10.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context10.abrupt(\"return\", true);\n\n                      case 15:\n                        _context10.prev = 15;\n                        _context10.t0 = _context10[\"catch\"](5);\n                        throw new Error(\"Could not update Products with id \".concat(id) + _context10.t0);\n\n                      case 18:\n                        getNewsByID =\n                        /*#__PURE__*/\n                        function () {\n                          var _ref8 = _asyncToGenerator(\n                          /*#__PURE__*/\n                          regeneratorRuntime.mark(function _callee6(id) {\n                            var rows;\n                            return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                              while (1) {\n                                switch (_context6.prev = _context6.next) {\n                                  case 0:\n                                    _context6.prev = 0;\n                                    _context6.next = 3;\n                                    return db.all(\"select * from News where Id = \".concat(id));\n\n                                  case 3:\n                                    rows = _context6.sent;\n\n                                    if (!(rows.length == 0)) {\n                                      _context6.next = 6;\n                                      break;\n                                    }\n\n                                    throw new Error(\"News with id \".concat(id, \" is not found\"));\n\n                                  case 6:\n                                    return _context6.abrupt(\"return\", rows);\n\n                                  case 9:\n                                    _context6.prev = 9;\n                                    _context6.t0 = _context6[\"catch\"](0);\n                                    throw new Error(\"Could not retrieve product\");\n\n                                  case 12:\n                                  case \"end\":\n                                    return _context6.stop();\n                                }\n                              }\n                            }, _callee6, null, [[0, 9]]);\n                          }));\n\n                          return function getNewsByID(_x8) {\n                            return _ref8.apply(this, arguments);\n                          };\n                        }();\n\n                        createNews =\n                        /*#__PURE__*/\n                        function () {\n                          var _ref9 = _asyncToGenerator(\n                          /*#__PURE__*/\n                          regeneratorRuntime.mark(function _callee7(props) {\n                            var description, date, _result;\n\n                            return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                              while (1) {\n                                switch (_context7.prev = _context7.next) {\n                                  case 0:\n                                    description = props.description, date = props.date;\n\n                                    if (!(!props || !description || !date)) {\n                                      _context7.next = 3;\n                                      break;\n                                    }\n\n                                    throw new Error(\"You must provide a  description and date\");\n\n                                  case 3:\n                                    _context7.prev = 3;\n                                    _context7.next = 6;\n                                    return db.run(\"Insert INTO News (description,date) VALUES ('\".concat(description, \"',\").concat(date, \")\"));\n\n                                  case 6:\n                                    _result = _context7.sent;\n                                    return _context7.abrupt(\"return\", _result.stmt.lastID);\n\n                                  case 10:\n                                    _context7.prev = 10;\n                                    _context7.t0 = _context7[\"catch\"](3);\n                                    throw new Error(\"This combination doesnt work\");\n\n                                  case 13:\n                                  case \"end\":\n                                    return _context7.stop();\n                                }\n                              }\n                            }, _callee7, null, [[3, 10]]);\n                          }));\n\n                          return function createNews(_x9) {\n                            return _ref9.apply(this, arguments);\n                          };\n                        }();\n\n                        deleteNews =\n                        /*#__PURE__*/\n                        function () {\n                          var _ref10 = _asyncToGenerator(\n                          /*#__PURE__*/\n                          regeneratorRuntime.mark(function _callee8(id) {\n                            var _result2;\n\n                            return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                              while (1) {\n                                switch (_context8.prev = _context8.next) {\n                                  case 0:\n                                    _context8.prev = 0;\n                                    _context8.next = 3;\n                                    return db.run(\"DELETE from News WHERE id = \".concat(id));\n\n                                  case 3:\n                                    _result2 = _context8.sent;\n\n                                    if (!(_result2.stmt.changes == 0)) {\n                                      _context8.next = 6;\n                                      break;\n                                    }\n\n                                    throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                                  case 6:\n                                    return _context8.abrupt(\"return\", true);\n\n                                  case 9:\n                                    _context8.prev = 9;\n                                    _context8.t0 = _context8[\"catch\"](0);\n                                    throw new Error(\"Could not delete product with id \".concat(id) + _context8.t0);\n\n                                  case 12:\n                                  case \"end\":\n                                    return _context8.stop();\n                                }\n                              }\n                            }, _callee8, null, [[0, 9]]);\n                          }));\n\n                          return function deleteNews(_x10) {\n                            return _ref10.apply(this, arguments);\n                          };\n                        }();\n\n                        updateNews =\n                        /*#__PURE__*/\n                        function () {\n                          var _ref11 = _asyncToGenerator(\n                          /*#__PURE__*/\n                          regeneratorRuntime.mark(function _callee9(id, props) {\n                            var name, description, date, stmt, _result3;\n\n                            return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                              while (1) {\n                                switch (_context9.prev = _context9.next) {\n                                  case 0:\n                                    name = props.name, description = props.description, date = props.date;\n\n                                    if (!(!props && !(props.description && props.date))) {\n                                      _context9.next = 3;\n                                      break;\n                                    }\n\n                                    throw new Error(\"You must provide a name or an description\");\n\n                                  case 3:\n                                    stmt = \"\";\n\n                                    if (description && date) {\n                                      stmt = \"UPDATE News set description= '\".concat(description, \"' , date =\").concat(date, \" where id = \").concat(id);\n                                      console.log(stmt);\n                                    } else if (description && !date) {\n                                      stmt = \"UPDATE News set description= '\".concat(description, \"'  where id = \").concat(id);\n                                    } else {\n                                      stmt = \"UPDATE News set date =\".concat(date, \" where id = \").concat(id);\n                                    }\n\n                                    _context9.prev = 5;\n                                    _context9.next = 8;\n                                    return db.run(stmt);\n\n                                  case 8:\n                                    _result3 = _context9.sent;\n                                    console.log(_result3);\n\n                                    if (!(_result3.stmt.changes == 0)) {\n                                      _context9.next = 12;\n                                      break;\n                                    }\n\n                                    throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                                  case 12:\n                                    return _context9.abrupt(\"return\", true);\n\n                                  case 15:\n                                    _context9.prev = 15;\n                                    _context9.t0 = _context9[\"catch\"](5);\n                                    throw new Error(\"Could not update Products with id \".concat(id) + _context9.t0);\n\n                                  case 18:\n                                  case \"end\":\n                                    return _context9.stop();\n                                }\n                              }\n                            }, _callee9, null, [[5, 15]]);\n                          }));\n\n                          return function updateNews(_x11, _x12) {\n                            return _ref11.apply(this, arguments);\n                          };\n                        }();\n\n                        controller = {\n                          getProducts: getProducts,\n                          createProducts: createProducts,\n                          deleteProducts: deleteProducts,\n                          updateProducts: updateProducts,\n                          getProductsByID: getProductsByID,\n                          getNews: getNews,\n                          createNews: createNews,\n                          deleteNews: deleteNews,\n                          updateNews: updateNews,\n                          getNewsByID: getNewsByID\n                        };\n                        return _context10.abrupt(\"return\", controller);\n\n                      case 24:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[5, 15]]);\n              }));\n\n              return function updateProducts(_x6, _x7) {\n                return _ref7.apply(this, arguments);\n              };\n            }();\n\n          case 9:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Products_db.js"
      ],
      "names": [
        "initializeDatabase",
        "sqlite",
        "open",
        "db",
        "getNews",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getProducts",
        "getProductsByID",
        "id",
        "createProducts",
        "props",
        "name",
        "description",
        "price",
        "run",
        "Categories_ID",
        "result",
        "lastID",
        "deleteProducts",
        "changes",
        "updateProducts",
        "console",
        "log",
        "getNewsByID",
        "createNews",
        "date",
        "deleteNews",
        "updateNews",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst initializeDatabase= async()=>{\n   const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n   const getNews = async orderBy => {\n    let stmt = \"select * from News\";\n \n    try {\n      const rows = await db.all(stmt);\n      if (rows.length == 0) {\n        throw new Error(\"Products are empty!\");\n      }\n      return rows;\n    } catch (err) {\n      throw new Error(\"Could not retrieve list of \");\n    }\n  };\n    const getProducts = async orderBy => {\n        let stmt = \"SELECT  id, name,description,price FROM Products\";\n     \n        try { \n          const rows = await db.all(stmt);\n          if (rows.length == 0) {\n            throw new Error(\"Products are empty!\");\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve list of products\");\n        }\n      };\n    \n      const getProductsByID = async id => {\n        try {\n          const rows = await db.all(\n            `SELECT id,name,description,price FROM Products where id=${id}`\n          );\n          if (rows.length == 0) {\n            throw new Error(`product with id ${id} is not found`);\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve product\");\n        }\n      };\n     \n      const createProducts = async props => {\n        const { name,description,price } = props;\n        if (!props || !name || !description||!price) {\n          throw new Error(`You must provide a name and description and price`);\n        }\n        try {\n          const result = await db.run(\n             `Insert into Products (name,description,price,Categories_ID ) values ('${name}', '${description}',${price},${Categories_ID})`\n          );\n          return result.stmt.lastID;\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\");\n        }\n      };\n    \n      const deleteProducts = async id => {\n        try {\n          const result = await db.run(\n            `Delete from Products where id = ${id}`\n          );\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not delete product with id ${id}` + err);\n        }\n      };\n    \n      const updateProducts = async (id, props) => {\n        const { name,description,price,Categories_ID  } = props;\n        if (!props && !(props.name && props.description && props.price && props.Categories_ID)) {\n          throw new Error(`You must provide a name or an description`);\n        }\n    \n        let stmt = \"\";\n        if (name && description && price) {\n          stmt = `update Products set name = '${name}', description = '${description}' ,price = '${price}' where id = ${id} `;\n          console.log(stmt);\n        } else if (name && !description) {\n          stmt = `update Products set name = '${name}' where id = ${id} `;\n        } else {\n          stmt = `update Products set  description = '${description}' where id = ${id} `;\n        }\n        try {\n          const result = await db.run(stmt);\n          console.log(result);\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not update Products with id ${id}` + err);\n        }\n\n        const getNewsByID = async id => {\n            try {\n              const rows = await db.all(\n                `select * from News where Id = ${id}`\n              );\n              if (rows.length == 0) {\n                throw new Error(`News with id ${id} is not found`);\n              }\n              return rows;\n            } catch (err) {\n              throw new Error(\"Could not retrieve product\");\n            }\n          };\n         \n          const createNews = async props => {\n            const { description,date} = props;\n            if (!props  || !description||!date) {\n              throw new Error(`You must provide a  description and date`);\n            }\n            try {\n              const result = await db.run(\n                  `Insert INTO News (description,date) VALUES ('${description}',${date})`\n              );\n              return result.stmt.lastID;\n            } catch (err) {\n              throw new Error(\"This combination doesnt work\");\n            }\n          };\n        \n          const deleteNews = async id => {\n            try {\n              const result = await db.run(\n                `DELETE from News WHERE id = ${id}`\n              );\n              if (result.stmt.changes == 0) {\n                throw new Error(`Product with id ${id} doesnt exist`);\n              }\n              return true;\n            } catch (err) {\n              throw new Error(`Could not delete product with id ${id}` + err);\n            }\n          };\n        \n          const updateNews = async (id, props) => {\n            const { name,description,date } = props;\n            if (!props && !(props.description && props.date)) {\n              throw new Error(`You must provide a name or an description`);\n            }\n        \n            let stmt = \"\";\n            if ( description && date) {\n              stmt = `UPDATE News set description= '${description}' , date =${date} where id = ${id}`;\n              console.log(stmt);\n            } else if (description && !date) {\n              stmt =`UPDATE News set description= '${description}'  where id = ${id}`;\n            } else {\n              stmt = `UPDATE News set date =${date} where id = ${id}`;\n            }\n            try {\n              const result = await db.run(stmt);\n              console.log(result);\n              if (result.stmt.changes == 0) {\n                throw new Error(`Product with id ${id} doesnt exist`);\n              }\n              return true;\n            } catch (err) {\n              throw new Error(`Could not update Products with id ${id}` + err);\n            }\n      };\n    \n      const controller = {\n        getProducts,\n        createProducts,\n        deleteProducts,\n        updateProducts,\n        getProductsByID,\n        getNews,\n        createNews,\n        deleteNews,\n        updateNews,\n        getNewsByID\n      };\n    \n      return controller;\n    }\n    };\n    \nexport default  initializeDatabase ;\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581251275487
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/News_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/News_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/News_db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/News_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "News_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar NewsDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getNews, getNewsByID, createNews, deleteNews, updateNews, controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context6.sent;\n\n            getNews =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"select * from News\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"News are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of News \");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getNews(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getNewsByID =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return db.all(\"select * from News where Id = \".concat(id));\n\n                      case 3:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"News with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context2.prev = 9;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"Could not retrieve News\");\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 9]]);\n              }));\n\n              return function getNewsByID(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createNews =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var description, date, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        description = props.description, date = props.date;\n                        console.log(description, date);\n\n                        if (!(!props || !description || !date)) {\n                          _context3.next = 4;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a  description and date\");\n\n                      case 4:\n                        _context3.prev = 4;\n                        _context3.next = 7;\n                        return db.run(\"Insert INTO News (description,date) VALUES ('\".concat(description, \"',\").concat(date, \")\"));\n\n                      case 7:\n                        result = _context3.sent;\n                        return _context3.abrupt(\"return\", result.stmt.lastID);\n\n                      case 11:\n                        _context3.prev = 11;\n                        _context3.t0 = _context3[\"catch\"](4);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 14:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[4, 11]]);\n              }));\n\n              return function createNews(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteNews =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"DELETE from News WHERE id = \".concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"Could not delete product with id \".concat(id) + _context4.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 9]]);\n              }));\n\n              return function deleteNews(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateNews =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var name, description, date, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        name = props.name, description = props.description, date = props.date;\n\n                        if (!(!props && !(props.description && props.date))) {\n                          _context5.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name or an description\");\n\n                      case 3:\n                        stmt = \"\";\n\n                        if (description && date) {\n                          stmt = \"UPDATE News set description= '\".concat(description, \"' , date =\").concat(date, \" where id = \").concat(id);\n                          console.log(stmt);\n                        } else if (description && !date) {\n                          stmt = \"UPDATE News set description= '\".concat(description, \"'  where id = \").concat(id);\n                        } else {\n                          stmt = \"UPDATE News set date =\".concat(date, \" where id = \").concat(id);\n                        }\n\n                        _context5.prev = 5;\n                        _context5.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context5.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 15:\n                        _context5.prev = 15;\n                        _context5.t0 = _context5[\"catch\"](5);\n                        throw new Error(\"Could not update Products with id \".concat(id) + _context5.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[5, 15]]);\n              }));\n\n              return function updateNews(_x5, _x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getNews: getNews,\n              getNewsByID: getNewsByID,\n              createNews: createNews,\n              deleteNews: deleteNews,\n              updateNews: updateNews\n            };\n            return _context6.abrupt(\"return\", controller);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function NewsDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = NewsDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "News_db.js"
      ],
      "names": [
        "NewsDatabase",
        "sqlite",
        "open",
        "db",
        "getNews",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getNewsByID",
        "id",
        "createNews",
        "props",
        "description",
        "date",
        "console",
        "log",
        "run",
        "result",
        "lastID",
        "deleteNews",
        "changes",
        "updateNews",
        "name",
        "controller"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDC,mBAAOC,IAAP,CAAY,2BAAZ,CADC;;AAAA;AACZC,YAAAA,EADY;;AAGXC,YAAAA,OAHW;AAAA;AAAA;AAAA;AAAA;AAAA,sCAGD,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,wBAAAA,IADQ,GACD,oBADC;AAAA;AAAA;AAAA,+BAISH,EAAE,CAACI,GAAH,CAAOD,IAAP,CAJT;;AAAA;AAIJE,wBAAAA,IAJI;;AAAA,8BAKNA,IAAI,CAACC,MAAL,IAAe,CALT;AAAA;AAAA;AAAA;;AAAA,8BAMF,IAAIC,KAAJ,CAAU,iBAAV,CANE;;AAAA;AAAA,yDAQHF,IARG;;AAAA;AAAA;AAAA;AAAA,8BAUJ,IAAIE,KAAJ,CAAU,kCAAV,CAVI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHC;;AAAA,8BAGXN,OAHW;AAAA;AAAA;AAAA;;AAiBTO,YAAAA,WAjBS;AAAA;AAAA;AAAA;AAAA;AAAA,sCAiBK,kBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEGT,EAAE,CAACI,GAAH,yCACgBK,EADhB,EAFH;;AAAA;AAEVJ,wBAAAA,IAFU;;AAAA,8BAKZA,IAAI,CAACC,MAAL,IAAe,CALH;AAAA;AAAA;AAAA;;AAAA,8BAMR,IAAIC,KAAJ,wBAA0BE,EAA1B,mBANQ;;AAAA;AAAA,0DAQTJ,IARS;;AAAA;AAAA;AAAA;AAAA,8BAUV,IAAIE,KAAJ,CAAU,yBAAV,CAVU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBL;;AAAA,8BAiBTC,WAjBS;AAAA;AAAA;AAAA;;AA+BTE,YAAAA,UA/BS;AAAA;AAAA;AAAA;AAAA;AAAA,sCA+BI,kBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,wBAAAA,WADU,GACUD,KADV,CACVC,WADU,EACEC,IADF,GACUF,KADV,CACEE,IADF;AAEjBC,wBAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAwBC,IAAxB;;AAFiB,8BAGb,CAACF,KAAD,IAAW,CAACC,WAAZ,IAAyB,CAACC,IAHb;AAAA;AAAA;AAAA;;AAAA,8BAIT,IAAIN,KAAJ,4CAJS;;AAAA;AAAA;AAAA;AAAA,+BAOMP,EAAE,CAACgB,GAAH,wDAC+BJ,WAD/B,eAC+CC,IAD/C,OAPN;;AAAA;AAOTI,wBAAAA,MAPS;AAAA,0DAURA,MAAM,CAACd,IAAP,CAAYe,MAVJ;;AAAA;AAAA;AAAA;AAAA,8BAYT,IAAIX,KAAJ,CAAU,8BAAV,CAZS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA/BJ;;AAAA,8BA+BTG,UA/BS;AAAA;AAAA;AAAA;;AA+CTS,YAAAA,UA/CS;AAAA;AAAA;AAAA;AAAA;AAAA,sCA+CI,kBAAMV,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEMT,EAAE,CAACgB,GAAH,uCACYP,EADZ,EAFN;;AAAA;AAETQ,wBAAAA,MAFS;;AAAA,8BAKXA,MAAM,CAACd,IAAP,CAAYiB,OAAZ,IAAuB,CALZ;AAAA;AAAA;AAAA;;AAAA,8BAMP,IAAIb,KAAJ,2BAA6BE,EAA7B,mBANO;;AAAA;AAAA,0DAQR,IARQ;;AAAA;AAAA;AAAA;AAAA,8BAUT,IAAIF,KAAJ,CAAU,2CAAoCE,EAApC,gBAAV,CAVS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA/CJ;;AAAA,8BA+CTU,UA/CS;AAAA;AAAA;AAAA;;AA6DTE,YAAAA,UA7DS;AAAA;AAAA;AAAA;AAAA;AAAA,sCA6DI,kBAAOZ,EAAP,EAAWE,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACTW,wBAAAA,IADS,GACiBX,KADjB,CACTW,IADS,EACJV,WADI,GACiBD,KADjB,CACJC,WADI,EACQC,IADR,GACiBF,KADjB,CACQE,IADR;;AAAA,8BAEb,CAACF,KAAD,IAAU,EAAEA,KAAK,CAACC,WAAN,IAAqBD,KAAK,CAACE,IAA7B,CAFG;AAAA;AAAA;AAAA;;AAAA,8BAGT,IAAIN,KAAJ,6CAHS;;AAAA;AAMbJ,wBAAAA,IANa,GAMN,EANM;;AAOjB,4BAAKS,WAAW,IAAIC,IAApB,EAA0B;AACxBV,0BAAAA,IAAI,2CAAoCS,WAApC,uBAA4DC,IAA5D,yBAA+EJ,EAA/E,CAAJ;AACAK,0BAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACD,yBAHD,MAGO,IAAIS,WAAW,IAAI,CAACC,IAApB,EAA0B;AAC/BV,0BAAAA,IAAI,2CAAmCS,WAAnC,2BAA+DH,EAA/D,CAAJ;AACD,yBAFM,MAEA;AACLN,0BAAAA,IAAI,mCAA4BU,IAA5B,yBAA+CJ,EAA/C,CAAJ;AACD;;AAdgB;AAAA;AAAA,+BAgBMT,EAAE,CAACgB,GAAH,CAAOb,IAAP,CAhBN;;AAAA;AAgBTc,wBAAAA,MAhBS;AAiBfH,wBAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;;AAjBe,8BAkBXA,MAAM,CAACd,IAAP,CAAYiB,OAAZ,IAAuB,CAlBZ;AAAA;AAAA;AAAA;;AAAA,8BAmBP,IAAIb,KAAJ,2BAA6BE,EAA7B,mBAnBO;;AAAA;AAAA,0DAqBR,IArBQ;;AAAA;AAAA;AAAA;AAAA,8BAuBT,IAAIF,KAAJ,CAAU,4CAAqCE,EAArC,gBAAV,CAvBS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA7DJ;;AAAA,8BA6DTY,UA7DS;AAAA;AAAA;AAAA;;AAwFTE,YAAAA,UAxFS,GAwFI;AACjBtB,cAAAA,OAAO,EAAPA,OADiB;AAEjBO,cAAAA,WAAW,EAAXA,WAFiB;AAGjBE,cAAAA,UAAU,EAAVA,UAHiB;AAIjBS,cAAAA,UAAU,EAAVA,UAJiB;AAKjBE,cAAAA,UAAU,EAAVA;AALiB,aAxFJ;AAAA,8CAiGRE,UAjGQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZ1B,YAAY;AAAA;AAAA;AAAA,GAAlB;;eAoGgBA,Y",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst NewsDatabase = async()=>{\n   const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n    \n    const getNews = async orderBy => {\n        let stmt = \"select * from News\";\n     \n        try {\n          const rows = await db.all(stmt);\n          if (rows.length == 0) {\n            throw new Error(\"News are empty!\");\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve list of News \");\n        }\n      };\n    \n      const getNewsByID = async id => {\n        try {\n          const rows = await db.all(\n            `select * from News where Id = ${id}`\n          );\n          if (rows.length == 0) {\n            throw new Error(`News with id ${id} is not found`);\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve News\");\n        }\n      };\n     \n      const createNews = async props => {\n        const {description,date} = props;\n        console.log(description,date)\n        if (!props  || !description||!date) {\n          throw new Error(`You must provide a  description and date`);\n        }\n        try {\n          const result = await db.run(\n              `Insert INTO News (description,date) VALUES ('${description}',${date})`\n          );\n          return result.stmt.lastID;\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\");\n        }\n      };\n    \n      const deleteNews = async id => {\n        try {\n          const result = await db.run(\n            `DELETE from News WHERE id = ${id}`\n          );\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not delete product with id ${id}` + err);\n        }\n      };\n    \n      const updateNews = async (id, props) => {\n        const { name,description,date } = props;\n        if (!props && !(props.description && props.date)) {\n          throw new Error(`You must provide a name or an description`);\n        }\n    \n        let stmt = \"\";\n        if ( description && date) {\n          stmt = `UPDATE News set description= '${description}' , date =${date} where id = ${id}`;\n          console.log(stmt);\n        } else if (description && !date) {\n          stmt =`UPDATE News set description= '${description}'  where id = ${id}`;\n        } else {\n          stmt = `UPDATE News set date =${date} where id = ${id}`;\n        }\n        try {\n          const result = await db.run(stmt);\n          console.log(result);\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not update Products with id ${id}` + err);\n        }\n      };\n    \n      const controller = {\n        getNews,\n        getNewsByID,\n        createNews,\n        deleteNews,\n        updateNews\n        \n      };\n    \n      return controller;\n    };\n    \nexport default  NewsDatabase ;\n\n    \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581410446503
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/Product_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/Product_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/Product_db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/Product_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "Product_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getProducts, getProductsByID, createProducts, deleteProducts, updateProducts, controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context6.sent;\n\n            getProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"SELECT  * FROM Products\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Products are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of products\");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getProducts(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getProductsByID =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return db.all(\" SELECT id,name,description,price FROM Products where id=\".concat(id));\n\n                      case 3:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"product with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context2.prev = 9;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"Could not retrieve product\");\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 9]]);\n              }));\n\n              return function getProductsByID(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var name, description, price, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price;\n\n                        if (!(!props || !name || !description || !price)) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name and description and price\");\n\n                      case 3:\n                        _context3.prev = 3;\n                        _context3.next = 6;\n                        return db.run(\"Insert into Products (name,description,price,Categories_ID ) values ('\".concat(name, \"', '\").concat(description, \"',\").concat(price, \",\").concat(Categories_ID, \")\"));\n\n                      case 6:\n                        result = _context3.sent;\n                        return _context3.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[3, 10]]);\n              }));\n\n              return function createProducts(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"Delete from Products where id = \".concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"Could not delete product with id \".concat(id) + _context4.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 9]]);\n              }));\n\n              return function deleteProducts(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var name, description, price, Categories_ID, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price, Categories_ID = props.Categories_ID;\n\n                        if (!(!props && !(props.name && props.description && props.price && props.Categories_ID))) {\n                          _context5.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name or an description\");\n\n                      case 3:\n                        stmt = \"\";\n\n                        if (name && description && price) {\n                          stmt = \"update Products set name = '\".concat(name, \"', description = '\").concat(description, \"' ,price = '\").concat(price, \"' where id = \").concat(id, \" \");\n                          console.log(stmt);\n                        } else if (name && !description) {\n                          stmt = \"update Products set name = '\".concat(name, \"' where id = \").concat(id, \" \");\n                        } else {\n                          stmt = \"update Products set  description = '\".concat(description, \"' where id = \").concat(id, \" \");\n                        }\n\n                        _context5.prev = 5;\n                        _context5.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context5.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 15:\n                        _context5.prev = 15;\n                        _context5.t0 = _context5[\"catch\"](5);\n                        throw new Error(\"Could not update Products with id \".concat(id) + _context5.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[5, 15]]);\n              }));\n\n              return function updateProducts(_x5, _x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getProducts: getProducts,\n              createProducts: createProducts,\n              deleteProducts: deleteProducts,\n              updateProducts: updateProducts,\n              getProductsByID: getProductsByID\n            };\n            return _context6.abrupt(\"return\", controller);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Product_db.js"
      ],
      "names": [
        "initializeDatabase",
        "sqlite",
        "open",
        "db",
        "getProducts",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getProductsByID",
        "id",
        "createProducts",
        "props",
        "name",
        "description",
        "price",
        "run",
        "Categories_ID",
        "result",
        "lastID",
        "deleteProducts",
        "changes",
        "updateProducts",
        "console",
        "log",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst initializeDatabase = async () => {\n  const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n\n  const getProducts = async orderBy => {\n    let stmt = \"SELECT  * FROM Products\";\n\n    try {\n      const rows = await db.all(stmt);\n      if (rows.length == 0) {\n        throw new Error(\"Products are empty!\");\n      }\n      return rows;\n    } catch (err) {\n      throw new Error(\"Could not retrieve list of products\");\n    }\n  };\n\n  const getProductsByID = async id => {\n    try {\n      const rows = await db.all(` SELECT id,name,description,price FROM Products where id=${id}`\n      );\n      if (rows.length == 0) {\n        throw new Error(`product with id ${id} is not found`);\n      }\n      return rows;\n    } catch (err) {\n      throw new Error(\"Could not retrieve product\");\n    }\n  };\n\n  const createProducts = async props => {\n    const { name, description, price } = props;\n    if (!props || !name || !description || !price) {\n      throw new Error(`You must provide a name and description and price`);\n    }\n    try {\n      const result = await db.run(\n        `Insert into Products (name,description,price,Categories_ID ) values ('${name}', '${description}',${price},${Categories_ID})`\n      );\n      return result.stmt.lastID;\n    } catch (err) {\n      throw new Error(\"This combination doesnt work\");\n    }\n  };\n\n  const deleteProducts = async id => {\n    try {\n      const result = await db.run(\n        `Delete from Products where id = ${id}`\n      );\n      if (result.stmt.changes == 0) {\n        throw new Error(`Product with id ${id} doesnt exist`);\n      }\n      return true;\n    } catch (err) {\n      throw new Error(`Could not delete product with id ${id}` + err);\n    }\n  };\n\n  const updateProducts = async (id, props) => {\n    const { name, description, price, Categories_ID } = props;\n    if (!props && !(props.name && props.description && props.price && props.Categories_ID)) {\n      throw new Error(`You must provide a name or an description`);\n    }\n\n    let stmt = \"\";\n    if (name && description && price) {\n      stmt = `update Products set name = '${name}', description = '${description}' ,price = '${price}' where id = ${id} `;\n      console.log(stmt);\n    } else if (name && !description) {\n      stmt = `update Products set name = '${name}' where id = ${id} `;\n    } else {\n      stmt = `update Products set  description = '${description}' where id = ${id} `;\n    }\n    try {\n      const result = await db.run(stmt);\n      console.log(result);\n      if (result.stmt.changes == 0) {\n        throw new Error(`Product with id ${id} doesnt exist`);\n      }\n      return true;\n    } catch (err) {\n      throw new Error(`Could not update Products with id ${id}` + err);\n    }\n\n  };\n\n\n\n  const controller = {\n    getProducts,\n\n    createProducts,\n    deleteProducts,\n    updateProducts,\n    getProductsByID\n\n  };\n\n  return controller;\n};\n\nexport default initializeDatabase;\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582023936453
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/Categories_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/Categories_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/Categories_db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/Categories_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "Categories_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar CategoriesDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getCategories, getgetCategoriesByID, createCategories, deleteCategories, updateCategories, controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context6.sent;\n\n            getCategories =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"select * from Categories\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Categories are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of Categories \");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getCategories(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getgetCategoriesByID =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return db.all(\"select * from Categories where Id = \".concat(id));\n\n                      case 3:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Categories with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context2.prev = 9;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"Could not retrieve Categories\");\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 9]]);\n              }));\n\n              return function getgetCategoriesByID(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createCategories =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var name, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        name = props.name;\n\n                        if (name) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a  name \");\n\n                      case 3:\n                        _context3.prev = 3;\n                        _context3.next = 6;\n                        return db.run(\"insert INTO Categories (name) VALUES ('\".concat(name, \"')\"));\n\n                      case 6:\n                        result = _context3.sent;\n                        return _context3.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[3, 10]]);\n              }));\n\n              return function createCategories(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteCategories =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"DELETE from Categories WHERE id = \".concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Categories with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"Could not delete Categories with id \".concat(id) + _context4.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 9]]);\n              }));\n\n              return function deleteCategories(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateCategories =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var name, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        name = props.name;\n\n                        if (!(!props && !(props.description && props.date))) {\n                          _context5.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name\");\n\n                      case 3:\n                        stmt = \"UPDATE Categories  set name= '\".concat(name, \"'  where id = \").concat(id);\n                        console.log(stmt);\n                        _context5.prev = 5;\n                        _context5.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context5.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Categories with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 15:\n                        _context5.prev = 15;\n                        _context5.t0 = _context5[\"catch\"](5);\n                        throw new Error(\"Could not update Categories with id \".concat(id) + _context5.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[5, 15]]);\n              }));\n\n              return function updateCategories(_x5, _x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getCategories: getCategories,\n              getgetCategoriesByID: getgetCategoriesByID,\n              createCategories: createCategories,\n              deleteCategories: deleteCategories,\n              updateCategories: updateCategories\n            };\n            return _context6.abrupt(\"return\", controller);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function CategoriesDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = CategoriesDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdGVnb3JpZXNfZGIuanMiXSwibmFtZXMiOlsiQ2F0ZWdvcmllc0RhdGFiYXNlIiwic3FsaXRlIiwib3BlbiIsImRiIiwiZ2V0Q2F0ZWdvcmllcyIsIm9yZGVyQnkiLCJzdG10IiwiYWxsIiwicm93cyIsImxlbmd0aCIsIkVycm9yIiwiZ2V0Z2V0Q2F0ZWdvcmllc0J5SUQiLCJpZCIsImNyZWF0ZUNhdGVnb3JpZXMiLCJwcm9wcyIsIm5hbWUiLCJydW4iLCJyZXN1bHQiLCJsYXN0SUQiLCJkZWxldGVDYXRlZ29yaWVzIiwiY2hhbmdlcyIsInVwZGF0ZUNhdGVnb3JpZXMiLCJkZXNjcmlwdGlvbiIsImRhdGUiLCJjb25zb2xlIiwibG9nIiwiY29udHJvbGxlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztBQUVBLElBQU1BLGtCQUFrQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDUkMsbUJBQU9DLElBQVAsQ0FBWSwyQkFBWixDQURROztBQUFBO0FBQ25CQyxZQUFBQSxFQURtQjs7QUFHbkJDLFlBQUFBLGFBSG1CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQ0FHSCxpQkFBTUMsT0FBTjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDaEJDLHdCQUFBQSxJQURnQixHQUNULDBCQURTO0FBQUE7QUFBQTtBQUFBLCtCQUlDSCxFQUFFLENBQUNJLEdBQUgsQ0FBT0QsSUFBUCxDQUpEOztBQUFBO0FBSVpFLHdCQUFBQSxJQUpZOztBQUFBLDhCQUtkQSxJQUFJLENBQUNDLE1BQUwsSUFBZSxDQUxEO0FBQUE7QUFBQTtBQUFBOztBQUFBLDhCQU1WLElBQUlDLEtBQUosQ0FBVSx1QkFBVixDQU5VOztBQUFBO0FBQUEseURBUVhGLElBUlc7O0FBQUE7QUFBQTtBQUFBO0FBQUEsOEJBVVosSUFBSUUsS0FBSixDQUFVLHdDQUFWLENBVlk7O0FBQUE7QUFBQTtBQUFB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Q2EsR0FBSCxDQUFPVixJQUFQLENBWEE7O0FBQUE7QUFXZlcsd0JBQUFBLE1BWGU7QUFZckJPLHdCQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVIsTUFBWjs7QUFacUIsOEJBYWpCQSxNQUFNLENBQUNYLElBQVAsQ0FBWWMsT0FBWixJQUF1QixDQWJOO0FBQUE7QUFBQTtBQUFBOztBQUFBLDhCQWNiLElBQUlWLEtBQUosOEJBQWdDRSxFQUFoQyxtQkFkYTs7QUFBQTtBQUFBLDBEQWdCZCxJQWhCYzs7QUFBQTtBQUFBO0FBQUE7QUFBQSw4QkFrQmYsSUFBSUYsS0FBSixDQUFVLDhDQUF1Q0UsRUFBdkMsZ0JBQVYsQ0FsQmU7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUE1REE7O0FBQUEsOEJBNERuQlMsZ0JBNURtQjtBQUFBO0FBQUE7QUFBQTs7QUFrRm5CSyxZQUFBQSxVQWxGbUIsR0FrRk47QUFDakJ0QixjQUFBQSxhQUFhLEVBQWJBLGFBRGlCO0FBRWpCTyxjQUFBQSxvQkFBb0IsRUFBcEJBLG9CQUZpQjtBQUdqQkUsY0FBQUEsZ0JBQWdCLEVBQWhCQSxnQkFIaUI7QUFJakJNLGNBQUFBLGdCQUFnQixFQUFoQkEsZ0JBSmlCO0FBS2pCRSxjQUFBQSxnQkFBZ0IsRUFBaEJBO0FBTGlCLGFBbEZNO0FBQUEsOENBMEZsQkssVUExRmtCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQWxCMUIsa0JBQWtCO0FBQUE7QUFBQTtBQUFBLEdBQXhCOztlQTZGZUEsa0IiLCJzb3VyY2VSb290IjoiL2hvbWUvYWtyYW0vQ3JlYW15Q3JlYXRpb25zL2JhY2svc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNxbGl0ZSBmcm9tICdzcWxpdGUnO1xuXG5jb25zdCBDYXRlZ29yaWVzRGF0YWJhc2UgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IGRiID0gYXdhaXQgc3FsaXRlLm9wZW4oJy4vQ3JlYW15Q2VhcnRpb25kYi5zcWxpdGUnKTtcblxuICBjb25zdCBnZXRDYXRlZ29yaWVzID0gYXN5bmMgb3JkZXJCeSA9PiB7XG4gICAgbGV0IHN0bXQgPSBcInNlbGVjdCAqIGZyb20gQ2F0ZWdvcmllc1wiO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJvd3MgPSBhd2FpdCBkYi5hbGwoc3RtdCk7XG4gICAgICBpZiAocm93cy5sZW5ndGggPT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYXRlZ29yaWVzIGFyZSBlbXB0eSFcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gcm93cztcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCByZXRyaWV2ZSBsaXN0IG9mIENhdGVnb3JpZXMgXCIpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBnZXRnZXRDYXRlZ29yaWVzQnlJRCA9IGFzeW5jIGlkID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3Qgcm93cyA9IGF3YWl0IGRiLmFsbChcbiAgICAgICAgYHNlbGVjdCAqIGZyb20gQ2F0ZWdvcmllcyB3aGVyZSBJZCA9ICR7aWR9YFxuICAgICAgKTtcbiAgICAgIGlmIChyb3dzLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2F0ZWdvcmllcyB3aXRoIGlkICR7aWR9IGlzIG5vdCBmb3VuZGApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJvd3M7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgcmV0cmlldmUgQ2F0ZWdvcmllc1wiKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgY3JlYXRlQ2F0ZWdvcmllcyA9IGFzeW5jIHByb3BzID0+IHtcbiAgICBjb25zdCB7IG5hbWUgfSA9IHByb3BzO1xuICAgIGlmICghbmFtZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBZb3UgbXVzdCBwcm92aWRlIGEgIG5hbWUgYCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYi5ydW4oXG4gICAgICAgIGBpbnNlcnQgSU5UTyBDYXRlZ29yaWVzIChuYW1lKSBWQUxVRVMgKCcke25hbWV9JylgXG4gICAgICApO1xuICAgICAgcmV0dXJuIHJlc3VsdC5zdG10Lmxhc3RJRDtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoaXMgY29tYmluYXRpb24gZG9lc250IHdvcmtcIik7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGRlbGV0ZUNhdGVnb3JpZXMgPSBhc3luYyBpZCA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRiLnJ1bihcbiAgICAgICAgYERFTEVURSBmcm9tIENhdGVnb3JpZXMgV0hFUkUgaWQgPSAke2lkfWBcbiAgICAgICk7XG4gICAgICBpZiAocmVzdWx0LnN0bXQuY2hhbmdlcyA9PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2F0ZWdvcmllcyB3aXRoIGlkICR7aWR9IGRvZXNudCBleGlzdGApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYENvdWxkIG5vdCBkZWxldGUgQ2F0ZWdvcmllcyB3aXRoIGlkICR7aWR9YCArIGVycik7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHVwZGF0ZUNhdGVnb3JpZXMgPSBhc3luYyAoaWQsIHByb3BzKSA9PiB7XG4gICAgY29uc3QgeyBuYW1lIH0gPSBwcm9wcztcbiAgICBpZiAoIXByb3BzICYmICEocHJvcHMuZGVzY3JpcHRpb24gJiYgcHJvcHMuZGF0ZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgWW91IG11c3QgcHJvdmlkZSBhIG5hbWVgKTtcbiAgICB9XG5cblxuICAgIGxldCBzdG10ID0gYFVQREFURSBDYXRlZ29yaWVzICBzZXQgbmFtZT0gJyR7bmFtZX0nICB3aGVyZSBpZCA9ICR7aWR9YDtcbiAgICBjb25zb2xlLmxvZyhzdG10KTtcblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYi5ydW4oc3RtdCk7XG4gICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAgaWYgKHJlc3VsdC5zdG10LmNoYW5nZXMgPT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhdGVnb3JpZXMgd2l0aCBpZCAke2lkfSBkb2VzbnQgZXhpc3RgKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBDb3VsZCBub3QgdXBkYXRlIENhdGVnb3JpZXMgd2l0aCBpZCAke2lkfWAgKyBlcnIpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBjb250cm9sbGVyID0ge1xuICAgIGdldENhdGVnb3JpZXMsXG4gICAgZ2V0Z2V0Q2F0ZWdvcmllc0J5SUQsXG4gICAgY3JlYXRlQ2F0ZWdvcmllcyxcbiAgICBkZWxldGVDYXRlZ29yaWVzLFxuICAgIHVwZGF0ZUNhdGVnb3JpZXNcbiAgfTtcblxuICByZXR1cm4gY29udHJvbGxlcjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhdGVnb3JpZXNEYXRhYmFzZTtcblxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Categories_db.js"
      ],
      "names": [
        "CategoriesDatabase",
        "sqlite",
        "open",
        "db",
        "getCategories",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getgetCategoriesByID",
        "id",
        "createCategories",
        "props",
        "name",
        "run",
        "result",
        "lastID",
        "deleteCategories",
        "changes",
        "updateCategories",
        "description",
        "date",
        "console",
        "log",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst CategoriesDatabase = async () => {\n  const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n\n  const getCategories = async orderBy => {\n    let stmt = \"select * from Categories\";\n\n    try {\n      const rows = await db.all(stmt);\n      if (rows.length == 0) {\n        throw new Error(\"Categories are empty!\");\n      }\n      return rows;\n    } catch (err) {\n      throw new Error(\"Could not retrieve list of Categories \");\n    }\n  };\n\n  const getgetCategoriesByID = async id => {\n    try {\n      const rows = await db.all(\n        `select * from Categories where Id = ${id}`\n      );\n      if (rows.length == 0) {\n        throw new Error(`Categories with id ${id} is not found`);\n      }\n      return rows;\n    } catch (err) {\n      throw new Error(\"Could not retrieve Categories\");\n    }\n  };\n\n  const createCategories = async props => {\n    const { name } = props;\n    if (!name) {\n      throw new Error(`You must provide a  name `);\n    }\n    try {\n      const result = await db.run(\n        `insert INTO Categories (name) VALUES ('${name}')`\n      );\n      return result.stmt.lastID;\n    } catch (err) {\n      throw new Error(\"This combination doesnt work\");\n    }\n  };\n\n  const deleteCategories = async id => {\n    try {\n      const result = await db.run(\n        `DELETE from Categories WHERE id = ${id}`\n      );\n      if (result.stmt.changes == 0) {\n        throw new Error(`Categories with id ${id} doesnt exist`);\n      }\n      return true;\n    } catch (err) {\n      throw new Error(`Could not delete Categories with id ${id}` + err);\n    }\n  };\n\n  const updateCategories = async (id, props) => {\n    const { name } = props;\n    if (!props && !(props.description && props.date)) {\n      throw new Error(`You must provide a name`);\n    }\n\n\n    let stmt = `UPDATE Categories  set name= '${name}'  where id = ${id}`;\n    console.log(stmt);\n\n    try {\n      const result = await db.run(stmt);\n      console.log(result);\n      if (result.stmt.changes == 0) {\n        throw new Error(`Categories with id ${id} doesnt exist`);\n      }\n      return true;\n    } catch (err) {\n      throw new Error(`Could not update Categories with id ${id}` + err);\n    }\n  };\n\n  const controller = {\n    getCategories,\n    getgetCategoriesByID,\n    createCategories,\n    deleteCategories,\n    updateCategories\n  };\n\n  return controller;\n};\n\nexport default CategoriesDatabase;\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582034280163
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/Events_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/Events_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/Events_db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/Events_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "Events_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Eventsdatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getEvents, getEventsByID, createEvents, deleteEvents, updateEvents, controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context6.sent;\n\n            getEvents =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"select * from Events\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Events are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of Events \");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getEvents(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getEventsByID =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return db.all(\"select * from Events where Id = \".concat(id));\n\n                      case 3:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Events with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context2.prev = 9;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"Could not retrieve Events\");\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 9]]);\n              }));\n\n              return function getEventsByID(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createEvents =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var id, description, location, date, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        id = props.id, description = props.description, location = props.location, date = props.date;\n\n                        if (!(!id || !description || !location || !date)) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a  id \");\n\n                      case 3:\n                        _context3.prev = 3;\n                        _context3.next = 6;\n                        return db.run(\"insert INTO Events (description, location, date) VALUES ('\".concat(description, \"', '\").concat(location, \"', \").concat(date, \")\"));\n\n                      case 6:\n                        result = _context3.sent;\n                        return _context3.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[3, 10]]);\n              }));\n\n              return function createEvents(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteEvents =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"DELETE from Events WHERE id = \".concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Events with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"Could not delete Events with id \".concat(id) + _context4.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 9]]);\n              }));\n\n              return function deleteEvents(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateEvents =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var description, location, date, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        description = props.description, location = props.location, date = props.date;\n\n                        if (!(!props && !(props.id && props.date))) {\n                          _context5.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a id\");\n\n                      case 3:\n                        stmt = \"UPDATE Events set description= '\".concat(description, \"' ,location='\").concat(location, \"', date =\").concat(date, \" where id = \").concat(id);\n                        console.log(stmt);\n                        _context5.prev = 5;\n                        _context5.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context5.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Events with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 15:\n                        _context5.prev = 15;\n                        _context5.t0 = _context5[\"catch\"](5);\n                        throw new Error(\"Could not update Events with id \".concat(id) + _context5.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[5, 15]]);\n              }));\n\n              return function updateEvents(_x5, _x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getEvents: getEvents,\n              getEventsByID: getEventsByID,\n              createEvents: createEvents,\n              deleteEvents: deleteEvents,\n              updateEvents: updateEvents\n            };\n            return _context6.abrupt(\"return\", controller);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function Eventsdatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = Eventsdatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Events_db.js"
      ],
      "names": [
        "Eventsdatabase",
        "sqlite",
        "open",
        "db",
        "getEvents",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getEventsByID",
        "id",
        "createEvents",
        "props",
        "description",
        "location",
        "date",
        "run",
        "result",
        "lastID",
        "deleteEvents",
        "changes",
        "updateEvents",
        "console",
        "log",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst Eventsdatabase = async()=>{\n   const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n    \n    const getEvents = async orderBy => {\n        let stmt = \"select * from Events\";\n     \n        try {\n          const rows = await db.all(stmt);\n          if (rows.length == 0) {\n            throw new Error(\"Events are empty!\");\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve list of Events \");\n        }\n      };\n    \n      const getEventsByID = async id => {\n        try {\n          const rows = await db.all(\n            `select * from Events where Id = ${id}`\n          );\n          if (rows.length == 0) {\n            throw new Error(`Events with id ${id} is not found`);\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve Events\");\n        }\n      };\n     \n      const createEvents  = async props => {\n        const { id, description, location, date} = props;\n        if (!id || !description || !location || !date) {\n          throw new Error(`You must provide a  id `);\n        }\n        try {\n          const result = await db.run(\n              `insert INTO Events (description, location, date) VALUES ('${description}', '${location}', ${date})`\n          );\n          return result.stmt.lastID;\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\");\n        }\n      };\n    \n      const deleteEvents= async id => {\n        try {\n          const result = await db.run(\n            `DELETE from Events WHERE id = ${id}`\n          );\n          if (result.stmt.changes == 0) {\n            throw new Error(`Events with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not delete Events with id ${id}` + err);\n        }\n      };\n    \n      const updateEvents = async (id, props) => {\n        const { description,location,date } = props;\n        if (!props && !(props.id && props.date)) {\n          throw new Error(`You must provide a id`);\n        }\n    \n     \n       let stmt = `UPDATE Events set description= '${description}' ,location='${location}', date =${date} where id = ${id}`;\n        console.log(stmt);\n       \n        try {\n          const result = await db.run(stmt);\n          console.log(result);\n          if (result.stmt.changes == 0) {\n            throw new Error(`Events with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not update Events with id ${id}` + err);\n        }\n      };\n    \n      const controller = {\n        getEvents,\n        getEventsByID,\n        createEvents ,\n        deleteEvents,\n        updateEvents \n      };\n    \n      return controller;\n    };\n    \nexport default  Eventsdatabase ;"
      ]
    },
    "sourceType": "script",
    "mtime": 1581424384337
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/ProductImage_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/ProductImage_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/ProductImage_db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/ProductImage_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "ProductImage_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar getProductImageDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getProductImages, getProductImagesByID, createProductImages, deleteProductImages, updateProductImages, controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context6.sent;\n\n            getProductImages =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"SELECT  * FROM ProductImages\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"ProductImages are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of productImages\");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getProductImages(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getProductImagesByID =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return db.all(\" SELECT * FROM ProductImages where id=\".concat(id));\n\n                      case 3:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"productImages with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context2.prev = 9;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"Could not retrieve productImages\");\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 9]]);\n              }));\n\n              return function getProductImagesByID(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createProductImages =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var path, Product_id, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        path = props.path, Product_id = props.Product_id;\n\n                        if (!(!props || !path || !Product_id)) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a id \");\n\n                      case 3:\n                        _context3.prev = 3;\n                        _context3.next = 6;\n                        return db.run(\"Insert into ProductImages (path,Products_id ) values ( '\".concat(path, \"',\").concat(Products_id, \")\"));\n\n                      case 6:\n                        result = _context3.sent;\n                        return _context3.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[3, 10]]);\n              }));\n\n              return function createProductImages(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteProductImages =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"Delete from ProductImages where id = \".concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"ProductImages with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"Could not delete productImages with id \".concat(id) + _context4.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 9]]);\n              }));\n\n              return function deleteProductImages(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateProductImages =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var path, Product_id, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        path = props.path, Product_id = props.Product_id;\n\n                        if (!(!props && !(props.path && props.Product_id))) {\n                          _context5.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a id or an path\");\n\n                      case 3:\n                        stmt = \"\";\n\n                        if (id && path && Product_id) {\n                          stmt = \"update ProductImages set  path = '\".concat(path, \"' ,Products_id= '\").concat(Product_id, \"' where id = \").concat(id, \" \");\n                          console.log(stmt);\n                        } else if (id && !path) {\n                          stmt = \"update ProductImages set id = '\".concat(id, \"' where id = \").concat(id, \" \");\n                        } else {\n                          stmt = \"update ProductImages set  path = '\".concat(path, \"' where id = \").concat(id, \" \");\n                        }\n\n                        _context5.prev = 5;\n                        _context5.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context5.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"ProductImages with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 15:\n                        _context5.prev = 15;\n                        _context5.t0 = _context5[\"catch\"](5);\n                        throw new Error(\"Could not update ProductImages with id \".concat(id) + _context5.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[5, 15]]);\n              }));\n\n              return function updateProductImages(_x5, _x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getProductImages: getProductImages,\n              createProductImages: createProductImages,\n              deleteProductImages: deleteProductImages,\n              updateProductImages: updateProductImages,\n              getProductImagesByID: getProductImagesByID\n            };\n            return _context6.abrupt(\"return\", controller);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function getProductImageDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = getProductImageDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "ProductImage_db.js"
      ],
      "names": [
        "getProductImageDatabase",
        "sqlite",
        "open",
        "db",
        "getProductImages",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getProductImagesByID",
        "id",
        "createProductImages",
        "props",
        "path",
        "Product_id",
        "run",
        "Products_id",
        "result",
        "lastID",
        "deleteProductImages",
        "changes",
        "updateProductImages",
        "console",
        "log",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst  getProductImageDatabase= async()=>{\n   const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n\n    const getProductImages = async orderBy => {\n        let stmt = \"SELECT  * FROM ProductImages\";\n     \n        try { \n          const rows = await db.all(stmt);\n          if (rows.length == 0) {\n            throw new Error(\"ProductImages are empty!\");\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve list of productImages\");\n        }\n      };\n    \n      const getProductImagesByID = async id => {\n        try {\n          const rows = await db.all(` SELECT * FROM ProductImages where id=${id}`\n          );\n          if (rows.length == 0) {\n            throw new Error(`productImages with id ${id} is not found`);\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve productImages\");\n        }\n      };\n     \n      const createProductImages = async props => {\n        const { path,Product_id } = props;\n        if (!props || !path ||!Product_id) {\n          throw new Error(`You must provide a id `);\n        }\n        try {\n          const result = await db.run(\n             `Insert into ProductImages (path,Products_id ) values ( '${path}',${Products_id})`\n          );\n          return result.stmt.lastID;\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\");\n        }\n      };\n    \n      const deleteProductImages = async id => {\n        try {\n          const result = await db.run(\n            `Delete from ProductImages where id = ${id}`\n          );\n          if (result.stmt.changes == 0) {\n            throw new Error(`ProductImages with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not delete productImages with id ${id}` + err);\n        }\n      };\n    \n      const updateProductImages = async (id, props) => {\n        const { path,Product_id } = props;\n        if (!props && !( props.path && props.Product_id )) {\n          throw new Error(`You must provide a id or an path`);\n        }\n    \n        let stmt = \"\";\n        if (id && path && Product_id) {\n          stmt = `update ProductImages set  path = '${path}' ,Products_id= '${Product_id}' where id = ${id} `;\n          console.log(stmt);\n        } else if (id&& !path) {\n          stmt = `update ProductImages set id = '${id}' where id = ${id} `;\n        } else {\n          stmt = `update ProductImages set  path = '${path}' where id = ${id} `;\n        }\n        try {\n          const result = await db.run(stmt);\n          console.log(result);\n          if (result.stmt.changes == 0) {\n            throw new Error(`ProductImages with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not update ProductImages with id ${id}` + err);\n        }\n        \n      };\n\n\n    \n      const controller = {\n        getProductImages,\n        \n        createProductImages,\n        deleteProductImages,\n        updateProductImages,\n        getProductImagesByID\n      \n      };\n    \n      return controller;\n    };\n    \nexport default  getProductImageDatabase ;"
      ]
    },
    "sourceType": "script",
    "mtime": 1581424308220
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/Orders_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/Orders_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/Orders_db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/Orders_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "Orders_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//to make connection with database . async is for to keep database open .await is to start this funcation first \nvar OrdersDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getOrders, getOrdersByID, createOrders, deleteOrders, updateOrders, controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context6.sent;\n\n            //To give me the Orders table\n            getOrders =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee() {\n                var statment, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        statment = \"select * from Orders\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(statment);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 9;\n                          break;\n                        }\n\n                        throw new Error(\"News are empty!\");\n\n                      case 9:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.next = 15;\n                        break;\n\n                      case 12:\n                        _context.prev = 12;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of News \");\n\n                      case 15:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 12]]);\n              }));\n\n              return function getOrders() {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getOrdersByID =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return db.all(\"select * from Orders where Id = \".concat(id));\n\n                      case 3:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 8;\n                          break;\n                        }\n\n                        throw new Error(\"News with id \".concat(id, \" is not found\"));\n\n                      case 8:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context2.next = 14;\n                        break;\n\n                      case 11:\n                        _context2.prev = 11;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"Could not retrieve product\");\n\n                      case 14:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 11]]);\n              }));\n\n              return function getOrdersByID(_x) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createOrders =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var date, username, userPhone, Products_ID, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        date = props.date, username = props.username, userPhone = props.userPhone, Products_ID = props.Products_ID;\n\n                        if (!(!date || !username || !userPhone || !Products_ID)) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a date  and username and userPhone and Product_ID\");\n\n                      case 3:\n                        _context3.prev = 3;\n                        _context3.next = 6;\n                        return db.run(\"Insert into Orders (date,username,userPhone,Products_ID ) values ('\".concat(date, \"','\").concat(username, \"',\").concat(userPhone, \",\").concat(Products_ID, \")\"));\n\n                      case 6:\n                        result = _context3.sent;\n                        return _context3.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[3, 10]]);\n              }));\n\n              return function createOrders(_x2) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteOrders =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"DELETE from Orders WHERE id = \".concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"Could not delete product with id \".concat(id) + _context4.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 9]]);\n              }));\n\n              return function deleteOrders(_x3) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateOrders =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var date, username, userPhone, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        date = props.date, username = props.username, userPhone = props.userPhone;\n                        console.log(props);\n\n                        if (!(!date || !username || !userPhone)) {\n                          _context5.next = 4;\n                          break;\n                        }\n\n                        throw new Error(\"You must change one ITEM \");\n\n                      case 4:\n                        stmt = \"\";\n\n                        if (date && username && userPhone) {\n                          stmt = \"UPDATE Orders set  date= \".concat(date, \" , username ='\").concat(username, \"',userPhone= \").concat(userPhone, \" where id = \").concat(id);\n                          console.log(stmt);\n                        }\n\n                        _context5.prev = 6;\n                        _context5.next = 9;\n                        return db.run(stmt);\n\n                      case 9:\n                        result = _context5.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 13;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 13:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 16:\n                        _context5.prev = 16;\n                        _context5.t0 = _context5[\"catch\"](6);\n                        throw new Error(\"Could not update Products with id \".concat(id) + _context5.t0);\n\n                      case 19:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[6, 16]]);\n              }));\n\n              return function updateOrders(_x4, _x5) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getOrders: getOrders,\n              getOrdersByID: getOrdersByID,\n              createOrders: createOrders,\n              deleteOrders: deleteOrders,\n              updateOrders: updateOrders\n            };\n            return _context6.abrupt(\"return\", controller);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function OrdersDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = OrdersDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Orders_db.js"
      ],
      "names": [
        "OrdersDatabase",
        "sqlite",
        "open",
        "db",
        "getOrders",
        "statment",
        "all",
        "rows",
        "length",
        "Error",
        "getOrdersByID",
        "id",
        "createOrders",
        "props",
        "date",
        "username",
        "userPhone",
        "Products_ID",
        "run",
        "result",
        "stmt",
        "lastID",
        "deleteOrders",
        "changes",
        "updateOrders",
        "console",
        "log",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\n//to make connection with database . async is for to keep database open .await is to start this funcation first \nconst OrdersDatabase = async()=>{\n    const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n\n\n    //To give me the Orders table\n    const getOrders = async()  => {  \n        let statment = \"select * from Orders\";\n     \n        try {\n          const rows = await db.all(statment);\n          if (rows.length == 0) {\n            throw new Error(\"News are empty!\");\n          }\n          else return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve list of News \");\n        }\n      };\n\n\n      const getOrdersByID = async id => {\n        try {\n          const rows = await db.all(\n            `select * from Orders where Id = ${id}`\n          );\n          if (rows.length == 0) {\n            throw new Error(`News with id ${id} is not found`);\n          }\n          else return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve product\");\n        }\n      };\n\n      const createOrders = async props => {\n        const { date,username,userPhone,Products_ID } = props;\n        if (!date || !username || !userPhone||!Products_ID) {\n          throw new Error(`You must provide a date  and username and userPhone and Product_ID`);\n        }\n        try {\n          const result = await db.run(\n             `Insert into Orders (date,username,userPhone,Products_ID ) values ('${date}','${username}',${userPhone},${Products_ID})`\n          );\n\n          //to return the last Id added\n          return result.stmt.lastID;\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\"); \n        }\n      };\n\n      const deleteOrders = async id => {\n        try {\n          const result = await db.run(\n            `DELETE from Orders WHERE id = ${id}`\n          );\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not delete product with id ${id}` + err);\n        }\n      };\n\n\n      const updateOrders = async (id, props) => {\n        const { date,username,userPhone } = props;\n        console.log(props)\n        if (!date || !username || !userPhone) {\n          throw new Error(`You must change one ITEM `);\n        }\n    \n        let stmt = \"\";\n        if ( date && username&& userPhone   ) {\n            stmt = `UPDATE Orders set  date= ${date} , username ='${username}',userPhone= ${userPhone} where id = ${id}`\n\n          console.log(stmt);\n          \n        } \n      \n        try {\n          const result = await db.run(stmt);\n          console.log(result);\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not update Products with id ${id}` + err);\n        }\n      };\n\n\n      const controller = {\n        getOrders,\n        getOrdersByID,\n        createOrders,\n        deleteOrders,\n        updateOrders\n      };\n    \n      return controller;\n\n    };\n    \n    export default  OrdersDatabase ;\n    \n        \n    \n\n\n\n\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581428706403
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/CatIDPro.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/CatIDPro.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/CatIDPro.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/CatIDPro.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "CatIDPro.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar CatIDPro =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2() {\n    var db, getCatIDPro, controller;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context2.sent;\n\n            getCatIDPro =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"select Categories.name from Products , Categories   WHERE Products.Categories_ID = Categories.ID\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Categories are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of Categories \");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getCatIDPro(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getCatIDPro: getCatIDPro\n            };\n            return _context2.abrupt(\"return\", controller);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function CatIDPro() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = CatIDPro;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdElEUHJvLmpzIl0sIm5hbWVzIjpbIkNhdElEUHJvIiwic3FsaXRlIiwib3BlbiIsImRiIiwiZ2V0Q2F0SURQcm8iLCJvcmRlckJ5Iiwic3RtdCIsImFsbCIsInJvd3MiLCJsZW5ndGgiLCJFcnJvciIsImNvbnRyb2xsZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7QUFFQSxJQUFNQSxRQUFRO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNJQyxtQkFBT0MsSUFBUCxDQUFZLDJCQUFaLENBREo7O0FBQUE7QUFDUEMsWUFBQUEsRUFETzs7QUFHUEMsWUFBQUEsV0FITztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0NBR08saUJBQU1DLE9BQU47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1pDLHdCQUFBQSxJQURZLEdBQ0wsa0dBREs7QUFBQTtBQUFBO0FBQUEsK0JBSU9ILEVBQUUsQ0FBQ0ksR0FBSCxDQUFPRCxJQUFQLENBSlA7O0FBQUE7QUFJTkUsd0JBQUFBLElBSk07O0FBQUEsOEJBS1JBLElBQUksQ0FBQ0MsTUFBTCxJQUFlLENBTFA7QUFBQTtBQUFBO0FBQUE7O0FBQUEsOEJBTUYsSUFBSUMsS0FBSixDQUFVLHVCQUFWLENBTkU7O0FBQUE7QUFBQSx5REFRTEYsSUFSSzs7QUFBQTtBQUFBO0FBQUE7QUFBQSw4QkFVTixJQUFJRSxLQUFKLENBQVUsd0NBQVYsQ0FWTTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQUhQOztBQUFBLDhCQUdQTixXQUhPO0FBQUE7QUFBQTtBQUFBOztBQW9CUE8sWUFBQUEsVUFwQk8sR0FvQk07QUFDZlAsY0FBQUEsV0FBVyxFQUFYQTtBQURlLGFBcEJOO0FBQUEsOENBd0JOTyxVQXhCTTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFSWCxRQUFRO0FBQUE7QUFBQTtBQUFBLEdBQWQ7O2VBMkJlQSxRIiwic291cmNlUm9vdCI6Ii9ob21lL2FrcmFtL0NyZWFteUNyZWF0aW9ucy9iYWNrL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzcWxpdGUgZnJvbSAnc3FsaXRlJztcblxuY29uc3QgQ2F0SURQcm8gPSBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgZGIgPSBhd2FpdCBzcWxpdGUub3BlbignLi9DcmVhbXlDZWFydGlvbmRiLnNxbGl0ZScpO1xuXG4gICAgY29uc3QgZ2V0Q2F0SURQcm8gPSBhc3luYyBvcmRlckJ5ID0+IHtcbiAgICAgICAgbGV0IHN0bXQgPSBcInNlbGVjdCBDYXRlZ29yaWVzLm5hbWUgZnJvbSBQcm9kdWN0cyAsIENhdGVnb3JpZXMgICBXSEVSRSBQcm9kdWN0cy5DYXRlZ29yaWVzX0lEID0gQ2F0ZWdvcmllcy5JRFwiO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByb3dzID0gYXdhaXQgZGIuYWxsKHN0bXQpO1xuICAgICAgICAgICAgaWYgKHJvd3MubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYXRlZ29yaWVzIGFyZSBlbXB0eSFcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcm93cztcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgcmV0cmlldmUgbGlzdCBvZiBDYXRlZ29yaWVzIFwiKTtcbiAgICAgICAgfVxuICAgIH07XG5cblxuXG5cbiAgICBjb25zdCBjb250cm9sbGVyID0ge1xuICAgICAgICBnZXRDYXRJRFByb1xuICAgIH07XG5cbiAgICByZXR1cm4gY29udHJvbGxlcjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhdElEUHJvO1xuXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "CatIDPro.js"
      ],
      "names": [
        "CatIDPro",
        "sqlite",
        "open",
        "db",
        "getCatIDPro",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "controller"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACIC,mBAAOC,IAAP,CAAY,2BAAZ,CADJ;;AAAA;AACPC,YAAAA,EADO;;AAGPC,YAAAA,WAHO;AAAA;AAAA;AAAA;AAAA;AAAA,sCAGO,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,wBAAAA,IADY,GACL,kGADK;AAAA;AAAA;AAAA,+BAIOH,EAAE,CAACI,GAAH,CAAOD,IAAP,CAJP;;AAAA;AAINE,wBAAAA,IAJM;;AAAA,8BAKRA,IAAI,CAACC,MAAL,IAAe,CALP;AAAA;AAAA;AAAA;;AAAA,8BAMF,IAAIC,KAAJ,CAAU,uBAAV,CANE;;AAAA;AAAA,yDAQLF,IARK;;AAAA;AAAA;AAAA;AAAA,8BAUN,IAAIE,KAAJ,CAAU,wCAAV,CAVM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHP;;AAAA,8BAGPN,WAHO;AAAA;AAAA;AAAA;;AAoBPO,YAAAA,UApBO,GAoBM;AACfP,cAAAA,WAAW,EAAXA;AADe,aApBN;AAAA,8CAwBNO,UAxBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARX,QAAQ;AAAA;AAAA;AAAA,GAAd;;eA2BeA,Q",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst CatIDPro = async () => {\n    const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n\n    const getCatIDPro = async orderBy => {\n        let stmt = \"select Categories.name from Products , Categories   WHERE Products.Categories_ID = Categories.ID\";\n\n        try {\n            const rows = await db.all(stmt);\n            if (rows.length == 0) {\n                throw new Error(\"Categories are empty!\");\n            }\n            return rows;\n        } catch (err) {\n            throw new Error(\"Could not retrieve list of Categories \");\n        }\n    };\n\n\n\n\n    const controller = {\n        getCatIDPro\n    };\n\n    return controller;\n};\n\nexport default CatIDPro;\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582037349797
  }
}