{
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _Product_db = _interopRequireDefault(require(\"./Product_db\"));\n\nvar _News_db = _interopRequireDefault(require(\"./News_db\"));\n\nvar _Categories_db = _interopRequireDefault(require(\"./Categories_db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\napp.listen(8080, function () {\n  console.log(\"Listening on port 8080\");\n}); //Products  \n\nvar startProduct =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return (0, _Product_db[\"default\"])();\n\n          case 2:\n            controller = _context6.sent;\n            app.get('/', function (req, res) {\n              res.json({\n                message: \"Hello\"\n              });\n            });\n            app.get('/Products/',\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return controller.getProducts(req.query);\n\n                      case 2:\n                        result = _context.sent;\n                        res.send(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x, _x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context2.next = 3;\n                        return controller.getProductsByID(id);\n\n                      case 3:\n                        result = _context2.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x3, _x4) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/create',\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(req, res) {\n                var _req$query, name, description, price, Categories_ID, result;\n\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _req$query = req.query, name = _req$query.name, description = _req$query.description, price = _req$query.price, Categories_ID = _req$query.Categories_ID;\n                        console.log({\n                          name: name,\n                          description: description,\n                          price: price,\n                          Categories_ID: Categories_ID\n                        });\n                        _context3.next = 4;\n                        return controller.createProducts({\n                          name: name,\n                          description: description,\n                          price: price,\n                          Categories_ID: Categories_ID\n                        });\n\n                      case 4:\n                        result = _context3.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x5, _x6) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context4.next = 3;\n                        return controller.deleteProducts(id);\n\n                      case 3:\n                        result = _context4.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x7, _x8) {\n                return _ref5.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/update/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(req, res) {\n                var id, _req$query2, name, description, price, result;\n\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        id = req.params.id;\n                        _req$query2 = req.query, name = _req$query2.name, description = _req$query2.description, price = _req$query2.price;\n                        _context5.next = 4;\n                        return controller.updateProducts(id, {\n                          name: name,\n                          description: description,\n                          price: price\n                        });\n\n                      case 4:\n                        result = _context5.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x9, _x10) {\n                return _ref6.apply(this, arguments);\n              };\n            }());\n\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function startProduct() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nstartProduct(); //News\n\nvar startNews =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee12() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return (0, _News_db[\"default\"])();\n\n          case 2:\n            controller = _context12.sent;\n            app.get('/News/',\n            /*#__PURE__*/\n            function () {\n              var _ref8 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee7(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.next = 2;\n                        return controller.getNews(req.query);\n\n                      case 2:\n                        result = _context7.sent;\n                        res.send(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7);\n              }));\n\n              return function (_x11, _x12) {\n                return _ref8.apply(this, arguments);\n              };\n            }());\n            app.get('/News/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref9 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee8(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context8.next = 3;\n                        return controller.getNewsByID(id);\n\n                      case 3:\n                        result = _context8.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8);\n              }));\n\n              return function (_x13, _x14) {\n                return _ref9.apply(this, arguments);\n              };\n            }());\n            app.get('/News/create',\n            /*#__PURE__*/\n            function () {\n              var _ref10 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee9(req, res) {\n                var _req$query3, description, date, result;\n\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _req$query3 = req.query, description = _req$query3.description, date = _req$query3.date;\n                        console.log({\n                          description: description,\n                          date: date\n                        });\n                        _context9.next = 4;\n                        return controller.createNews({\n                          description: description,\n                          date: date\n                        });\n\n                      case 4:\n                        result = _context9.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n\n              return function (_x15, _x16) {\n                return _ref10.apply(this, arguments);\n              };\n            }());\n            app.get('/News/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref11 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee10(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context10.next = 3;\n                        return controller.deleteNews(id);\n\n                      case 3:\n                        result = _context10.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10);\n              }));\n\n              return function (_x17, _x18) {\n                return _ref11.apply(this, arguments);\n              };\n            }());\n            app.get('/News/update/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref12 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee11(req, res) {\n                var id, _req$query4, description, date, result;\n\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        id = req.params.id;\n                        _req$query4 = req.query, description = _req$query4.description, date = _req$query4.date;\n                        _context11.next = 4;\n                        return controller.updateProducts(id, {\n                          description: description,\n                          date: date\n                        });\n\n                      case 4:\n                        result = _context11.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n\n              return function (_x19, _x20) {\n                return _ref12.apply(this, arguments);\n              };\n            }());\n\n          case 8:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function startNews() {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nstartNews(); //Categories\n\nvar startCategoriesDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref13 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee18() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.next = 2;\n            return (0, _Categories_db[\"default\"])();\n\n          case 2:\n            controller = _context18.sent;\n            app.get('/Categories/',\n            /*#__PURE__*/\n            function () {\n              var _ref14 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee13(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee13$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        _context13.next = 2;\n                        return controller.getCategories(req.query);\n\n                      case 2:\n                        result = _context13.sent;\n                        res.send(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, _callee13);\n              }));\n\n              return function (_x21, _x22) {\n                return _ref14.apply(this, arguments);\n              };\n            }());\n            app.get('/Categories/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref15 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee14(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee14$(_context14) {\n                  while (1) {\n                    switch (_context14.prev = _context14.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context14.next = 3;\n                        return controller.getgetCategoriesByID(id);\n\n                      case 3:\n                        result = _context14.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }\n                }, _callee14);\n              }));\n\n              return function (_x23, _x24) {\n                return _ref15.apply(this, arguments);\n              };\n            }());\n            app.get('/Categories/create',\n            /*#__PURE__*/\n            function () {\n              var _ref16 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee15(req, res) {\n                var name, result;\n                return regeneratorRuntime.wrap(function _callee15$(_context15) {\n                  while (1) {\n                    switch (_context15.prev = _context15.next) {\n                      case 0:\n                        name = req.query.name;\n                        console.log({\n                          name: name\n                        });\n                        _context15.next = 4;\n                        return controller.createCategories({\n                          name: name\n                        });\n\n                      case 4:\n                        result = _context15.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context15.stop();\n                    }\n                  }\n                }, _callee15);\n              }));\n\n              return function (_x25, _x26) {\n                return _ref16.apply(this, arguments);\n              };\n            }());\n            app.get('/Categories/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref17 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee16(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee16$(_context16) {\n                  while (1) {\n                    switch (_context16.prev = _context16.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context16.next = 3;\n                        return controller.deleteCategories(id);\n\n                      case 3:\n                        result = _context16.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context16.stop();\n                    }\n                  }\n                }, _callee16);\n              }));\n\n              return function (_x27, _x28) {\n                return _ref17.apply(this, arguments);\n              };\n            }());\n            app.get('/Categories/update/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref18 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee17(req, res) {\n                var id, name, result;\n                return regeneratorRuntime.wrap(function _callee17$(_context17) {\n                  while (1) {\n                    switch (_context17.prev = _context17.next) {\n                      case 0:\n                        id = req.params.id;\n                        name = req.query.name;\n                        _context17.next = 4;\n                        return controller.updateCategories(id, {\n                          name: name\n                        });\n\n                      case 4:\n                        result = _context17.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context17.stop();\n                    }\n                  }\n                }, _callee17);\n              }));\n\n              return function (_x29, _x30) {\n                return _ref18.apply(this, arguments);\n              };\n            }());\n\n          case 8:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n\n  return function startCategoriesDatabase() {\n    return _ref13.apply(this, arguments);\n  };\n}();\n\nstartCategoriesDatabase();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "listen",
        "console",
        "log",
        "startProduct",
        "controller",
        "get",
        "req",
        "res",
        "json",
        "message",
        "getProducts",
        "query",
        "result",
        "send",
        "id",
        "params",
        "getProductsByID",
        "name",
        "description",
        "price",
        "Categories_ID",
        "createProducts",
        "deleteProducts",
        "updateProducts",
        "startNews",
        "getNews",
        "getNewsByID",
        "date",
        "createNews",
        "deleteNews",
        "startCategoriesDatabase",
        "getCategories",
        "getgetCategoriesByID",
        "createCategories",
        "deleteCategories",
        "updateCategories"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import express from 'express';\nimport ProductsDatabase from './Product_db';\nimport NewsDatabase from './News_db';\nimport CategoriesDatabase from './Categories_db'\nconst app = express();\n\napp.listen(8080, ()=>{console.log(\"Listening on port 8080\")});\n\n\n//Products  \nconst startProduct = async()=>{\n\n  const controller = await ProductsDatabase()  ;\n  app.get('/', (req, res)=>{\n\n    res.json({message:\"Hello\"});\n  });\n  \n  app.get('/Products/', async(req, res)=>{\n    const result = await controller.getProducts(req.query);\n    res.send(result);\n  });\n \n  app.get('/Products/:id', async(req, res)=>{\n    const {id} = req.params;\n    const result = await controller.getProductsByID(id);\n    res.json(result);\n  });\n\n  app.get('/Products/create', async(req, res)=>{\n    const{name,description,price,Categories_ID } = req.query;\n  console.log({name,description,price,Categories_ID })\n    const result = await controller.createProducts({name,description,price,Categories_ID});\n    res.json(result);\n  });\n\n  app.get('/Products/delete/:id', async(req, res)=>{\n   \n    const {id}= req.params;\n    const result = await controller.deleteProducts(id);\n    res.json(result);\n  });\n\n  app.get('/Products/update/:id', async(req, res)=>{\n   \n    const {id}= req.params;\n    const {name,description,price } = req.query;\n    const result = await controller.updateProducts(id, {name,description,price});\n    res.json(result);\n  });\n  \n \n  \n \n\n}\nstartProduct()\n\n//News\n\nconst startNews = async()=>{\n\n  const controller = await NewsDatabase()  ;\n\n  \n  app.get('/News/', async(req, res)=>{\n    const result = await controller.getNews(req.query);\n    res.send(result);\n  });\n \n  app.get('/News/:id', async(req, res)=>{\n    const {id} = req.params;\n    const result = await controller.getNewsByID(id);\n    res.json(result);\n  });\n\n  app.get('/News/create', async(req, res)=>{\n    const{description,date } = req.query;\n  console.log({description,date})\n    const result = await controller.createNews({description,date});\n    res.json(result);\n  });\n\n  app.get('/News/delete/:id', async(req, res)=>{\n   \n    const {id}= req.params;\n    const result = await controller.deleteNews(id);\n    res.json(result);\n  });\n\n  app.get('/News/update/:id', async(req, res)=>{\n   \n    const {id}= req.params;\n    const {description,date } = req.query;\n    const result = await controller.updateProducts(id, {description,date});\n    res.json(result);\n  });\n  \n \n \n\n}\nstartNews()\n\n//Categories\n\nconst startCategoriesDatabase = async()=>{\n\n  const controller = await CategoriesDatabase()  ;\n\n  \n  app.get('/Categories/', async(req, res)=>{\n    const result = await controller.getCategories(req.query);\n    res.send(result);\n  });\n \n  app.get('/Categories/:id', async(req, res)=>{\n    const {id} = req.params;\n    const result = await controller.getgetCategoriesByID(id);\n    res.json(result);\n  });\n\n  app.get('/Categories/create', async(req, res)=>{\n    const{name } = req.query;\n  console.log({name})\n    const result = await controller.createCategories({name});\n    res.json(result);\n  });\n\n  app.get('/Categories/delete/:id', async(req, res)=>{\n   \n    const {id}= req.params;\n    const result = await controller.deleteCategories(id);\n    res.json(result);\n  });\n\n  app.get('/Categories/update/:id', async(req, res)=>{\n   \n    const {id}= req.params;\n    const {name } = req.query;\n    const result = await controller.updateCategories(id, {name});\n    res.json(result);\n  });\n  \n \n \n\n}\nstartCategoriesDatabase()\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581344520647
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getProducts, getProductsByID, createProducts, deleteProducts, updateProducts, controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context6.sent;\n\n            getProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"SELECT  id, name,description,price FROM Products\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Products are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of products\");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getProducts(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getProductsByID =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return db.all(\" SELECT id,name,description,price FROM Products where id=\".concat(id));\n\n                      case 3:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"product with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context2.prev = 9;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"Could not retrieve product\");\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 9]]);\n              }));\n\n              return function getProductsByID(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var name, description, price, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price;\n\n                        if (!(!props || !name || !description || !price)) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name and description and price\");\n\n                      case 3:\n                        _context3.prev = 3;\n                        _context3.next = 6;\n                        return db.run(\"Insert into Products (name,description,price,Categories_ID ) values ('\".concat(name, \"', '\").concat(description, \"',\").concat(price, \",\").concat(Categories_ID, \")\"));\n\n                      case 6:\n                        result = _context3.sent;\n                        return _context3.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[3, 10]]);\n              }));\n\n              return function createProducts(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"Delete from Products where id = \".concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"Could not delete product with id \".concat(id) + _context4.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 9]]);\n              }));\n\n              return function deleteProducts(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var name, description, price, Categories_ID, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price, Categories_ID = props.Categories_ID;\n\n                        if (!(!props && !(props.name && props.description && props.price && props.Categories_ID))) {\n                          _context5.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name or an description\");\n\n                      case 3:\n                        stmt = \"\";\n\n                        if (name && description && price) {\n                          stmt = \"update Products set name = '\".concat(name, \"', description = '\").concat(description, \"' ,price = '\").concat(price, \"' where id = \").concat(id, \" \");\n                          console.log(stmt);\n                        } else if (name && !description) {\n                          stmt = \"update Products set name = '\".concat(name, \"' where id = \").concat(id, \" \");\n                        } else {\n                          stmt = \"update Products set  description = '\".concat(description, \"' where id = \").concat(id, \" \");\n                        }\n\n                        _context5.prev = 5;\n                        _context5.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context5.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 15:\n                        _context5.prev = 15;\n                        _context5.t0 = _context5[\"catch\"](5);\n                        throw new Error(\"Could not update Products with id \".concat(id) + _context5.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[5, 15]]);\n              }));\n\n              return function updateProducts(_x5, _x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }(); // const getNews = async => {\n            //   let stmt = \"select * from News\";\n            //   try {\n            //     const rows = await db.all(stmt);\n            //     if (rows.length == 0) {\n            //       throw new Error(\"Products are empty!\");\n            //     }\n            //     return rows;\n            //   } catch (err) {\n            //     throw new Error(\"Could not retrieve list of \");\n            //   }\n            // };\n            // const getNewsByID = async id => {\n            //   try {\n            //     const rows = await db.all(\n            //       `select * from News where Id = ${id}`\n            //     );\n            //     if (rows.length == 0) {\n            //       throw new Error(`News with id ${id} is not found`);\n            //     }\n            //     return rows;\n            //   } catch (err) {\n            //     throw new Error(\"Could not retrieve product\");\n            //   }\n            // };\n            // const createNews = async props => {\n            //   const { description,date} = props;\n            //   if (!props  || !description||!date) {\n            //     throw new Error(`You must provide a  description and date`);\n            //   }\n            //   try {\n            //     const result = await db.run(\n            //         `Insert INTO News (description,date) VALUES ('${description}',${date})`\n            //     );\n            //     return result.stmt.lastID;\n            //   } catch (err) {\n            //     throw new Error(\"This combination doesnt work\");\n            //   }\n            // };\n            // const deleteNews = async id => {\n            //   try {\n            //     const result = await db.run(\n            //       `DELETE from News WHERE id = ${id}`\n            //     );\n            //     if (result.stmt.changes == 0) {\n            //       throw new Error(`Product with id ${id} doesnt exist`);\n            //     }\n            //     return true;\n            //   } catch (err) {\n            //     throw new Error(`Could not delete product with id ${id}` + err);\n            //   }\n            // };\n            // const updateNews = async (id, props) => {\n            //   const { name,description,date } = props;\n            //   if (!props && !(props.description && props.date)) {\n            //     throw new Error(`You must provide a name or an description`);\n            //   }\n            //   let stmt = \"\";\n            //   if ( description && date) {\n            //     stmt = `UPDATE News set description= '${description}' , date =${date} where id = ${id}`;\n            //     console.log(stmt);\n            //   } else if (description && !date) {\n            //     stmt =`UPDATE News set description= '${description}'  where id = ${id}`;\n            //   } else {\n            //     stmt = `UPDATE News set date =${date} where id = ${id}`;\n            //   }\n            //   try {\n            //     const result = await db.run(stmt);\n            //     console.log(result);\n            //     if (result.stmt.changes == 0) {\n            //       throw new Error(`Product with id ${id} doesnt exist`);\n            //     }\n            //     return true;\n            //   } catch (err) {\n            //     throw new Error(`Could not update Products with id ${id}` + err);\n            //   }\n            // };\n\n\n            controller = {\n              getProducts: getProducts,\n              createProducts: createProducts,\n              deleteProducts: deleteProducts,\n              updateProducts: updateProducts,\n              getProductsByID: getProductsByID // ,\n              // getNews,\n              //  createNews,\n              // deleteNews,\n              // updateNews,\n              // getNewsByID\n\n            };\n            return _context6.abrupt(\"return\", controller);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "initializeDatabase",
        "sqlite",
        "open",
        "db",
        "getProducts",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getProductsByID",
        "id",
        "createProducts",
        "props",
        "name",
        "description",
        "price",
        "run",
        "Categories_ID",
        "result",
        "lastID",
        "deleteProducts",
        "changes",
        "updateProducts",
        "console",
        "log",
        "controller"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACNC,mBAAOC,IAAP,CAAY,2BAAZ,CADM;;AAAA;AACjBC,YAAAA,EADiB;;AAGhBC,YAAAA,WAHgB;AAAA;AAAA;AAAA;AAAA;AAAA,sCAGF,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,wBAAAA,IADY,GACL,kDADK;AAAA;AAAA;AAAA,+BAIKH,EAAE,CAACI,GAAH,CAAOD,IAAP,CAJL;;AAAA;AAIRE,wBAAAA,IAJQ;;AAAA,8BAKVA,IAAI,CAACC,MAAL,IAAe,CALL;AAAA;AAAA;AAAA;;AAAA,8BAMN,IAAIC,KAAJ,CAAU,qBAAV,CANM;;AAAA;AAAA,yDAQPF,IARO;;AAAA;AAAA;AAAA;AAAA,8BAUR,IAAIE,KAAJ,CAAU,qCAAV,CAVQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHE;;AAAA,8BAGhBN,WAHgB;AAAA;AAAA;AAAA;;AAiBdO,YAAAA,eAjBc;AAAA;AAAA;AAAA;AAAA;AAAA,sCAiBI,kBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEDT,EAAE,CAACI,GAAH,oEAAmEK,EAAnE,EAFC;;AAAA;AAEdJ,wBAAAA,IAFc;;AAAA,8BAIhBA,IAAI,CAACC,MAAL,IAAe,CAJC;AAAA;AAAA;AAAA;;AAAA,8BAKZ,IAAIC,KAAJ,2BAA6BE,EAA7B,mBALY;;AAAA;AAAA,0DAObJ,IAPa;;AAAA;AAAA;AAAA;AAAA,8BASd,IAAIE,KAAJ,CAAU,4BAAV,CATc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBJ;;AAAA,8BAiBdC,eAjBc;AAAA;AAAA;AAAA;;AA8BdE,YAAAA,cA9Bc;AAAA;AAAA;AAAA;AAAA;AAAA,sCA8BG,kBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,wBAAAA,IADa,GACcD,KADd,CACbC,IADa,EACRC,WADQ,GACcF,KADd,CACRE,WADQ,EACIC,KADJ,GACcH,KADd,CACIG,KADJ;;AAAA,8BAEjB,CAACH,KAAD,IAAU,CAACC,IAAX,IAAmB,CAACC,WAApB,IAAiC,CAACC,KAFjB;AAAA;AAAA;AAAA;;AAAA,8BAGb,IAAIP,KAAJ,qDAHa;;AAAA;AAAA;AAAA;AAAA,+BAMEP,EAAE,CAACe,GAAH,iFACuDH,IADvD,iBACkEC,WADlE,eACkFC,KADlF,cAC2FE,aAD3F,OANF;;AAAA;AAMbC,wBAAAA,MANa;AAAA,0DASZA,MAAM,CAACd,IAAP,CAAYe,MATA;;AAAA;AAAA;AAAA;AAAA,8BAWb,IAAIX,KAAJ,CAAU,8BAAV,CAXa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA9BH;;AAAA,8BA8BdG,cA9Bc;AAAA;AAAA;AAAA;;AA6CdS,YAAAA,cA7Cc;AAAA;AAAA;AAAA;AAAA;AAAA,sCA6CG,kBAAMV,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEET,EAAE,CAACe,GAAH,2CACgBN,EADhB,EAFF;;AAAA;AAEbQ,wBAAAA,MAFa;;AAAA,8BAKfA,MAAM,CAACd,IAAP,CAAYiB,OAAZ,IAAuB,CALR;AAAA;AAAA;AAAA;;AAAA,8BAMX,IAAIb,KAAJ,2BAA6BE,EAA7B,mBANW;;AAAA;AAAA,0DAQZ,IARY;;AAAA;AAAA;AAAA;AAAA,8BAUb,IAAIF,KAAJ,CAAU,2CAAoCE,EAApC,gBAAV,CAVa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA7CH;;AAAA,8BA6CdU,cA7Cc;AAAA;AAAA;AAAA;;AA2DdE,YAAAA,cA3Dc;AAAA;AAAA;AAAA;AAAA;AAAA,sCA2DG,kBAAOZ,EAAP,EAAWE,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,wBAAAA,IADa,GAC6BD,KAD7B,CACbC,IADa,EACRC,WADQ,GAC6BF,KAD7B,CACRE,WADQ,EACIC,KADJ,GAC6BH,KAD7B,CACIG,KADJ,EACUE,aADV,GAC6BL,KAD7B,CACUK,aADV;;AAAA,8BAEjB,CAACL,KAAD,IAAU,EAAEA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACE,WAApB,IAAmCF,KAAK,CAACG,KAAzC,IAAkDH,KAAK,CAACK,aAA1D,CAFO;AAAA;AAAA;AAAA;;AAAA,8BAGb,IAAIT,KAAJ,6CAHa;;AAAA;AAMjBJ,wBAAAA,IANiB,GAMV,EANU;;AAOrB,4BAAIS,IAAI,IAAIC,WAAR,IAAuBC,KAA3B,EAAkC;AAChCX,0BAAAA,IAAI,yCAAkCS,IAAlC,+BAA2DC,WAA3D,yBAAqFC,KAArF,0BAA0GL,EAA1G,MAAJ;AACAa,0BAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AACD,yBAHD,MAGO,IAAIS,IAAI,IAAI,CAACC,WAAb,EAA0B;AAC/BV,0BAAAA,IAAI,yCAAkCS,IAAlC,0BAAsDH,EAAtD,MAAJ;AACD,yBAFM,MAEA;AACLN,0BAAAA,IAAI,iDAA0CU,WAA1C,0BAAqEJ,EAArE,MAAJ;AACD;;AAdoB;AAAA;AAAA,+BAgBET,EAAE,CAACe,GAAH,CAAOZ,IAAP,CAhBF;;AAAA;AAgBbc,wBAAAA,MAhBa;AAiBnBK,wBAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;;AAjBmB,8BAkBfA,MAAM,CAACd,IAAP,CAAYiB,OAAZ,IAAuB,CAlBR;AAAA;AAAA;AAAA;;AAAA,8BAmBX,IAAIb,KAAJ,2BAA6BE,EAA7B,mBAnBW;;AAAA;AAAA,0DAqBZ,IArBY;;AAAA;AAAA;AAAA;AAAA,8BAuBb,IAAIF,KAAJ,CAAU,4CAAqCE,EAArC,gBAAV,CAvBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA3DH;;AAAA,8BA2DdY,cA3Dc;AAAA;AAAA;AAAA,iBAuFpB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEMG,YAAAA,UA3Kc,GA2KD;AACjBvB,cAAAA,WAAW,EAAXA,WADiB;AAEjBS,cAAAA,cAAc,EAAdA,cAFiB;AAGjBS,cAAAA,cAAc,EAAdA,cAHiB;AAIjBE,cAAAA,cAAc,EAAdA,cAJiB;AAKjBb,cAAAA,eAAe,EAAfA,eALiB,CAMjB;AACA;AACA;AACA;AACA;AACA;;AAXiB,aA3KC;AAAA,8CAyLbgB,UAzLa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF;;AAAA,kBAAlB3B,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;eA4LgBA,kB",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst initializeDatabase= async()=>{\n   const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n\n    const getProducts = async orderBy => {\n        let stmt = \"SELECT  id, name,description,price FROM Products\";\n     \n        try { \n          const rows = await db.all(stmt);\n          if (rows.length == 0) {\n            throw new Error(\"Products are empty!\");\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve list of products\");\n        }\n      };\n    \n      const getProductsByID = async id => {\n        try {\n          const rows = await db.all(` SELECT id,name,description,price FROM Products where id=${id}`\n          );\n          if (rows.length == 0) {\n            throw new Error(`product with id ${id} is not found`);\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve product\");\n        }\n      };\n     \n      const createProducts = async props => {\n        const { name,description,price } = props;\n        if (!props || !name || !description||!price) {\n          throw new Error(`You must provide a name and description and price`);\n        }\n        try {\n          const result = await db.run(\n             `Insert into Products (name,description,price,Categories_ID ) values ('${name}', '${description}',${price},${Categories_ID})`\n          );\n          return result.stmt.lastID;\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\");\n        }\n      };\n    \n      const deleteProducts = async id => {\n        try {\n          const result = await db.run(\n            `Delete from Products where id = ${id}`\n          );\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not delete product with id ${id}` + err);\n        }\n      };\n    \n      const updateProducts = async (id, props) => {\n        const { name,description,price,Categories_ID  } = props;\n        if (!props && !(props.name && props.description && props.price && props.Categories_ID)) {\n          throw new Error(`You must provide a name or an description`);\n        }\n    \n        let stmt = \"\";\n        if (name && description && price) {\n          stmt = `update Products set name = '${name}', description = '${description}' ,price = '${price}' where id = ${id} `;\n          console.log(stmt);\n        } else if (name && !description) {\n          stmt = `update Products set name = '${name}' where id = ${id} `;\n        } else {\n          stmt = `update Products set  description = '${description}' where id = ${id} `;\n        }\n        try {\n          const result = await db.run(stmt);\n          console.log(result);\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not update Products with id ${id}` + err);\n        }\n        \n      };\n\n      // const getNews = async => {\n      //   let stmt = \"select * from News\";\n     \n      //   try {\n      //     const rows = await db.all(stmt);\n      //     if (rows.length == 0) {\n      //       throw new Error(\"Products are empty!\");\n      //     }\n      //     return rows;\n      //   } catch (err) {\n      //     throw new Error(\"Could not retrieve list of \");\n      //   }\n      // };\n    \n      // const getNewsByID = async id => {\n      //   try {\n      //     const rows = await db.all(\n      //       `select * from News where Id = ${id}`\n      //     );\n      //     if (rows.length == 0) {\n      //       throw new Error(`News with id ${id} is not found`);\n      //     }\n      //     return rows;\n      //   } catch (err) {\n      //     throw new Error(\"Could not retrieve product\");\n      //   }\n      // };\n     \n      // const createNews = async props => {\n      //   const { description,date} = props;\n      //   if (!props  || !description||!date) {\n      //     throw new Error(`You must provide a  description and date`);\n      //   }\n      //   try {\n      //     const result = await db.run(\n      //         `Insert INTO News (description,date) VALUES ('${description}',${date})`\n      //     );\n      //     return result.stmt.lastID;\n      //   } catch (err) {\n      //     throw new Error(\"This combination doesnt work\");\n      //   }\n      // };\n    \n      // const deleteNews = async id => {\n      //   try {\n      //     const result = await db.run(\n      //       `DELETE from News WHERE id = ${id}`\n      //     );\n      //     if (result.stmt.changes == 0) {\n      //       throw new Error(`Product with id ${id} doesnt exist`);\n      //     }\n      //     return true;\n      //   } catch (err) {\n      //     throw new Error(`Could not delete product with id ${id}` + err);\n      //   }\n      // };\n    \n      // const updateNews = async (id, props) => {\n      //   const { name,description,date } = props;\n      //   if (!props && !(props.description && props.date)) {\n      //     throw new Error(`You must provide a name or an description`);\n      //   }\n    \n      //   let stmt = \"\";\n      //   if ( description && date) {\n      //     stmt = `UPDATE News set description= '${description}' , date =${date} where id = ${id}`;\n      //     console.log(stmt);\n      //   } else if (description && !date) {\n      //     stmt =`UPDATE News set description= '${description}'  where id = ${id}`;\n      //   } else {\n      //     stmt = `UPDATE News set date =${date} where id = ${id}`;\n      //   }\n      //   try {\n      //     const result = await db.run(stmt);\n      //     console.log(result);\n      //     if (result.stmt.changes == 0) {\n      //       throw new Error(`Product with id ${id} doesnt exist`);\n      //     }\n      //     return true;\n      //   } catch (err) {\n      //     throw new Error(`Could not update Products with id ${id}` + err);\n      //   }\n      // };\n    \n      const controller = {\n        getProducts,\n        createProducts,\n        deleteProducts,\n        updateProducts,\n        getProductsByID\n        // ,\n        // getNews,\n        //  createNews,\n        // deleteNews,\n        // updateNews,\n        // getNewsByID\n      };\n    \n      return controller;\n    };\n    \nexport default  initializeDatabase ;\n\n    \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581251947527
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/Products_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/Products_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/Products_db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/Products_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "Products_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee11() {\n    var db, getNews, getProducts, getProductsByID, createProducts, deleteProducts, updateProducts;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context11.sent;\n\n            getNews =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"select * from News\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Products are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of \");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getNews(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        stmt = \"SELECT  id, name,description,price FROM Products\";\n                        _context2.prev = 1;\n                        _context2.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Products are empty!\");\n\n                      case 7:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context2.prev = 10;\n                        _context2.t0 = _context2[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of products\");\n\n                      case 13:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[1, 10]]);\n              }));\n\n              return function getProducts(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            getProductsByID =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.prev = 0;\n                        _context3.next = 3;\n                        return db.all(\"SELECT id,name,description,price FROM Products where id=\".concat(id));\n\n                      case 3:\n                        rows = _context3.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context3.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"product with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context3.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context3.prev = 9;\n                        _context3.t0 = _context3[\"catch\"](0);\n                        throw new Error(\"Could not retrieve product\");\n\n                      case 12:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[0, 9]]);\n              }));\n\n              return function getProductsByID(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            createProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(props) {\n                var name, description, price, result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price;\n\n                        if (!(!props || !name || !description || !price)) {\n                          _context4.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name and description and price\");\n\n                      case 3:\n                        _context4.prev = 3;\n                        _context4.next = 6;\n                        return db.run(\"Insert into Products (name,description,price,Categories_ID ) values ('\".concat(name, \"', '\").concat(description, \"',\").concat(price, \",\").concat(Categories_ID, \")\"));\n\n                      case 6:\n                        result = _context4.sent;\n                        return _context4.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context4.prev = 10;\n                        _context4.t0 = _context4[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[3, 10]]);\n              }));\n\n              return function createProducts(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            deleteProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.prev = 0;\n                        _context5.next = 3;\n                        return db.run(\"Delete from Products where id = \".concat(id));\n\n                      case 3:\n                        result = _context5.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 9:\n                        _context5.prev = 9;\n                        _context5.t0 = _context5[\"catch\"](0);\n                        throw new Error(\"Could not delete product with id \".concat(id) + _context5.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[0, 9]]);\n              }));\n\n              return function deleteProducts(_x5) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            updateProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref7 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee10(id, props) {\n                var name, description, price, Categories_ID, stmt, result, getNewsByID, createNews, deleteNews, updateNews, controller;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price, Categories_ID = props.Categories_ID;\n\n                        if (!(!props && !(props.name && props.description && props.price && props.Categories_ID))) {\n                          _context10.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name or an description\");\n\n                      case 3:\n                        stmt = \"\";\n\n                        if (name && description && price) {\n                          stmt = \"update Products set name = '\".concat(name, \"', description = '\").concat(description, \"' ,price = '\").concat(price, \"' where id = \").concat(id, \" \");\n                          console.log(stmt);\n                        } else if (name && !description) {\n                          stmt = \"update Products set name = '\".concat(name, \"' where id = \").concat(id, \" \");\n                        } else {\n                          stmt = \"update Products set  description = '\".concat(description, \"' where id = \").concat(id, \" \");\n                        }\n\n                        _context10.prev = 5;\n                        _context10.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context10.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context10.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context10.abrupt(\"return\", true);\n\n                      case 15:\n                        _context10.prev = 15;\n                        _context10.t0 = _context10[\"catch\"](5);\n                        throw new Error(\"Could not update Products with id \".concat(id) + _context10.t0);\n\n                      case 18:\n                        getNewsByID =\n                        /*#__PURE__*/\n                        function () {\n                          var _ref8 = _asyncToGenerator(\n                          /*#__PURE__*/\n                          regeneratorRuntime.mark(function _callee6(id) {\n                            var rows;\n                            return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                              while (1) {\n                                switch (_context6.prev = _context6.next) {\n                                  case 0:\n                                    _context6.prev = 0;\n                                    _context6.next = 3;\n                                    return db.all(\"select * from News where Id = \".concat(id));\n\n                                  case 3:\n                                    rows = _context6.sent;\n\n                                    if (!(rows.length == 0)) {\n                                      _context6.next = 6;\n                                      break;\n                                    }\n\n                                    throw new Error(\"News with id \".concat(id, \" is not found\"));\n\n                                  case 6:\n                                    return _context6.abrupt(\"return\", rows);\n\n                                  case 9:\n                                    _context6.prev = 9;\n                                    _context6.t0 = _context6[\"catch\"](0);\n                                    throw new Error(\"Could not retrieve product\");\n\n                                  case 12:\n                                  case \"end\":\n                                    return _context6.stop();\n                                }\n                              }\n                            }, _callee6, null, [[0, 9]]);\n                          }));\n\n                          return function getNewsByID(_x8) {\n                            return _ref8.apply(this, arguments);\n                          };\n                        }();\n\n                        createNews =\n                        /*#__PURE__*/\n                        function () {\n                          var _ref9 = _asyncToGenerator(\n                          /*#__PURE__*/\n                          regeneratorRuntime.mark(function _callee7(props) {\n                            var description, date, _result;\n\n                            return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                              while (1) {\n                                switch (_context7.prev = _context7.next) {\n                                  case 0:\n                                    description = props.description, date = props.date;\n\n                                    if (!(!props || !description || !date)) {\n                                      _context7.next = 3;\n                                      break;\n                                    }\n\n                                    throw new Error(\"You must provide a  description and date\");\n\n                                  case 3:\n                                    _context7.prev = 3;\n                                    _context7.next = 6;\n                                    return db.run(\"Insert INTO News (description,date) VALUES ('\".concat(description, \"',\").concat(date, \")\"));\n\n                                  case 6:\n                                    _result = _context7.sent;\n                                    return _context7.abrupt(\"return\", _result.stmt.lastID);\n\n                                  case 10:\n                                    _context7.prev = 10;\n                                    _context7.t0 = _context7[\"catch\"](3);\n                                    throw new Error(\"This combination doesnt work\");\n\n                                  case 13:\n                                  case \"end\":\n                                    return _context7.stop();\n                                }\n                              }\n                            }, _callee7, null, [[3, 10]]);\n                          }));\n\n                          return function createNews(_x9) {\n                            return _ref9.apply(this, arguments);\n                          };\n                        }();\n\n                        deleteNews =\n                        /*#__PURE__*/\n                        function () {\n                          var _ref10 = _asyncToGenerator(\n                          /*#__PURE__*/\n                          regeneratorRuntime.mark(function _callee8(id) {\n                            var _result2;\n\n                            return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                              while (1) {\n                                switch (_context8.prev = _context8.next) {\n                                  case 0:\n                                    _context8.prev = 0;\n                                    _context8.next = 3;\n                                    return db.run(\"DELETE from News WHERE id = \".concat(id));\n\n                                  case 3:\n                                    _result2 = _context8.sent;\n\n                                    if (!(_result2.stmt.changes == 0)) {\n                                      _context8.next = 6;\n                                      break;\n                                    }\n\n                                    throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                                  case 6:\n                                    return _context8.abrupt(\"return\", true);\n\n                                  case 9:\n                                    _context8.prev = 9;\n                                    _context8.t0 = _context8[\"catch\"](0);\n                                    throw new Error(\"Could not delete product with id \".concat(id) + _context8.t0);\n\n                                  case 12:\n                                  case \"end\":\n                                    return _context8.stop();\n                                }\n                              }\n                            }, _callee8, null, [[0, 9]]);\n                          }));\n\n                          return function deleteNews(_x10) {\n                            return _ref10.apply(this, arguments);\n                          };\n                        }();\n\n                        updateNews =\n                        /*#__PURE__*/\n                        function () {\n                          var _ref11 = _asyncToGenerator(\n                          /*#__PURE__*/\n                          regeneratorRuntime.mark(function _callee9(id, props) {\n                            var name, description, date, stmt, _result3;\n\n                            return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                              while (1) {\n                                switch (_context9.prev = _context9.next) {\n                                  case 0:\n                                    name = props.name, description = props.description, date = props.date;\n\n                                    if (!(!props && !(props.description && props.date))) {\n                                      _context9.next = 3;\n                                      break;\n                                    }\n\n                                    throw new Error(\"You must provide a name or an description\");\n\n                                  case 3:\n                                    stmt = \"\";\n\n                                    if (description && date) {\n                                      stmt = \"UPDATE News set description= '\".concat(description, \"' , date =\").concat(date, \" where id = \").concat(id);\n                                      console.log(stmt);\n                                    } else if (description && !date) {\n                                      stmt = \"UPDATE News set description= '\".concat(description, \"'  where id = \").concat(id);\n                                    } else {\n                                      stmt = \"UPDATE News set date =\".concat(date, \" where id = \").concat(id);\n                                    }\n\n                                    _context9.prev = 5;\n                                    _context9.next = 8;\n                                    return db.run(stmt);\n\n                                  case 8:\n                                    _result3 = _context9.sent;\n                                    console.log(_result3);\n\n                                    if (!(_result3.stmt.changes == 0)) {\n                                      _context9.next = 12;\n                                      break;\n                                    }\n\n                                    throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                                  case 12:\n                                    return _context9.abrupt(\"return\", true);\n\n                                  case 15:\n                                    _context9.prev = 15;\n                                    _context9.t0 = _context9[\"catch\"](5);\n                                    throw new Error(\"Could not update Products with id \".concat(id) + _context9.t0);\n\n                                  case 18:\n                                  case \"end\":\n                                    return _context9.stop();\n                                }\n                              }\n                            }, _callee9, null, [[5, 15]]);\n                          }));\n\n                          return function updateNews(_x11, _x12) {\n                            return _ref11.apply(this, arguments);\n                          };\n                        }();\n\n                        controller = {\n                          getProducts: getProducts,\n                          createProducts: createProducts,\n                          deleteProducts: deleteProducts,\n                          updateProducts: updateProducts,\n                          getProductsByID: getProductsByID,\n                          getNews: getNews,\n                          createNews: createNews,\n                          deleteNews: deleteNews,\n                          updateNews: updateNews,\n                          getNewsByID: getNewsByID\n                        };\n                        return _context10.abrupt(\"return\", controller);\n\n                      case 24:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[5, 15]]);\n              }));\n\n              return function updateProducts(_x6, _x7) {\n                return _ref7.apply(this, arguments);\n              };\n            }();\n\n          case 9:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Products_db.js"
      ],
      "names": [
        "initializeDatabase",
        "sqlite",
        "open",
        "db",
        "getNews",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getProducts",
        "getProductsByID",
        "id",
        "createProducts",
        "props",
        "name",
        "description",
        "price",
        "run",
        "Categories_ID",
        "result",
        "lastID",
        "deleteProducts",
        "changes",
        "updateProducts",
        "console",
        "log",
        "getNewsByID",
        "createNews",
        "date",
        "deleteNews",
        "updateNews",
        "controller"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACNC,mBAAOC,IAAP,CAAY,2BAAZ,CADM;;AAAA;AACjBC,YAAAA,EADiB;;AAEjBC,YAAAA,OAFiB;AAAA;AAAA;AAAA;AAAA;AAAA,sCAEP,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,wBAAAA,IADW,GACJ,oBADI;AAAA;AAAA;AAAA,+BAIMH,EAAE,CAACI,GAAH,CAAOD,IAAP,CAJN;;AAAA;AAIPE,wBAAAA,IAJO;;AAAA,8BAKTA,IAAI,CAACC,MAAL,IAAe,CALN;AAAA;AAAA;AAAA;;AAAA,8BAML,IAAIC,KAAJ,CAAU,qBAAV,CANK;;AAAA;AAAA,yDAQNF,IARM;;AAAA;AAAA;AAAA;AAAA,8BAUP,IAAIE,KAAJ,CAAU,6BAAV,CAVO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFO;;AAAA,8BAEjBN,OAFiB;AAAA;AAAA;AAAA;;AAehBO,YAAAA,WAfgB;AAAA;AAAA;AAAA;AAAA;AAAA,sCAeF,kBAAMN,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,wBAAAA,IADY,GACL,kDADK;AAAA;AAAA;AAAA,+BAIKH,EAAE,CAACI,GAAH,CAAOD,IAAP,CAJL;;AAAA;AAIRE,wBAAAA,IAJQ;;AAAA,8BAKVA,IAAI,CAACC,MAAL,IAAe,CALL;AAAA;AAAA;AAAA;;AAAA,8BAMN,IAAIC,KAAJ,CAAU,qBAAV,CANM;;AAAA;AAAA,0DAQPF,IARO;;AAAA;AAAA;AAAA;AAAA,8BAUR,IAAIE,KAAJ,CAAU,qCAAV,CAVQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfE;;AAAA,8BAehBC,WAfgB;AAAA;AAAA;AAAA;;AA6BdC,YAAAA,eA7Bc;AAAA;AAAA;AAAA;AAAA;AAAA,sCA6BI,kBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEDV,EAAE,CAACI,GAAH,mEAC0CM,EAD1C,EAFC;;AAAA;AAEdL,wBAAAA,IAFc;;AAAA,8BAKhBA,IAAI,CAACC,MAAL,IAAe,CALC;AAAA;AAAA;AAAA;;AAAA,8BAMZ,IAAIC,KAAJ,2BAA6BG,EAA7B,mBANY;;AAAA;AAAA,0DAQbL,IARa;;AAAA;AAAA;AAAA;AAAA,8BAUd,IAAIE,KAAJ,CAAU,4BAAV,CAVc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA7BJ;;AAAA,8BA6BdE,eA7Bc;AAAA;AAAA;AAAA;;AA2CdE,YAAAA,cA3Cc;AAAA;AAAA;AAAA;AAAA;AAAA,sCA2CG,kBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,wBAAAA,IADa,GACcD,KADd,CACbC,IADa,EACRC,WADQ,GACcF,KADd,CACRE,WADQ,EACIC,KADJ,GACcH,KADd,CACIG,KADJ;;AAAA,8BAEjB,CAACH,KAAD,IAAU,CAACC,IAAX,IAAmB,CAACC,WAApB,IAAiC,CAACC,KAFjB;AAAA;AAAA;AAAA;;AAAA,8BAGb,IAAIR,KAAJ,qDAHa;;AAAA;AAAA;AAAA;AAAA,+BAMEP,EAAE,CAACgB,GAAH,iFACuDH,IADvD,iBACkEC,WADlE,eACkFC,KADlF,cAC2FE,aAD3F,OANF;;AAAA;AAMbC,wBAAAA,MANa;AAAA,0DASZA,MAAM,CAACf,IAAP,CAAYgB,MATA;;AAAA;AAAA;AAAA;AAAA,8BAWb,IAAIZ,KAAJ,CAAU,8BAAV,CAXa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA3CH;;AAAA,8BA2CdI,cA3Cc;AAAA;AAAA;AAAA;;AA0DdS,YAAAA,cA1Dc;AAAA;AAAA;AAAA;AAAA;AAAA,sCA0DG,kBAAMV,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEEV,EAAE,CAACgB,GAAH,2CACgBN,EADhB,EAFF;;AAAA;AAEbQ,wBAAAA,MAFa;;AAAA,8BAKfA,MAAM,CAACf,IAAP,CAAYkB,OAAZ,IAAuB,CALR;AAAA;AAAA;AAAA;;AAAA,8BAMX,IAAId,KAAJ,2BAA6BG,EAA7B,mBANW;;AAAA;AAAA,0DAQZ,IARY;;AAAA;AAAA;AAAA;AAAA,8BAUb,IAAIH,KAAJ,CAAU,2CAAoCG,EAApC,gBAAV,CAVa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA1DH;;AAAA,8BA0DdU,cA1Dc;AAAA;AAAA;AAAA;;AAwEdE,YAAAA,cAxEc;AAAA;AAAA;AAAA;AAAA;AAAA,sCAwEG,mBAAOZ,EAAP,EAAWE,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,wBAAAA,IADa,GAC6BD,KAD7B,CACbC,IADa,EACRC,WADQ,GAC6BF,KAD7B,CACRE,WADQ,EACIC,KADJ,GAC6BH,KAD7B,CACIG,KADJ,EACUE,aADV,GAC6BL,KAD7B,CACUK,aADV;;AAAA,8BAEjB,CAACL,KAAD,IAAU,EAAEA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACE,WAApB,IAAmCF,KAAK,CAACG,KAAzC,IAAkDH,KAAK,CAACK,aAA1D,CAFO;AAAA;AAAA;AAAA;;AAAA,8BAGb,IAAIV,KAAJ,6CAHa;;AAAA;AAMjBJ,wBAAAA,IANiB,GAMV,EANU;;AAOrB,4BAAIU,IAAI,IAAIC,WAAR,IAAuBC,KAA3B,EAAkC;AAChCZ,0BAAAA,IAAI,yCAAkCU,IAAlC,+BAA2DC,WAA3D,yBAAqFC,KAArF,0BAA0GL,EAA1G,MAAJ;AACAa,0BAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AACD,yBAHD,MAGO,IAAIU,IAAI,IAAI,CAACC,WAAb,EAA0B;AAC/BX,0BAAAA,IAAI,yCAAkCU,IAAlC,0BAAsDH,EAAtD,MAAJ;AACD,yBAFM,MAEA;AACLP,0BAAAA,IAAI,iDAA0CW,WAA1C,0BAAqEJ,EAArE,MAAJ;AACD;;AAdoB;AAAA;AAAA,+BAgBEV,EAAE,CAACgB,GAAH,CAAOb,IAAP,CAhBF;;AAAA;AAgBbe,wBAAAA,MAhBa;AAiBnBK,wBAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;;AAjBmB,8BAkBfA,MAAM,CAACf,IAAP,CAAYkB,OAAZ,IAAuB,CAlBR;AAAA;AAAA;AAAA;;AAAA,8BAmBX,IAAId,KAAJ,2BAA6BG,EAA7B,mBAnBW;;AAAA;AAAA,2DAqBZ,IArBY;;AAAA;AAAA;AAAA;AAAA,8BAuBb,IAAIH,KAAJ,CAAU,4CAAqCG,EAArC,iBAAV,CAvBa;;AAAA;AA0Bfe,wBAAAA,WA1Be;AAAA;AAAA;AAAA;AAAA;AAAA,kDA0BD,kBAAMf,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEKV,EAAE,CAACI,GAAH,yCACgBM,EADhB,EAFL;;AAAA;AAERL,oCAAAA,IAFQ;;AAAA,0CAKVA,IAAI,CAACC,MAAL,IAAe,CALL;AAAA;AAAA;AAAA;;AAAA,0CAMN,IAAIC,KAAJ,wBAA0BG,EAA1B,mBANM;;AAAA;AAAA,sEAQPL,IARO;;AAAA;AAAA;AAAA;AAAA,0CAUR,IAAIE,KAAJ,CAAU,4BAAV,CAVQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA1BC;;AAAA,0CA0BfkB,WA1Be;AAAA;AAAA;AAAA;;AAwCbC,wBAAAA,UAxCa;AAAA;AAAA;AAAA;AAAA;AAAA,kDAwCA,kBAAMd,KAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTE,oCAAAA,WADS,GACWF,KADX,CACTE,WADS,EACGa,IADH,GACWf,KADX,CACGe,IADH;;AAAA,0CAEb,CAACf,KAAD,IAAW,CAACE,WAAZ,IAAyB,CAACa,IAFb;AAAA;AAAA;AAAA;;AAAA,0CAGT,IAAIpB,KAAJ,4CAHS;;AAAA;AAAA;AAAA;AAAA,2CAMMP,EAAE,CAACgB,GAAH,wDAC+BF,WAD/B,eAC+Ca,IAD/C,OANN;;AAAA;AAMTT,oCAAAA,OANS;AAAA,sEASRA,OAAM,CAACf,IAAP,CAAYgB,MATJ;;AAAA;AAAA;AAAA;AAAA,0CAWT,IAAIZ,KAAJ,CAAU,8BAAV,CAXS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAxCA;;AAAA,0CAwCbmB,UAxCa;AAAA;AAAA;AAAA;;AAuDbE,wBAAAA,UAvDa;AAAA;AAAA;AAAA;AAAA;AAAA,kDAuDA,kBAAMlB,EAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEMV,EAAE,CAACgB,GAAH,uCACYN,EADZ,EAFN;;AAAA;AAETQ,oCAAAA,QAFS;;AAAA,0CAKXA,QAAM,CAACf,IAAP,CAAYkB,OAAZ,IAAuB,CALZ;AAAA;AAAA;AAAA;;AAAA,0CAMP,IAAId,KAAJ,2BAA6BG,EAA7B,mBANO;;AAAA;AAAA,sEAQR,IARQ;;AAAA;AAAA;AAAA;AAAA,0CAUT,IAAIH,KAAJ,CAAU,2CAAoCG,EAApC,gBAAV,CAVS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAvDA;;AAAA,0CAuDbkB,UAvDa;AAAA;AAAA;AAAA;;AAqEbC,wBAAAA,UArEa;AAAA;AAAA;AAAA;AAAA;AAAA,kDAqEA,kBAAOnB,EAAP,EAAWE,KAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTC,oCAAAA,IADS,GACiBD,KADjB,CACTC,IADS,EACJC,WADI,GACiBF,KADjB,CACJE,WADI,EACQa,IADR,GACiBf,KADjB,CACQe,IADR;;AAAA,0CAEb,CAACf,KAAD,IAAU,EAAEA,KAAK,CAACE,WAAN,IAAqBF,KAAK,CAACe,IAA7B,CAFG;AAAA;AAAA;AAAA;;AAAA,0CAGT,IAAIpB,KAAJ,6CAHS;;AAAA;AAMbJ,oCAAAA,IANa,GAMN,EANM;;AAOjB,wCAAKW,WAAW,IAAIa,IAApB,EAA0B;AACxBxB,sCAAAA,IAAI,2CAAoCW,WAApC,uBAA4Da,IAA5D,yBAA+EjB,EAA/E,CAAJ;AACAa,sCAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AACD,qCAHD,MAGO,IAAIW,WAAW,IAAI,CAACa,IAApB,EAA0B;AAC/BxB,sCAAAA,IAAI,2CAAmCW,WAAnC,2BAA+DJ,EAA/D,CAAJ;AACD,qCAFM,MAEA;AACLP,sCAAAA,IAAI,mCAA4BwB,IAA5B,yBAA+CjB,EAA/C,CAAJ;AACD;;AAdgB;AAAA;AAAA,2CAgBMV,EAAE,CAACgB,GAAH,CAAOb,IAAP,CAhBN;;AAAA;AAgBTe,oCAAAA,QAhBS;AAiBfK,oCAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AAjBe,0CAkBXA,QAAM,CAACf,IAAP,CAAYkB,OAAZ,IAAuB,CAlBZ;AAAA;AAAA;AAAA;;AAAA,0CAmBP,IAAId,KAAJ,2BAA6BG,EAA7B,mBAnBO;;AAAA;AAAA,sEAqBR,IArBQ;;AAAA;AAAA;AAAA;AAAA,0CAuBT,IAAIH,KAAJ,CAAU,4CAAqCG,EAArC,gBAAV,CAvBS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BArEA;;AAAA,0CAqEbmB,UArEa;AAAA;AAAA;AAAA;;AAgGjBC,wBAAAA,UAhGiB,GAgGJ;AACjBtB,0BAAAA,WAAW,EAAXA,WADiB;AAEjBG,0BAAAA,cAAc,EAAdA,cAFiB;AAGjBS,0BAAAA,cAAc,EAAdA,cAHiB;AAIjBE,0BAAAA,cAAc,EAAdA,cAJiB;AAKjBb,0BAAAA,eAAe,EAAfA,eALiB;AAMjBR,0BAAAA,OAAO,EAAPA,OANiB;AAOjByB,0BAAAA,UAAU,EAAVA,UAPiB;AAQjBE,0BAAAA,UAAU,EAAVA,UARiB;AASjBC,0BAAAA,UAAU,EAAVA,UATiB;AAUjBJ,0BAAAA,WAAW,EAAXA;AAViB,yBAhGI;AAAA,2DA6GhBK,UA7GgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAxEH;;AAAA,8BAwEdR,cAxEc;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF;;AAAA,kBAAlBzB,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;eAyLgBA,kB",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst initializeDatabase= async()=>{\n   const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n   const getNews = async orderBy => {\n    let stmt = \"select * from News\";\n \n    try {\n      const rows = await db.all(stmt);\n      if (rows.length == 0) {\n        throw new Error(\"Products are empty!\");\n      }\n      return rows;\n    } catch (err) {\n      throw new Error(\"Could not retrieve list of \");\n    }\n  };\n    const getProducts = async orderBy => {\n        let stmt = \"SELECT  id, name,description,price FROM Products\";\n     \n        try { \n          const rows = await db.all(stmt);\n          if (rows.length == 0) {\n            throw new Error(\"Products are empty!\");\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve list of products\");\n        }\n      };\n    \n      const getProductsByID = async id => {\n        try {\n          const rows = await db.all(\n            `SELECT id,name,description,price FROM Products where id=${id}`\n          );\n          if (rows.length == 0) {\n            throw new Error(`product with id ${id} is not found`);\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve product\");\n        }\n      };\n     \n      const createProducts = async props => {\n        const { name,description,price } = props;\n        if (!props || !name || !description||!price) {\n          throw new Error(`You must provide a name and description and price`);\n        }\n        try {\n          const result = await db.run(\n             `Insert into Products (name,description,price,Categories_ID ) values ('${name}', '${description}',${price},${Categories_ID})`\n          );\n          return result.stmt.lastID;\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\");\n        }\n      };\n    \n      const deleteProducts = async id => {\n        try {\n          const result = await db.run(\n            `Delete from Products where id = ${id}`\n          );\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not delete product with id ${id}` + err);\n        }\n      };\n    \n      const updateProducts = async (id, props) => {\n        const { name,description,price,Categories_ID  } = props;\n        if (!props && !(props.name && props.description && props.price && props.Categories_ID)) {\n          throw new Error(`You must provide a name or an description`);\n        }\n    \n        let stmt = \"\";\n        if (name && description && price) {\n          stmt = `update Products set name = '${name}', description = '${description}' ,price = '${price}' where id = ${id} `;\n          console.log(stmt);\n        } else if (name && !description) {\n          stmt = `update Products set name = '${name}' where id = ${id} `;\n        } else {\n          stmt = `update Products set  description = '${description}' where id = ${id} `;\n        }\n        try {\n          const result = await db.run(stmt);\n          console.log(result);\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not update Products with id ${id}` + err);\n        }\n\n        const getNewsByID = async id => {\n            try {\n              const rows = await db.all(\n                `select * from News where Id = ${id}`\n              );\n              if (rows.length == 0) {\n                throw new Error(`News with id ${id} is not found`);\n              }\n              return rows;\n            } catch (err) {\n              throw new Error(\"Could not retrieve product\");\n            }\n          };\n         \n          const createNews = async props => {\n            const { description,date} = props;\n            if (!props  || !description||!date) {\n              throw new Error(`You must provide a  description and date`);\n            }\n            try {\n              const result = await db.run(\n                  `Insert INTO News (description,date) VALUES ('${description}',${date})`\n              );\n              return result.stmt.lastID;\n            } catch (err) {\n              throw new Error(\"This combination doesnt work\");\n            }\n          };\n        \n          const deleteNews = async id => {\n            try {\n              const result = await db.run(\n                `DELETE from News WHERE id = ${id}`\n              );\n              if (result.stmt.changes == 0) {\n                throw new Error(`Product with id ${id} doesnt exist`);\n              }\n              return true;\n            } catch (err) {\n              throw new Error(`Could not delete product with id ${id}` + err);\n            }\n          };\n        \n          const updateNews = async (id, props) => {\n            const { name,description,date } = props;\n            if (!props && !(props.description && props.date)) {\n              throw new Error(`You must provide a name or an description`);\n            }\n        \n            let stmt = \"\";\n            if ( description && date) {\n              stmt = `UPDATE News set description= '${description}' , date =${date} where id = ${id}`;\n              console.log(stmt);\n            } else if (description && !date) {\n              stmt =`UPDATE News set description= '${description}'  where id = ${id}`;\n            } else {\n              stmt = `UPDATE News set date =${date} where id = ${id}`;\n            }\n            try {\n              const result = await db.run(stmt);\n              console.log(result);\n              if (result.stmt.changes == 0) {\n                throw new Error(`Product with id ${id} doesnt exist`);\n              }\n              return true;\n            } catch (err) {\n              throw new Error(`Could not update Products with id ${id}` + err);\n            }\n      };\n    \n      const controller = {\n        getProducts,\n        createProducts,\n        deleteProducts,\n        updateProducts,\n        getProductsByID,\n        getNews,\n        createNews,\n        deleteNews,\n        updateNews,\n        getNewsByID\n      };\n    \n      return controller;\n    }\n    };\n    \nexport default  initializeDatabase ;\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581251275487
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/News_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/News_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/News_db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/News_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "News_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar NewsDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getNews, getNewsByID, createNews, deleteNews, updateNews, controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context6.sent;\n\n            getNews =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"select * from News\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"News are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of News \");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getNews(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getNewsByID =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return db.all(\"select * from News where Id = \".concat(id));\n\n                      case 3:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"News with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context2.prev = 9;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"Could not retrieve product\");\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 9]]);\n              }));\n\n              return function getNewsByID(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createNews =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var description, date, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        description = props.description, date = props.date;\n\n                        if (!(!props || !description || !date)) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a  description and date\");\n\n                      case 3:\n                        _context3.prev = 3;\n                        _context3.next = 6;\n                        return db.run(\"Insert INTO News (description,date) VALUES ('\".concat(description, \"',\").concat(date, \")\"));\n\n                      case 6:\n                        result = _context3.sent;\n                        return _context3.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[3, 10]]);\n              }));\n\n              return function createNews(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteNews =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"DELETE from News WHERE id = \".concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"Could not delete product with id \".concat(id) + _context4.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 9]]);\n              }));\n\n              return function deleteNews(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateNews =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var name, description, date, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        name = props.name, description = props.description, date = props.date;\n\n                        if (!(!props && !(props.description && props.date))) {\n                          _context5.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name or an description\");\n\n                      case 3:\n                        stmt = \"\";\n\n                        if (description && date) {\n                          stmt = \"UPDATE News set description= '\".concat(description, \"' , date =\").concat(date, \" where id = \").concat(id);\n                          console.log(stmt);\n                        } else if (description && !date) {\n                          stmt = \"UPDATE News set description= '\".concat(description, \"'  where id = \").concat(id);\n                        } else {\n                          stmt = \"UPDATE News set date =\".concat(date, \" where id = \").concat(id);\n                        }\n\n                        _context5.prev = 5;\n                        _context5.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context5.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 15:\n                        _context5.prev = 15;\n                        _context5.t0 = _context5[\"catch\"](5);\n                        throw new Error(\"Could not update Products with id \".concat(id) + _context5.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[5, 15]]);\n              }));\n\n              return function updateNews(_x5, _x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getNews: getNews,\n              createNews: createNews,\n              deleteNews: deleteNews,\n              updateNews: updateNews,\n              getNewsByID: getNewsByID\n            };\n            return _context6.abrupt(\"return\", controller);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function NewsDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = NewsDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "News_db.js"
      ],
      "names": [
        "NewsDatabase",
        "sqlite",
        "open",
        "db",
        "getNews",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getNewsByID",
        "id",
        "createNews",
        "props",
        "description",
        "date",
        "run",
        "result",
        "lastID",
        "deleteNews",
        "changes",
        "updateNews",
        "name",
        "console",
        "log",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst NewsDatabase = async()=>{\n   const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n    \n    const getNews = async orderBy => {\n        let stmt = \"select * from News\";\n     \n        try {\n          const rows = await db.all(stmt);\n          if (rows.length == 0) {\n            throw new Error(\"News are empty!\");\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve list of News \");\n        }\n      };\n    \n      const getNewsByID = async id => {\n        try {\n          const rows = await db.all(\n            `select * from News where Id = ${id}`\n          );\n          if (rows.length == 0) {\n            throw new Error(`News with id ${id} is not found`);\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve product\");\n        }\n      };\n     \n      const createNews = async props => {\n        const { description,date} = props;\n        if (!props  || !description||!date) {\n          throw new Error(`You must provide a  description and date`);\n        }\n        try {\n          const result = await db.run(\n              `Insert INTO News (description,date) VALUES ('${description}',${date})`\n          );\n          return result.stmt.lastID;\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\");\n        }\n      };\n    \n      const deleteNews = async id => {\n        try {\n          const result = await db.run(\n            `DELETE from News WHERE id = ${id}`\n          );\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not delete product with id ${id}` + err);\n        }\n      };\n    \n      const updateNews = async (id, props) => {\n        const { name,description,date } = props;\n        if (!props && !(props.description && props.date)) {\n          throw new Error(`You must provide a name or an description`);\n        }\n    \n        let stmt = \"\";\n        if ( description && date) {\n          stmt = `UPDATE News set description= '${description}' , date =${date} where id = ${id}`;\n          console.log(stmt);\n        } else if (description && !date) {\n          stmt =`UPDATE News set description= '${description}'  where id = ${id}`;\n        } else {\n          stmt = `UPDATE News set date =${date} where id = ${id}`;\n        }\n        try {\n          const result = await db.run(stmt);\n          console.log(result);\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not update Products with id ${id}` + err);\n        }\n      };\n    \n      const controller = {\n        getNews,\n        createNews,\n        deleteNews,\n        updateNews,\n        getNewsByID\n      };\n    \n      return controller;\n    };\n    \nexport default  NewsDatabase ;\n\n    \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581343484417
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/Product_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/Product_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/Product_db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/Product_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "Product_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getProducts, getProductsByID, createProducts, deleteProducts, updateProducts, controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context6.sent;\n\n            getProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"SELECT  id, name,description,price FROM Products\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Products are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of products\");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getProducts(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getProductsByID =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return db.all(\" SELECT id,name,description,price FROM Products where id=\".concat(id));\n\n                      case 3:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"product with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context2.prev = 9;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"Could not retrieve product\");\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 9]]);\n              }));\n\n              return function getProductsByID(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var name, description, price, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price;\n\n                        if (!(!props || !name || !description || !price)) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name and description and price\");\n\n                      case 3:\n                        _context3.prev = 3;\n                        _context3.next = 6;\n                        return db.run(\"Insert into Products (name,description,price,Categories_ID ) values ('\".concat(name, \"', '\").concat(description, \"',\").concat(price, \",\").concat(Categories_ID, \")\"));\n\n                      case 6:\n                        result = _context3.sent;\n                        return _context3.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[3, 10]]);\n              }));\n\n              return function createProducts(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"Delete from Products where id = \".concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"Could not delete product with id \".concat(id) + _context4.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 9]]);\n              }));\n\n              return function deleteProducts(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var name, description, price, Categories_ID, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price, Categories_ID = props.Categories_ID;\n\n                        if (!(!props && !(props.name && props.description && props.price && props.Categories_ID))) {\n                          _context5.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name or an description\");\n\n                      case 3:\n                        stmt = \"\";\n\n                        if (name && description && price) {\n                          stmt = \"update Products set name = '\".concat(name, \"', description = '\").concat(description, \"' ,price = '\").concat(price, \"' where id = \").concat(id, \" \");\n                          console.log(stmt);\n                        } else if (name && !description) {\n                          stmt = \"update Products set name = '\".concat(name, \"' where id = \").concat(id, \" \");\n                        } else {\n                          stmt = \"update Products set  description = '\".concat(description, \"' where id = \").concat(id, \" \");\n                        }\n\n                        _context5.prev = 5;\n                        _context5.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context5.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 15:\n                        _context5.prev = 15;\n                        _context5.t0 = _context5[\"catch\"](5);\n                        throw new Error(\"Could not update Products with id \".concat(id) + _context5.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[5, 15]]);\n              }));\n\n              return function updateProducts(_x5, _x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getProducts: getProducts,\n              createProducts: createProducts,\n              deleteProducts: deleteProducts,\n              updateProducts: updateProducts,\n              getProductsByID: getProductsByID\n            };\n            return _context6.abrupt(\"return\", controller);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Product_db.js"
      ],
      "names": [
        "initializeDatabase",
        "sqlite",
        "open",
        "db",
        "getProducts",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getProductsByID",
        "id",
        "createProducts",
        "props",
        "name",
        "description",
        "price",
        "run",
        "Categories_ID",
        "result",
        "lastID",
        "deleteProducts",
        "changes",
        "updateProducts",
        "console",
        "log",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst initializeDatabase= async()=>{\n   const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n\n    const getProducts = async orderBy => {\n        let stmt = \"SELECT  id, name,description,price FROM Products\";\n     \n        try { \n          const rows = await db.all(stmt);\n          if (rows.length == 0) {\n            throw new Error(\"Products are empty!\");\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve list of products\");\n        }\n      };\n    \n      const getProductsByID = async id => {\n        try {\n          const rows = await db.all(` SELECT id,name,description,price FROM Products where id=${id}`\n          );\n          if (rows.length == 0) {\n            throw new Error(`product with id ${id} is not found`);\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve product\");\n        }\n      };\n     \n      const createProducts = async props => {\n        const { name,description,price } = props;\n        if (!props || !name || !description||!price) {\n          throw new Error(`You must provide a name and description and price`);\n        }\n        try {\n          const result = await db.run(\n             `Insert into Products (name,description,price,Categories_ID ) values ('${name}', '${description}',${price},${Categories_ID})`\n          );\n          return result.stmt.lastID;\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\");\n        }\n      };\n    \n      const deleteProducts = async id => {\n        try {\n          const result = await db.run(\n            `Delete from Products where id = ${id}`\n          );\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not delete product with id ${id}` + err);\n        }\n      };\n    \n      const updateProducts = async (id, props) => {\n        const { name,description,price,Categories_ID  } = props;\n        if (!props && !(props.name && props.description && props.price && props.Categories_ID)) {\n          throw new Error(`You must provide a name or an description`);\n        }\n    \n        let stmt = \"\";\n        if (name && description && price) {\n          stmt = `update Products set name = '${name}', description = '${description}' ,price = '${price}' where id = ${id} `;\n          console.log(stmt);\n        } else if (name && !description) {\n          stmt = `update Products set name = '${name}' where id = ${id} `;\n        } else {\n          stmt = `update Products set  description = '${description}' where id = ${id} `;\n        }\n        try {\n          const result = await db.run(stmt);\n          console.log(result);\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not update Products with id ${id}` + err);\n        }\n        \n      };\n\n\n    \n      const controller = {\n        getProducts,\n       \n        createProducts,\n        deleteProducts,\n        updateProducts,\n        getProductsByID\n      \n      };\n    \n      return controller;\n    };\n    \nexport default  initializeDatabase ;\n\n    \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581252717517
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/Categories_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/Categories_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/Categories_db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/Categories_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "Categories_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar CategoriesDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getCategories, getgetCategoriesByID, createCategories, deleteCategories, updateCategories, controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context6.sent;\n\n            getCategories =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"select * from Categories\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Categories are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of Categories \");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getCategories(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getgetCategoriesByID =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return db.all(\"select * from Categories where Id = \".concat(id));\n\n                      case 3:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Categories with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context2.prev = 9;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"Could not retrieve Categories\");\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 9]]);\n              }));\n\n              return function getgetCategoriesByID(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createCategories =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var name, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        name = props.name;\n\n                        if (name) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a  name \");\n\n                      case 3:\n                        _context3.prev = 3;\n                        _context3.next = 6;\n                        return db.run(\"insert INTO Categories (name) VALUES ('\".concat(name, \"')\"));\n\n                      case 6:\n                        result = _context3.sent;\n                        return _context3.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[3, 10]]);\n              }));\n\n              return function createCategories(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteCategories =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"DELETE from Categories WHERE id = \".concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Categories with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"Could not delete Categories with id \".concat(id) + _context4.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 9]]);\n              }));\n\n              return function deleteCategories(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateCategories =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var name, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        name = props.name;\n\n                        if (!(!props && !(props.description && props.date))) {\n                          _context5.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name\");\n\n                      case 3:\n                        stmt = \"UPDATE Categories  set name= '\".concat(name, \"'  where id = \").concat(id);\n                        console.log(stmt);\n                        _context5.prev = 5;\n                        _context5.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context5.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Categories with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 15:\n                        _context5.prev = 15;\n                        _context5.t0 = _context5[\"catch\"](5);\n                        throw new Error(\"Could not update Categories with id \".concat(id) + _context5.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[5, 15]]);\n              }));\n\n              return function updateCategories(_x5, _x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getCategories: getCategories,\n              getgetCategoriesByID: getgetCategoriesByID,\n              createCategories: createCategories,\n              deleteCategories: deleteCategories,\n              updateCategories: updateCategories\n            };\n            return _context6.abrupt(\"return\", controller);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function CategoriesDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = CategoriesDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Categories_db.js"
      ],
      "names": [
        "CategoriesDatabase",
        "sqlite",
        "open",
        "db",
        "getCategories",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getgetCategoriesByID",
        "id",
        "createCategories",
        "props",
        "name",
        "run",
        "result",
        "lastID",
        "deleteCategories",
        "changes",
        "updateCategories",
        "description",
        "date",
        "console",
        "log",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst CategoriesDatabase = async()=>{\n   const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n    \n    const getCategories = async orderBy => {\n        let stmt = \"select * from Categories\";\n     \n        try {\n          const rows = await db.all(stmt);\n          if (rows.length == 0) {\n            throw new Error(\"Categories are empty!\");\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve list of Categories \");\n        }\n      };\n    \n      const getgetCategoriesByID = async id => {\n        try {\n          const rows = await db.all(\n            `select * from Categories where Id = ${id}`\n          );\n          if (rows.length == 0) {\n            throw new Error(`Categories with id ${id} is not found`);\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve Categories\");\n        }\n      };\n     \n      const createCategories  = async props => {\n        const { name} = props;\n        if (!name) {\n          throw new Error(`You must provide a  name `);\n        }\n        try {\n          const result = await db.run(\n              `insert INTO Categories (name) VALUES ('${name}')`\n          );\n          return result.stmt.lastID;\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\");\n        }\n      };\n    \n      const deleteCategories= async id => {\n        try {\n          const result = await db.run(\n            `DELETE from Categories WHERE id = ${id}`\n          );\n          if (result.stmt.changes == 0) {\n            throw new Error(`Categories with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not delete Categories with id ${id}` + err);\n        }\n      };\n    \n      const updateCategories = async (id, props) => {\n        const { name } = props;\n        if (!props && !(props.description && props.date)) {\n          throw new Error(`You must provide a name`);\n        }\n    \n     \n         let stmt = `UPDATE Categories  set name= '${name}'  where id = ${id}`;\n          console.log(stmt);\n       \n        try {\n          const result = await db.run(stmt);\n          console.log(result);\n          if (result.stmt.changes == 0) {\n            throw new Error(`Categories with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not update Categories with id ${id}` + err);\n        }\n      };\n    \n      const controller = {\n        getCategories,\n        getgetCategoriesByID,\n        createCategories ,\n        deleteCategories,\n        updateCategories \n      };\n    \n      return controller;\n    };\n    \nexport default  CategoriesDatabase ;\n\n    \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581344172650
  }
}