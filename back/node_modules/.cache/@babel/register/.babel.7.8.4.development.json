{
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _Products_db = _interopRequireDefault(require(\"./Products_db\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\n\nvar start =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return (0, _Products_db[\"default\"])();\n\n          case 2:\n            controller = _context6.sent;\n            app.get('/', function (req, res) {\n              res.json({\n                message: \"Hello\"\n              });\n            });\n            app.get('/Products/',\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(req, res) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return controller.getProducts(req.query);\n\n                      case 2:\n                        result = _context.sent;\n                        res.send(result);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x, _x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context2.next = 3;\n                        return controller.getProductsByID(id);\n\n                      case 3:\n                        result = _context2.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x3, _x4) {\n                return _ref3.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/create/name=:name?&description=:description?&price=:price?',\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(req, res) {\n                var _req$params, name, description, price, result;\n\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _req$params = req.params, name = _req$params.name, description = _req$params.description, price = _req$params.price;\n                        _context3.next = 3;\n                        return controller.createProducts({\n                          name: name,\n                          description: description,\n                          price: price\n                        });\n\n                      case 3:\n                        result = _context3.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x5, _x6) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/delete/:id',\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(req, res) {\n                var id, result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        id = req.params.id;\n                        _context4.next = 3;\n                        return controller.deleteProducts(id);\n\n                      case 3:\n                        result = _context4.sent;\n                        res.json(result);\n\n                      case 5:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x7, _x8) {\n                return _ref5.apply(this, arguments);\n              };\n            }());\n            app.get('/Products/update/:id/name=:name?&description=:description?&price=:price?',\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(req, res) {\n                var id, _req$params2, name, description, price, result;\n\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        id = req.params.id;\n                        _req$params2 = req.params, name = _req$params2.name, description = _req$params2.description, price = _req$params2.price;\n                        _context5.next = 4;\n                        return controller.updateProducts(id, {\n                          name: name,\n                          description: description,\n                          price: price\n                        });\n\n                      case 4:\n                        result = _context5.sent;\n                        res.json(result);\n\n                      case 6:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x9, _x10) {\n                return _ref6.apply(this, arguments);\n              };\n            }());\n            app.listen(8080, function () {\n              console.log(\"Listening on port 8080\");\n            });\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function start() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nstart();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInN0YXJ0IiwiY29udHJvbGxlciIsImdldCIsInJlcSIsInJlcyIsImpzb24iLCJtZXNzYWdlIiwiZ2V0UHJvZHVjdHMiLCJxdWVyeSIsInJlc3VsdCIsInNlbmQiLCJpZCIsInBhcmFtcyIsImdldFByb2R1Y3RzQnlJRCIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsInByaWNlIiwiY3JlYXRlUHJvZHVjdHMiLCJkZWxldGVQcm9kdWN0cyIsInVwZGF0ZVByb2R1Y3RzIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7O0FBR0EsSUFBTUMsS0FBSztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFFYSw4QkFGYjs7QUFBQTtBQUVOQyxZQUFBQSxVQUZNO0FBR1pGLFlBQUFBLEdBQUcsQ0FBQ0csR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBWTtBQUV2QkEsY0FBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVM7QUFBQ0MsZ0JBQUFBLE9BQU8sRUFBQztBQUFULGVBQVQ7QUFDRCxhQUhEO0FBS0FQLFlBQUFBLEdBQUcsQ0FBQ0csR0FBSixDQUFRLFlBQVI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHNDQUFzQixpQkFBTUMsR0FBTixFQUFXQyxHQUFYO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQ0NILFVBQVUsQ0FBQ00sV0FBWCxDQUF1QkosR0FBRyxDQUFDSyxLQUEzQixDQUREOztBQUFBO0FBQ2RDLHdCQUFBQSxNQURjO0FBRXBCTCx3QkFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVNELE1BQVQ7O0FBRm9CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGVBQXRCOztBQUFB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O0FBQUE7QUFRQVYsWUFBQUEsR0FBRyxDQUFDcUIsTUFBSixDQUFXLElBQVgsRUFBaUIsWUFBSTtBQUFDQyxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx3QkFBWjtBQUFzQyxhQUE1RDs7QUF2Q1k7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBTHRCLEtBQUs7QUFBQTtBQUFBO0FBQUEsR0FBWDs7QUE0Q0FBLEtBQUsiLCJzb3VyY2VSb290IjoiL2hvbWUvYWtyYW0vQ3JlYW15Q3JlYXRpb25zL2JhY2svc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgaW5pdGlhbGl6ZURhdGFiYXNlIGZyb20gJy4vUHJvZHVjdHNfZGInO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cblxuY29uc3Qgc3RhcnQgPSBhc3luYygpPT57XG5cbiAgY29uc3QgY29udHJvbGxlciA9IGF3YWl0IGluaXRpYWxpemVEYXRhYmFzZSgpO1xuICBhcHAuZ2V0KCcvJywgKHJlcSwgcmVzKT0+e1xuXG4gICAgcmVzLmpzb24oe21lc3NhZ2U6XCJIZWxsb1wifSk7XG4gIH0pO1xuICBcbiAgYXBwLmdldCgnL1Byb2R1Y3RzLycsIGFzeW5jKHJlcSwgcmVzKT0+e1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNvbnRyb2xsZXIuZ2V0UHJvZHVjdHMocmVxLnF1ZXJ5KTtcbiAgICByZXMuc2VuZChyZXN1bHQpO1xuICB9KTtcbiAgYXBwLmdldCgnL1Byb2R1Y3RzLzppZCcsIGFzeW5jKHJlcSwgcmVzKT0+e1xuICAgIGNvbnN0IHtpZH0gPSByZXEucGFyYW1zO1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNvbnRyb2xsZXIuZ2V0UHJvZHVjdHNCeUlEKGlkKTtcbiAgICByZXMuanNvbihyZXN1bHQpO1xuICB9KTtcblxuICBhcHAuZ2V0KCcvUHJvZHVjdHMvY3JlYXRlL25hbWU9Om5hbWU/JmRlc2NyaXB0aW9uPTpkZXNjcmlwdGlvbj8mcHJpY2U9OnByaWNlPycsIGFzeW5jKHJlcSwgcmVzKT0+e1xuICAgIGNvbnN0e25hbWUsZGVzY3JpcHRpb24scHJpY2UgfSA9IHJlcS5wYXJhbXM7XG4gIFxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNvbnRyb2xsZXIuY3JlYXRlUHJvZHVjdHMoe25hbWUsZGVzY3JpcHRpb24scHJpY2UgfSk7XG4gICAgcmVzLmpzb24ocmVzdWx0KTtcbiAgfSk7XG4gIGFwcC5nZXQoJy9Qcm9kdWN0cy9kZWxldGUvOmlkJywgYXN5bmMocmVxLCByZXMpPT57XG4gICBcbiAgICBjb25zdCB7aWR9PSByZXEucGFyYW1zO1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNvbnRyb2xsZXIuZGVsZXRlUHJvZHVjdHMoaWQpO1xuICAgIHJlcy5qc29uKHJlc3VsdCk7XG4gIH0pO1xuXG4gIGFwcC5nZXQoJy9Qcm9kdWN0cy91cGRhdGUvOmlkL25hbWU9Om5hbWU/JmRlc2NyaXB0aW9uPTpkZXNjcmlwdGlvbj8mcHJpY2U9OnByaWNlPycsIGFzeW5jKHJlcSwgcmVzKT0+e1xuICAgXG4gICAgY29uc3Qge2lkfT0gcmVxLnBhcmFtcztcbiAgICBjb25zdCB7bmFtZSxkZXNjcmlwdGlvbixwcmljZSB9ID0gcmVxLnBhcmFtcztcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjb250cm9sbGVyLnVwZGF0ZVByb2R1Y3RzKGlkLCB7bmFtZSxkZXNjcmlwdGlvbixwcmljZX0pO1xuICAgIHJlcy5qc29uKHJlc3VsdCk7XG4gIH0pO1xuICBcbiAgYXBwLmxpc3Rlbig4MDgwLCAoKT0+e2NvbnNvbGUubG9nKFwiTGlzdGVuaW5nIG9uIHBvcnQgODA4MFwiKX0pO1xuICBcbiAgXG5cbn1cbnN0YXJ0KClcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "start",
        "controller",
        "get",
        "req",
        "res",
        "json",
        "message",
        "getProducts",
        "query",
        "result",
        "send",
        "id",
        "params",
        "getProductsByID",
        "name",
        "description",
        "price",
        "createProducts",
        "deleteProducts",
        "updateProducts",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import express from 'express';\nimport initializeDatabase from './Products_db';\n\nconst app = express();\n\n\nconst start = async()=>{\n\n  const controller = await initializeDatabase();\n  app.get('/', (req, res)=>{\n\n    res.json({message:\"Hello\"});\n  });\n  \n  app.get('/Products/', async(req, res)=>{\n    const result = await controller.getProducts(req.query);\n    res.send(result);\n  });\n  app.get('/Products/:id', async(req, res)=>{\n    const {id} = req.params;\n    const result = await controller.getProductsByID(id);\n    res.json(result);\n  });\n\n  app.get('/Products/create/name=:name?&description=:description?&price=:price?', async(req, res)=>{\n    const{name,description,price } = req.params;\n  \n    const result = await controller.createProducts({name,description,price });\n    res.json(result);\n  });\n  app.get('/Products/delete/:id', async(req, res)=>{\n   \n    const {id}= req.params;\n    const result = await controller.deleteProducts(id);\n    res.json(result);\n  });\n\n  app.get('/Products/update/:id/name=:name?&description=:description?&price=:price?', async(req, res)=>{\n   \n    const {id}= req.params;\n    const {name,description,price } = req.params;\n    const result = await controller.updateProducts(id, {name,description,price});\n    res.json(result);\n  });\n  \n  app.listen(8080, ()=>{console.log(\"Listening on port 8080\")});\n  \n  \n\n}\nstart()\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581185750110
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// const test = async() =>{\n//     const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n//     // await db.run(`\n//     // CREATE TABLE productsImages (\n//     //     id integer  NOT NULL   CONSTRAINT productsImages_pk PRIMARY KEY,\n//     //     path text,\n//     //     Products_id integer NOT NULL,\n//     //     CONSTRAINT productsImages_Products FOREIGN KEY (Products_id)\n//     //     REFERENCES Products (id)\n//     // );\n//     // `);\n//     const stmt = await db.prepare(`INSERT INTO Products (name, description,price) VALUES (?, ?,?)`); \n//      let i = 0;  while(i<10){\n//              await stmt.run(`person ${i}`,`person${i}@server.com`,`${i}`); \n//        i++  }\n// }\n// export default { test }\nvar initializeDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2() {\n    var db, getProducts, controller;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context2.sent;\n\n            getProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee() {\n                var string, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        string = '';\n                        _context.next = 3;\n                        return db.all(\"SELECT  id, name,description,price FROM Products\");\n\n                      case 3:\n                        rows = _context.sent;\n                        return _context.abrupt(\"return\", rows);\n\n                      case 5:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function getProducts() {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getProducts: getProducts\n            };\n            return _context2.abrupt(\"return\", controller);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImluaXRpYWxpemVEYXRhYmFzZSIsInNxbGl0ZSIsIm9wZW4iLCJkYiIsImdldFByb2R1Y3RzIiwic3RyaW5nIiwiYWxsIiwicm93cyIsImNvbnRyb2xsZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUEsSUFBTUEsa0JBQWtCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNQQyxtQkFBT0MsSUFBUCxDQUFZLDJCQUFaLENBRE87O0FBQUE7QUFDbEJDLFlBQUFBLEVBRGtCOztBQUtqQkMsWUFBQUEsV0FMaUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHNDQUtIO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNaQyx3QkFBQUEsTUFEWSxHQUNMLEVBREs7QUFBQTtBQUFBLCtCQUVHRixFQUFFLENBQUNHLEdBQUgsQ0FBTyxrREFBUCxDQUZIOztBQUFBO0FBRVZDLHdCQUFBQSxJQUZVO0FBQUEseURBSVRBLElBSlM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFMRzs7QUFBQSw4QkFLakJILFdBTGlCO0FBQUE7QUFBQTtBQUFBOztBQVlqQkksWUFBQUEsVUFaaUIsR0FZTjtBQUNiSixjQUFBQSxXQUFXLEVBQVhBO0FBRGEsYUFaTTtBQUFBLDhDQWdCaEJJLFVBaEJnQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFsQlIsa0JBQWtCO0FBQUE7QUFBQTtBQUFBLEdBQXhCOztlQW9CZ0JBLGtCIiwic291cmNlUm9vdCI6Ii9ob21lL2FrcmFtL0NyZWFteUNyZWF0aW9ucy9iYWNrL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzcWxpdGUgZnJvbSAnc3FsaXRlJztcblxuXG4vLyBjb25zdCB0ZXN0ID0gYXN5bmMoKSA9Pntcbi8vICAgICBjb25zdCBkYiA9IGF3YWl0IHNxbGl0ZS5vcGVuKCcuL0NyZWFteUNlYXJ0aW9uZGIuc3FsaXRlJyk7XG4vLyAgICAgLy8gYXdhaXQgZGIucnVuKGBcbi8vICAgICAvLyBDUkVBVEUgVEFCTEUgcHJvZHVjdHNJbWFnZXMgKFxuLy8gICAgIC8vICAgICBpZCBpbnRlZ2VyICBOT1QgTlVMTCAgIENPTlNUUkFJTlQgcHJvZHVjdHNJbWFnZXNfcGsgUFJJTUFSWSBLRVksXG4vLyAgICAgLy8gICAgIHBhdGggdGV4dCxcbi8vICAgICAvLyAgICAgUHJvZHVjdHNfaWQgaW50ZWdlciBOT1QgTlVMTCxcbi8vICAgICAvLyAgICAgQ09OU1RSQUlOVCBwcm9kdWN0c0ltYWdlc19Qcm9kdWN0cyBGT1JFSUdOIEtFWSAoUHJvZHVjdHNfaWQpXG4vLyAgICAgLy8gICAgIFJFRkVSRU5DRVMgUHJvZHVjdHMgKGlkKVxuLy8gICAgIC8vICk7XG4vLyAgICAgLy8gYCk7XG4vLyAgICAgY29uc3Qgc3RtdCA9IGF3YWl0IGRiLnByZXBhcmUoYElOU0VSVCBJTlRPIFByb2R1Y3RzIChuYW1lLCBkZXNjcmlwdGlvbixwcmljZSkgVkFMVUVTICg/LCA/LD8pYCk7IFxuLy8gICAgICBsZXQgaSA9IDA7ICB3aGlsZShpPDEwKXtcbi8vICAgICAgICAgICAgICBhd2FpdCBzdG10LnJ1bihgcGVyc29uICR7aX1gLGBwZXJzb24ke2l9QHNlcnZlci5jb21gLGAke2l9YCk7IFxuLy8gICAgICAgIGkrKyAgfVxuLy8gfVxuXG4vLyBleHBvcnQgZGVmYXVsdCB7IHRlc3QgfVxuXG5jb25zdCBpbml0aWFsaXplRGF0YWJhc2UgPSBhc3luYygpPT57XG4gICBjb25zdCBkYiA9IGF3YWl0IHNxbGl0ZS5vcGVuKCcuL0NyZWFteUNlYXJ0aW9uZGIuc3FsaXRlJyk7XG4gICBcblxuXG4gICAgY29uc3QgZ2V0UHJvZHVjdHMgPSBhc3luYygpPT57XG4gICAgICAgIGxldCBzdHJpbmc9Jyc7XG4gICAgICAgIGNvbnN0IHJvd3MgPSBhd2FpdCBkYi5hbGwoXCJTRUxFQ1QgIGlkLCBuYW1lLGRlc2NyaXB0aW9uLHByaWNlIEZST00gUHJvZHVjdHNcIilcbiAgICAgICAgLy9yb3dzLmZvckVhY2goICh7IGlkLCBuYW1lLCBlbWFpbCB9KSA9PiBzdHJpbmcrPWBbaWQ6JHtpZH1dIC0gJHtuYW1lfSAtICR7ZW1haWx9YCkgXG4gICAgICAgIHJldHVybiByb3dzO1xuICAgIH1cblxuICAgIGNvbnN0IGNvbnRyb2xsZXI9e1xuICAgICAgICBnZXRQcm9kdWN0c1xuICAgIH1cbiAgXG4gICAgcmV0dXJuIGNvbnRyb2xsZXI7XG4gIFxufVxuXG5leHBvcnQgZGVmYXVsdCAgaW5pdGlhbGl6ZURhdGFiYXNlIDtcblxuICAgIFxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "initializeDatabase",
        "sqlite",
        "open",
        "db",
        "getProducts",
        "string",
        "all",
        "rows",
        "controller"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,IAAMA,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPC,mBAAOC,IAAP,CAAY,2BAAZ,CADO;;AAAA;AAClBC,YAAAA,EADkB;;AAKjBC,YAAAA,WALiB;AAAA;AAAA;AAAA;AAAA;AAAA,sCAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,wBAAAA,MADY,GACL,EADK;AAAA;AAAA,+BAEGF,EAAE,CAACG,GAAH,CAAO,kDAAP,CAFH;;AAAA;AAEVC,wBAAAA,IAFU;AAAA,yDAITA,IAJS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALG;;AAAA,8BAKjBH,WALiB;AAAA;AAAA;AAAA;;AAYjBI,YAAAA,UAZiB,GAYN;AACbJ,cAAAA,WAAW,EAAXA;AADa,aAZM;AAAA,8CAgBhBI,UAhBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBR,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;eAoBgBA,kB",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\n\n// const test = async() =>{\n//     const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n//     // await db.run(`\n//     // CREATE TABLE productsImages (\n//     //     id integer  NOT NULL   CONSTRAINT productsImages_pk PRIMARY KEY,\n//     //     path text,\n//     //     Products_id integer NOT NULL,\n//     //     CONSTRAINT productsImages_Products FOREIGN KEY (Products_id)\n//     //     REFERENCES Products (id)\n//     // );\n//     // `);\n//     const stmt = await db.prepare(`INSERT INTO Products (name, description,price) VALUES (?, ?,?)`); \n//      let i = 0;  while(i<10){\n//              await stmt.run(`person ${i}`,`person${i}@server.com`,`${i}`); \n//        i++  }\n// }\n\n// export default { test }\n\nconst initializeDatabase = async()=>{\n   const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n   \n\n\n    const getProducts = async()=>{\n        let string='';\n        const rows = await db.all(\"SELECT  id, name,description,price FROM Products\")\n        //rows.forEach( ({ id, name, email }) => string+=`[id:${id}] - ${name} - ${email}`) \n        return rows;\n    }\n\n    const controller={\n        getProducts\n    }\n  \n    return controller;\n  \n}\n\nexport default  initializeDatabase ;\n\n    \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581109071970
  },
  "{\"sourceRoot\":\"/home/akram/CreamyCreations/back/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/akram/CreamyCreations/back\",\"filename\":\"/home/akram/CreamyCreations/back/src/Products_db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/akram/CreamyCreations/back\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/akram/CreamyCreations/back",
      "filename": "/home/akram/CreamyCreations/back/src/Products_db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/akram/CreamyCreations/back",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/akram/CreamyCreations/back/src/Products_db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/akram/CreamyCreations/back/src/Products_db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/akram/CreamyCreations/back/src",
        "sourceFileName": "Products_db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar initializeDatabase =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var db, getProducts, getProductsByID, createProducts, deleteProducts, updateProducts, controller;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _sqlite[\"default\"].open('./CreamyCeartiondb.sqlite');\n\n          case 2:\n            db = _context6.sent;\n\n            // const getProducts = async()=>{\n            //     let string='';\n            //     const rows = await db.all(\"SELECT  id, name,description,price FROM Products\")\n            //     return rows;\n            // }\n            // const addProducts = async(props)=>{\n            //   props = {name,description,price}\n            //     const result = await db.prepare(`INSERT INTO Products (name, description,price) VALUES\n            //      ('${name}', '${description}',${price})`)\n            //     return result;\n            getProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(orderBy) {\n                var stmt, rows;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        stmt = \"SELECT  id, name,description,price FROM Products\";\n                        _context.prev = 1;\n                        _context.next = 4;\n                        return db.all(stmt);\n\n                      case 4:\n                        rows = _context.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context.next = 7;\n                          break;\n                        }\n\n                        throw new Error(\"Products are empty!\");\n\n                      case 7:\n                        return _context.abrupt(\"return\", rows);\n\n                      case 10:\n                        _context.prev = 10;\n                        _context.t0 = _context[\"catch\"](1);\n                        throw new Error(\"Could not retrieve list of products\");\n\n                      case 13:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10]]);\n              }));\n\n              return function getProducts(_x) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getProductsByID =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(id) {\n                var rows;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return db.all(\"SELECT id,name,description,price FROM Products where id=\".concat(id));\n\n                      case 3:\n                        rows = _context2.sent;\n\n                        if (!(rows.length == 0)) {\n                          _context2.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"product with id \".concat(id, \" is not found\"));\n\n                      case 6:\n                        return _context2.abrupt(\"return\", rows);\n\n                      case 9:\n                        _context2.prev = 9;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        throw new Error(\"Could not retrieve product\");\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[0, 9]]);\n              }));\n\n              return function getProductsByID(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            createProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(props) {\n                var name, description, price, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price;\n\n                        if (!(!props || !name || !description || !price)) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name and description and price\");\n\n                      case 3:\n                        _context3.prev = 3;\n                        _context3.next = 6;\n                        return db.run(\"Insert into Products (name,description,price) values ('\".concat(name, \"', '\").concat(description, \"',\").concat(price, \")\"));\n\n                      case 6:\n                        result = _context3.sent;\n                        return _context3.abrupt(\"return\", result.stmt.lastID);\n\n                      case 10:\n                        _context3.prev = 10;\n                        _context3.t0 = _context3[\"catch\"](3);\n                        throw new Error(\"This combination doesnt work\");\n\n                      case 13:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3, null, [[3, 10]]);\n              }));\n\n              return function createProducts(_x3) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            deleteProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(id) {\n                var result;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.prev = 0;\n                        _context4.next = 3;\n                        return db.run(\"Delete from Products where id = \".concat(id));\n\n                      case 3:\n                        result = _context4.sent;\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context4.next = 6;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 6:\n                        return _context4.abrupt(\"return\", true);\n\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](0);\n                        throw new Error(\"Could not delete product with id \".concat(id) + _context4.t0);\n\n                      case 12:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, null, [[0, 9]]);\n              }));\n\n              return function deleteProducts(_x4) {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n\n            updateProducts =\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(id, props) {\n                var name, description, price, stmt, result;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        name = props.name, description = props.description, price = props.price;\n\n                        if (!(!props && !(props.name && props.description && props.price))) {\n                          _context5.next = 3;\n                          break;\n                        }\n\n                        throw new Error(\"You must provide a name or an description\");\n\n                      case 3:\n                        stmt = \"\";\n\n                        if (name && description && price) {\n                          stmt = \"update Products set name = '\".concat(name, \"', description = '\").concat(description, \"' ,price = '\").concat(price, \"' where id = \").concat(id, \" \");\n                          console.log(stmt);\n                        } else if (name && !description) {\n                          stmt = \"update Products set name = '\".concat(name, \"' where id = \").concat(id, \" \");\n                        } else {\n                          stmt = \"update Products set  description = '\".concat(description, \"' where id = \").concat(id, \" \");\n                        }\n\n                        _context5.prev = 5;\n                        _context5.next = 8;\n                        return db.run(stmt);\n\n                      case 8:\n                        result = _context5.sent;\n                        console.log(result);\n\n                        if (!(result.stmt.changes == 0)) {\n                          _context5.next = 12;\n                          break;\n                        }\n\n                        throw new Error(\"Product with id \".concat(id, \" doesnt exist\"));\n\n                      case 12:\n                        return _context5.abrupt(\"return\", true);\n\n                      case 15:\n                        _context5.prev = 15;\n                        _context5.t0 = _context5[\"catch\"](5);\n                        throw new Error(\"Could not update Products with id \".concat(id) + _context5.t0);\n\n                      case 18:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5, null, [[5, 15]]);\n              }));\n\n              return function updateProducts(_x5, _x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n\n            controller = {\n              getProducts: getProducts,\n              createProducts: createProducts,\n              deleteProducts: deleteProducts,\n              updateProducts: updateProducts,\n              getProductsByID: getProductsByID\n            };\n            return _context6.abrupt(\"return\", controller);\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function initializeDatabase() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _default = initializeDatabase;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Products_db.js"
      ],
      "names": [
        "initializeDatabase",
        "sqlite",
        "open",
        "db",
        "getProducts",
        "orderBy",
        "stmt",
        "all",
        "rows",
        "length",
        "Error",
        "getProductsByID",
        "id",
        "createProducts",
        "props",
        "name",
        "description",
        "price",
        "run",
        "result",
        "lastID",
        "deleteProducts",
        "changes",
        "updateProducts",
        "console",
        "log",
        "controller"
      ],
      "mappings": "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",
      "sourceRoot": "/home/akram/CreamyCreations/back/src",
      "sourcesContent": [
        "import sqlite from 'sqlite';\n\nconst initializeDatabase = async()=>{\n   const db = await sqlite.open('./CreamyCeartiondb.sqlite');\n    // const getProducts = async()=>{\n    //     let string='';\n    //     const rows = await db.all(\"SELECT  id, name,description,price FROM Products\")\n    //     return rows;\n    // }\n    // const addProducts = async(props)=>{\n    //   props = {name,description,price}\n    //     const result = await db.prepare(`INSERT INTO Products (name, description,price) VALUES\n    //      ('${name}', '${description}',${price})`)\n    //     return result;\n    const getProducts = async orderBy => {\n        let stmt = \"SELECT  id, name,description,price FROM Products\";\n     \n        try {\n          const rows = await db.all(stmt);\n          if (rows.length == 0) {\n            throw new Error(\"Products are empty!\");\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve list of products\");\n        }\n      };\n    \n      const getProductsByID = async id => {\n        try {\n          const rows = await db.all(\n            `SELECT id,name,description,price FROM Products where id=${id}`\n          );\n          if (rows.length == 0) {\n            throw new Error(`product with id ${id} is not found`);\n          }\n          return rows;\n        } catch (err) {\n          throw new Error(\"Could not retrieve product\");\n        }\n      };\n     \n      const createProducts = async props => {\n        const { name,description,price } = props;\n        if (!props || !name || !description||!price) {\n          throw new Error(`You must provide a name and description and price`);\n        }\n        try {\n          const result = await db.run(\n            `Insert into Products (name,description,price) values ('${name}', '${description}',${price})`\n          );\n          return result.stmt.lastID;\n        } catch (err) {\n          throw new Error(\"This combination doesnt work\");\n        }\n      };\n    \n      const deleteProducts = async id => {\n        try {\n          const result = await db.run(\n            `Delete from Products where id = ${id}`\n          );\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not delete product with id ${id}` + err);\n        }\n      };\n    \n      const updateProducts = async (id, props) => {\n        const { name,description,price  } = props;\n        if (!props && !(props.name && props.description && props.price)) {\n          throw new Error(`You must provide a name or an description`);\n        }\n    \n        let stmt = \"\";\n        if (name && description && price) {\n          stmt = `update Products set name = '${name}', description = '${description}' ,price = '${price}' where id = ${id} `;\n          console.log(stmt);\n        } else if (name && !description) {\n          stmt = `update Products set name = '${name}' where id = ${id} `;\n        } else {\n          stmt = `update Products set  description = '${description}' where id = ${id} `;\n        }\n        try {\n          const result = await db.run(stmt);\n          console.log(result);\n          if (result.stmt.changes == 0) {\n            throw new Error(`Product with id ${id} doesnt exist`);\n          }\n          return true;\n        } catch (err) {\n          throw new Error(`Could not update Products with id ${id}` + err);\n        }\n      };\n    \n      const controller = {\n        getProducts,\n        createProducts,\n        deleteProducts,\n        updateProducts,\n        getProductsByID\n      };\n    \n      return controller;\n    };\n    \nexport default  initializeDatabase ;\n\n    \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581185878490
  }
}